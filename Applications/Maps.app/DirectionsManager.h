/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:37 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/WaypointsLoaderDelegate.h>
#import <Maps/GEONavigationObserver.h>
#import <libobjc.A.dylib/MNNavigationServiceObserver.h>
#import <Maps/DirectionsSessionUIDelegate.h>
#import <Maps/PBRequesterDelegate.h>
#import <libobjc.A.dylib/MKLocationManagerObserver.h>
#import <Maps/ExternalGuidanceSource.h>

@class NSMutableArray, DirectionsWaypoint, CLLocation, GEOURLRouteHandle, MNTracePlayer, TraceDataProvider, GEODirectionsRequestFeedback, NSInvocation, NavigationFeedbackCollector, WaypointsLoader, BKSProcessAssertion, CLInUseAssertion, DirectionsSession, NSDictionary, GEOMapServiceTraits, MSPMutableHistoryEntryRoute, NSDate, NSData, GEOComposedWaypoint, DrivePreferences, TransitRouteOptions, RouteManager, RouteSet, Route, NSString;

@interface DirectionsManager : NSObject <WaypointsLoaderDelegate, GEONavigationObserver, MNNavigationServiceObserver, DirectionsSessionUIDelegate, PBRequesterDelegate, MKLocationManagerObserver, ExternalGuidanceSource> {

	NSMutableArray* _observers;
	DirectionsWaypoint* _startWaypoint;
	DirectionsWaypoint* _endWaypoint;
	CLLocation* _currentLocation;
	GEOURLRouteHandle* _routeHandle;
	MNTracePlayer* _tracePlayer;
	TraceDataProvider* _traceDataProvider;
	GEODirectionsRequestFeedback* _feedback;
	NSInvocation* _readyToStartRouteInvocation;
	NavigationFeedbackCollector* _feedbackCollector;
	WaypointsLoader* _waypointsLoader;
	BKSProcessAssertion* _backgroundAssertion;
	CLInUseAssertion* _locationAssertion;
	int _auxiliaryControlsOrigin;
	int _directionsStartOptions;
	unsigned _hasSeenInitialPageLoad : 1;
	unsigned _isLoading : 1;
	unsigned _shouldStartRoute : 1;
	unsigned _isUpdatingCurrentLocation : 1;
	unsigned _isResetting : 1;
	char _shouldClearWatchPreviewRouteContextOnReset;
	char _canStart;
	char _startingRoutesLoadAfterReset;
	char _usingCacheForLastLoadingRequest;
	char _isSimulatingNavigation;
	DirectionsSession* _directionsSession;
	unsigned _transportType;
	NSDictionary* _userInfo;
	GEOMapServiceTraits* _traits;
	MSPMutableHistoryEntryRoute* _historyItem;
	NSDate* _requestDate;
	NSData* _watchPreviewRouteContext;
	GEOComposedWaypoint* _composedStartWaypoint;
	GEOComposedWaypoint* _composedEndWaypoint;
	int _chromeTransportType;
	DrivePreferences* _drivePreferences;
	TransitRouteOptions* _transitOptions;

}

@property (assign,nonatomic) unsigned transportType;                                                       //@synthesize transportType=_transportType - In the implementation block
@property (nonatomic,readonly) DirectionsSession * directionsSession;                                      //@synthesize directionsSession=_directionsSession - In the implementation block
@property (nonatomic,readonly) RouteManager * currentRouteManager; 
@property (nonatomic,readonly) RouteSet * currentRouteSet; 
@property (nonatomic,retain) Route * currentRoute; 
@property (nonatomic,readonly) int currentStepIndex; 
@property (nonatomic,readonly) char isSimulatingNavigation;                                                //@synthesize isSimulatingNavigation=_isSimulatingNavigation - In the implementation block
@property (nonatomic,readonly) DirectionsWaypoint * startWaypoint;                                         //@synthesize startWaypoint=_startWaypoint - In the implementation block
@property (nonatomic,readonly) DirectionsWaypoint * endWaypoint;                                           //@synthesize endWaypoint=_endWaypoint - In the implementation block
@property (nonatomic,readonly) GEOComposedWaypoint * composedStartWaypoint;                                //@synthesize composedStartWaypoint=_composedStartWaypoint - In the implementation block
@property (nonatomic,readonly) GEOComposedWaypoint * composedEndWaypoint;                                  //@synthesize composedEndWaypoint=_composedEndWaypoint - In the implementation block
@property (assign,nonatomic) int chromeTransportType;                                                      //@synthesize chromeTransportType=_chromeTransportType - In the implementation block
@property (nonatomic,readonly) NSDate * requestDate;                                                       //@synthesize requestDate=_requestDate - In the implementation block
@property (nonatomic,readonly) DrivePreferences * drivePreferences;                                        //@synthesize drivePreferences=_drivePreferences - In the implementation block
@property (nonatomic,copy) TransitRouteOptions * transitOptions;                                           //@synthesize transitOptions=_transitOptions - In the implementation block
@property (nonatomic,readonly) GEOURLRouteHandle * routeHandle;                                            //@synthesize routeHandle=_routeHandle - In the implementation block
@property (nonatomic,retain) MNTracePlayer * tracePlayer;                                                  //@synthesize tracePlayer=_tracePlayer - In the implementation block
@property (nonatomic,readonly) TraceDataProvider * traceDataProvider;                                      //@synthesize traceDataProvider=_traceDataProvider - In the implementation block
@property (nonatomic,readonly) GEODirectionsRequestFeedback * feedback;                                    //@synthesize feedback=_feedback - In the implementation block
@property (nonatomic,readonly) NavigationFeedbackCollector * feedbackCollector;                            //@synthesize feedbackCollector=_feedbackCollector - In the implementation block
@property (getter=isLoadingRoutes,nonatomic,readonly) char loadingRoutes; 
@property (getter=isUpdatingCurrentLocation,nonatomic,readonly) char updatingCurrentLocation;              //@synthesize isUpdatingCurrentLocation=_isUpdatingCurrentLocation - In the implementation block
@property (nonatomic,readonly) char canRunNavigationForSelectedRoute; 
@property (nonatomic,readonly) char canStart;                                                              //@synthesize canStart=_canStart - In the implementation block
@property (nonatomic,readonly) NSDictionary * userInfo;                                                    //@synthesize userInfo=_userInfo - In the implementation block
@property (nonatomic,readonly) GEOMapServiceTraits * traits;                                               //@synthesize traits=_traits - In the implementation block
@property (nonatomic,retain) MSPMutableHistoryEntryRoute * historyItem;                                    //@synthesize historyItem=_historyItem - In the implementation block
@property (nonatomic,retain) NSData * watchPreviewRouteContext;                                            //@synthesize watchPreviewRouteContext=_watchPreviewRouteContext - In the implementation block
@property (assign,nonatomic) char startingRoutesLoadAfterReset;                                            //@synthesize startingRoutesLoadAfterReset=_startingRoutesLoadAfterReset - In the implementation block
@property (nonatomic,readonly) char usingCacheForLastLoadingRequest;                                       //@synthesize usingCacheForLastLoadingRequest=_usingCacheForLastLoadingRequest - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedDirectionsManager;
+(int)sortOptionFromDefaults;
-(void)setTracePlayer:(MNTracePlayer *)arg1 ;
-(id)_startLocation;
-(id)_endLocation;
-(void)setHistoryItem:(MSPMutableHistoryEntryRoute *)arg1 ;
-(void)directionsSession:(id)arg1 didAppendRoutesInRouteSet:(id)arg2 ;
-(void)directionsSessionWillRequestRoute:(id)arg1 ;
-(void)directionsSession:(id)arg1 didReceiveRouteSet:(id)arg2 ;
-(void)directionsSessionDidFailToReceiveRoute:(id)arg1 error:(id)arg2 ;
-(void)directionsSessionWillRecalculateRoute:(id)arg1 ;
-(void)directionsSessionDidCancelRecalculate:(id)arg1 ;
-(void)directionsSession:(id)arg1 didRecalculateNewRoute:(id)arg2 ;
-(void)directionsSessionDidCancelRoute:(id)arg1 ;
-(void)directionsSession:(id)arg1 didSwitchToNewRoute:(id)arg2 ;
-(void)directionsSession:(id)arg1 didChangeRoutePreloadSession:(id)arg2 ;
-(void)directionsSession:(id)arg1 failedWithError:(id)arg2 ;
-(void)waypointsLoader:(id)arg1 didLoadWaypointsForStart:(id)arg2 startTicket:(id)arg3 end:(id)arg4 endTicket:(id)arg5 ;
-(void)waypointsLoader:(id)arg1 didFailWithError:(id)arg2 ;
-(void)_performReset;
-(RouteManager *)currentRouteManager;
-(char)canRunNavigationForSelectedRoute;
-(char)canRunNavigationForRoute:(id)arg1 ;
-(void)_recordOriginDestinationSearchResultsInTrace;
-(char)_canNavigateWithCurrentTransportType;
-(void)_startLoadNewRouteSet;
-(void)_loadRoutesInNewSessionWithStartGEOWaypoint:(id)arg1 startWaypointSearchTicket:(id)arg2 endGEOWaypoint:(id)arg3 endWaypointSearchTicket:(id)arg4 useCache:(char)arg5 traits:(id)arg6 ;
-(int)_geoTransportType;
-(unsigned)_requestMaxRouteCount;
-(unsigned)routesPerInitialPage;
-(unsigned)routesPerEarlierPage;
-(unsigned)routesPerLaterPage;
-(/*^block*/id)_routeRecorderErrorHandler;
-(void)_setUpdatingCurrentLocation:(char)arg1 ;
-(void)_updateForCurrentLocation;
-(void)_invalidateBackgroundAssertion;
-(void)_invalidateLocationAssertion;
-(void)setChromeTransportType:(int)arg1 ;
-(void)_failDuringLocationFindingWithError:(id)arg1 ;
-(void)beginLoadingRoutesFromWaypoint:(id)arg1 toWaypoint:(id)arg2 mode:(unsigned)arg3 traits:(id)arg4 drivePreferences:(id)arg5 transitRouteOptions:(id)arg6 routeHandle:(id)arg7 tracePlayer:(id)arg8 withFeedback:(id)arg9 withUserInfo:(id)arg10 ;
-(void)beginLoadingWithRequest:(id)arg1 ;
-(void)setWatchPreviewRouteContext:(NSData *)arg1 ;
-(char)isLoadingRoutes;
-(char)cacheIsAvailableForWaypoints:(id)arg1 ;
-(void)resetAvoidedTransitModes;
-(void)cancelLoadingRoutes;
-(unsigned)numberOfRoutes;
-(unsigned)indexOfRoute:(id)arg1 ;
-(void)setCurrentRoute:(Route *)arg1 ;
-(void)_succeedLoading;
-(void)startDirectionsToSelectedRouteWithOptions:(int)arg1 ;
-(DirectionsSession *)directionsSession;
-(char)isUpdatingCurrentLocation;
-(TraceDataProvider *)traceDataProvider;
-(char)startingRoutesLoadAfterReset;
-(void)setStartingRoutesLoadAfterReset:(char)arg1 ;
-(NSData *)watchPreviewRouteContext;
-(char)usingCacheForLastLoadingRequest;
-(char)isSimulatingNavigation;
-(GEOComposedWaypoint *)composedStartWaypoint;
-(GEOComposedWaypoint *)composedEndWaypoint;
-(int)chromeTransportType;
-(DrivePreferences *)drivePreferences;
-(void)setSelectedRoute:(id)arg1 ;
-(id)selectedRoute;
-(id)init;
-(void)dealloc;
-(void)addObserver:(id)arg1 ;
-(NSDictionary *)userInfo;
-(void)reset;
-(void)removeObserver:(id)arg1 ;
-(GEODirectionsRequestFeedback *)feedback;
-(GEOMapServiceTraits *)traits;
-(void)navigationDidChangeNavigationState:(id)arg1 ;
-(GEOURLRouteHandle *)routeHandle;
-(unsigned)transportType;
-(void)setTransportType:(unsigned)arg1 ;
-(id)routeAtIndex:(unsigned)arg1 ;
-(id)routes;
-(TransitRouteOptions *)transitOptions;
-(void)setTransitOptions:(TransitRouteOptions *)arg1 ;
-(DirectionsWaypoint *)startWaypoint;
-(DirectionsWaypoint *)endWaypoint;
-(int)defaultOptions;
-(Route *)currentRoute;
-(int)currentStepIndex;
-(void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2 ;
-(void)locationManagerDidReset:(id)arg1 ;
-(char)locationManagerShouldPauseLocationUpdates:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3 ;
-(void)locationManagerUpdatedLocation:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateVehicleHeading:(double)arg2 timestamp:(id)arg3 ;
-(MSPMutableHistoryEntryRoute *)historyItem;
-(void)locationManagerDidPauseLocationUpdates:(id)arg1 ;
-(void)locationManagerDidResumeLocationUpdates:(id)arg1 ;
-(char)canStart;
-(void)setVoiceGuidanceEnabled:(char)arg1 ;
-(char)repeatCurrentGuidance;
-(char)repeatCurrentTrafficAlert;
-(id)routeRepresentation;
-(MNTracePlayer *)tracePlayer;
-(void)navigationServiceDidCancelReroute:(id)arg1 ;
-(void)navigationService:(id)arg1 didReroute:(id)arg2 ;
-(void)navigationServiceWillReroute:(id)arg1 ;
-(void)navigationService:(id)arg1 didUpdateIncidentsForRoute:(id)arg2 etaRoute:(id)arg3 incidentsOffset:(unsigned)arg4 ;
-(void)navigationServiceDidArrive:(id)arg1 ;
-(void)navigationServiceDidHideSecondaryStep:(id)arg1 ;
-(void)navigationService:(id)arg1 displaySecondaryStep:(id)arg2 instructions:(id)arg3 shieldType:(int)arg4 shieldText:(id)arg5 drivingSide:(int)arg6 ;
-(void)navigationService:(id)arg1 displayPrimaryStep:(id)arg2 instructions:(id)arg3 shieldType:(int)arg4 shieldText:(id)arg5 drivingSide:(int)arg6 maneuverStepIndex:(unsigned)arg7 isSynthetic:(char)arg8 ;
-(void)navigationService:(id)arg1 didUpdateStepIndex:(unsigned)arg2 legIndex:(unsigned)arg3 ;
-(void)navigationService:(id)arg1 didUpdateMatchedLocation:(id)arg2 ;
-(void)navigationService:(id)arg1 didChangeNavigationState:(int)arg2 ;
-(void)navigationService:(id)arg1 didFailWithError:(id)arg2 ;
-(void)navigationService:(id)arg1 didChangeFromState:(unsigned)arg2 toState:(unsigned)arg3 ;
-(void)navigationService:(id)arg1 willChangeFromState:(unsigned)arg2 toState:(unsigned)arg3 ;
-(RouteSet *)currentRouteSet;
-(NSDate *)requestDate;
-(NavigationFeedbackCollector *)feedbackCollector;
@end

