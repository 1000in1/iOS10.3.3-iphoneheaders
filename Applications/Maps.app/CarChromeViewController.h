/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:31 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/StackedChromeViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Maps/CarZoomButtonViewDelegate.h>
#import <libobjc.A.dylib/_UIFocusEnvironmentPrivate.h>
#import <libobjc.A.dylib/BKSEventFocusObserving.h>
#import <Maps/CarMapSettingsDelegate.h>
#import <Maps/LightLevelObserver.h>

@protocol NSObject, CarChromeModeController;
@class MKMapView, NSArray, NSTimer, UITapGestureRecognizer, NSHashTable, CarChromeState, UIStackView, CarHeadingIndicatorView, CarSpeedSignView, CarMapPanningButton, CarMapRecenterButton, CarZoomButtonView, PersonalizedItemManager, CustomPOIsController, CarMapsFocusGuide, SearchPinsManager, DirectionsAnnotationsManager, ParkedCarManager, CarBannerController, CarNavigationDisplay, CarMapSettings, CarOverlayView, MapCameraController, CarRouteGeniusAnnotationsManager, CarMapNudgerizer, NSMapTable, CarNavigationController, DirectionsManager, DirectionsController, GEOMapServiceTraits, NSString, UIView;

@interface CarChromeViewController : StackedChromeViewController <UIGestureRecognizerDelegate, CarZoomButtonViewDelegate, _UIFocusEnvironmentPrivate, BKSEventFocusObserving, CarMapSettingsDelegate, LightLevelObserver> {

	NSTimer* _autohideIdleTimer;
	UITapGestureRecognizer* _autohideTapRecognizer;
	UITapGestureRecognizer* _doubleTapRecognizer;
	unsigned _autohideInterruptionsCount;
	NSHashTable* _interactionTokens;
	NSTimer* _navigationObscuredTimeout;
	char _isCurrentlyVisible;
	char _mapViewRegionIsChanging;
	char _configuringMapView;
	CarChromeState* _lastOverlayState;
	UIStackView* _accessoryContainerView;
	CarHeadingIndicatorView* _headingIndicator;
	id<NSObject> _headingIndicatorObserver;
	CarSpeedSignView* _speedSignView;
	id<NSObject> _speedSignObserver;
	char _userPermitsSpeedSign;
	UIStackView* _mapControlContainerView;
	CarMapPanningButton* _explicitPanButton;
	CarMapRecenterButton* _recenterButton;
	CarZoomButtonView* _zoomControls;
	PersonalizedItemManager* _personalizedItemManager;
	CustomPOIsController* _customPOIsController;
	id<CarChromeModeController> _restoreFocusForMode;
	char _appControlsFocus;
	CarMapsFocusGuide* _overlayFocusGuide;
	char _runningNavigation;
	char _haveVehicleDirection;
	SearchPinsManager* _searchPinsManager;
	DirectionsAnnotationsManager* _directionsAnnotationsManager;
	ParkedCarManager* _parkedCarManager;
	CarBannerController* _bannerController;
	CarNavigationDisplay* _navigationDisplay;
	CarMapSettings* _defaultMapSettings;
	CarOverlayView* _overlayView;
	MapCameraController* _cameraController;
	CarRouteGeniusAnnotationsManager* _routeGeniusAnnotationsManager;
	CarMapNudgerizer* _nudgerizer;
	UITapGestureRecognizer* _backButtonRecognizer;
	/*^block*/id _doubleTapBlock;
	NSMapTable* _lastFocusedIdentifiersByMode;
	NSMapTable* _lastFocusedItemsByMode;

}

@property (nonatomic,__weak,readonly) CarNavigationController * carNavigationController; 
@property (nonatomic,retain) CarNavigationDisplay * navigationDisplay;                                                                        //@synthesize navigationDisplay=_navigationDisplay - In the implementation block
@property (assign,getter=isRunningNavigation,nonatomic) char runningNavigation;                                                               //@synthesize runningNavigation=_runningNavigation - In the implementation block
@property (nonatomic,retain) CarMapSettings * defaultMapSettings;                                                                             //@synthesize defaultMapSettings=_defaultMapSettings - In the implementation block
@property (assign,nonatomic) char haveVehicleDirection;                                                                                       //@synthesize haveVehicleDirection=_haveVehicleDirection - In the implementation block
@property (nonatomic,retain) CarOverlayView * overlayView;                                                                                    //@synthesize overlayView=_overlayView - In the implementation block
@property (nonatomic,retain) MapCameraController * cameraController;                                                                          //@synthesize cameraController=_cameraController - In the implementation block
@property (nonatomic,retain) CarRouteGeniusAnnotationsManager * routeGeniusAnnotationsManager;                                                //@synthesize routeGeniusAnnotationsManager=_routeGeniusAnnotationsManager - In the implementation block
@property (nonatomic,retain) CarMapNudgerizer * nudgerizer;                                                                                   //@synthesize nudgerizer=_nudgerizer - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * backButtonRecognizer;                                                                   //@synthesize backButtonRecognizer=_backButtonRecognizer - In the implementation block
@property (nonatomic,copy) id doubleTapBlock;                                                                                                 //@synthesize doubleTapBlock=_doubleTapBlock - In the implementation block
@property (nonatomic,retain) NSMapTable * lastFocusedIdentifiersByMode;                                                                       //@synthesize lastFocusedIdentifiersByMode=_lastFocusedIdentifiersByMode - In the implementation block
@property (nonatomic,retain) NSMapTable * lastFocusedItemsByMode;                                                                             //@synthesize lastFocusedItemsByMode=_lastFocusedItemsByMode - In the implementation block
@property (nonatomic,readonly) id<CarChromeModeController> topMode; 
@property (nonatomic,retain) SearchPinsManager * searchPinsManager;                                                                           //@synthesize searchPinsManager=_searchPinsManager - In the implementation block
@property (nonatomic,retain) DirectionsAnnotationsManager * directionsAnnotationsManager;                                                     //@synthesize directionsAnnotationsManager=_directionsAnnotationsManager - In the implementation block
@property (nonatomic,readonly) DirectionsManager * directionsManager; 
@property (nonatomic,readonly) DirectionsController * directionsController; 
@property (nonatomic,readonly) ParkedCarManager * parkedCarManager;                                                                           //@synthesize parkedCarManager=_parkedCarManager - In the implementation block
@property (nonatomic,readonly) PersonalizedItemManager * personalizedItemManager;                                                             //@synthesize personalizedItemManager=_personalizedItemManager - In the implementation block
@property (nonatomic,retain) CarBannerController * bannerController;                                                                          //@synthesize bannerController=_bannerController - In the implementation block
@property (nonatomic,readonly) GEOMapServiceTraits * navigationAwareTraits; 
@property (assign,getter=isAutohidingContentForCurrentModeHidden,nonatomic) char autohidingContentForCurrentModeHidden; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (readonly) MKMapView * mapView; 
@property (nonatomic,copy,readonly) NSArray * preferredFocusEnvironments; 
@property (nonatomic,__weak,readonly) UIView * preferredFocusedView; 
@property (getter=_parentFocusEnvironment,nonatomic,__weak,readonly) id<UIFocusEnvironment> parentFocusEnvironment; 
@property (getter=_focusedItemRegionContainer,nonatomic,__weak,readonly) id<_UIFocusRegionContainer> focusedItemRegionContainer; 
@property (getter=_preferredFocusMovementStyle,nonatomic,readonly) int preferredFocusMovementStyle; 
@property (getter=_linearFocusMovementSequences,nonatomic,copy,readonly) NSArray * linearFocusMovementSequences; 
+(Class)containingViewClass;
+(Class)chromeViewItemClass;
+(id)mapReplacementColor;
+(Class)userLocationViewClass;
+(void)initialize;
+(Class)navigationBarClass;
+(Class)navigationControllerClass;
-(void)lightLevelController:(id)arg1 didUpdateLightLevel:(int)arg2 ;
-(char)mapSettings:(id)arg1 shouldApplyAnimated:(char*)arg2 ;
-(void)mapSettings:(id)arg1 willApplyAnimated:(char)arg2 ;
-(void)mapSettings:(id)arg1 didApplyAnimated:(char)arg2 ;
-(void)zoomInButtonPressed;
-(void)zoomOutButtonPressed;
-(CarNavigationController *)carNavigationController;
-(id)newTraits;
-(void)setSuppressed:(char)arg1 ;
-(void)didSuppress;
-(void)didUnsuppress;
-(void)_createNavigationControllerIfNeeded;
-(id)createMapReplacementView;
-(void)_setupPersonalizedMaps;
-(DirectionsManager *)directionsManager;
-(DirectionsController *)directionsController;
-(SearchPinsManager *)searchPinsManager;
-(DirectionsAnnotationsManager *)directionsAnnotationsManager;
-(CarRouteGeniusAnnotationsManager *)routeGeniusAnnotationsManager;
-(CarMapNudgerizer *)nudgerizer;
-(CarMapSettings *)defaultMapSettings;
-(id)transientMapSettings;
-(char)getPreferredUserInterfaceIdiom:(out int*)arg1 ;
-(void)layoutForUnobscuredBoundsChange;
-(UIEdgeInsets)obscuredInsetsForBoundsOptions:(int)arg1 ;
-(UIEdgeInsets)mapInsetsIncludingBarsWithNonopaqueParts:(char)arg1 ;
-(char)_shouldTopBarModifyMapInsets;
-(float)_topBarInset;
-(char)_shouldAccessoriesModifyMapInsets;
-(float)_accessoryInset;
-(void)_applyNavigationBarStyleForMode:(id)arg1 ;
-(char)navigationTransitionShouldOccurImmediately;
-(void)_navigationControllerWillShowMode:(id)arg1 fromMode:(id)arg2 animated:(char)arg3 ;
-(void)_navigationControllerWillPopMode:(id)arg1 toMode:(id)arg2 ;
-(char)_navigationControllerCarplayHackShouldPopToMode:(id)arg1 ;
-(void)currentModeWillChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(void)currentModeDidChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(id)topCarItem;
-(id<CarChromeModeController>)topMode;
-(void)_carExternalAccessoryStateUpdated:(id)arg1 ;
-(/*^block*/id)presentInterruptionOfKind:(int)arg1 userInfo:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(/*^block*/id)_presentSearchRefinementWithUserInfo:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)updateLightLevelAnimated:(char)arg1 lightLevel:(int)arg2 ;
-(void)performUpdateForChangeToLightLevel:(int)arg1 animation:(id)arg2 ;
-(void)_resetMapViewDefaults:(id)arg1 ;
-(void)mapViewInstanceDidChange;
-(char)shouldAnimateMapTransition:(char)arg1 ;
-(void)invalidateMapInsetsAnimated:(char)arg1 ;
-(char)shouldRecenterAndZoom;
-(void)_locationAuthorizationDidChange:(id)arg1 ;
-(GEOMapServiceTraits *)navigationAwareTraits;
-(void)startRunningNavigationAnimated:(char)arg1 ;
-(void)stopRunningNavigationAnimated:(char)arg1 ;
-(void)_startNavigationDisplayAnimated:(char)arg1 ;
-(void)_startNavigationObscuredTimeout;
-(void)_restartNavigationObscuredTimeout;
-(void)_stopNavigationObscuredTimeout;
-(void)_navigationObscuredTimeoutFired:(id)arg1 ;
-(void)enableDoubleTapRecognizerWithBlock:(/*^block*/id)arg1 ;
-(void)disableDoubleTapRecognizer;
-(void)setNeedsFocusUpdateIfUnfocused;
-(char)_shouldAllowKnobFocusMovement;
-(char)_nudgeHandlesPress:(id)arg1 ;
-(char)suppressIdleFocus;
-(id)visuallySelectedItem;
-(NSMapTable *)lastFocusedIdentifiersByMode;
-(NSMapTable *)lastFocusedItemsByMode;
-(void)_preserveFocusedItemFromMode:(id)arg1 toMode:(id)arg2 ;
-(float)_accessoryGutterWidth;
-(void)_reloadAccessoriesForMode:(id)arg1 animated:(char)arg2 ;
-(void)_reloadAccessoryVisibilityAnimated:(char)arg1 ;
-(char)_shouldAccessoryViewBeVisible;
-(void)_layoutAccessoryView;
-(float)_accessoryViewOffset;
-(void)updateZoomControls;
-(void)updateNavPanRecenterButtonVisibility;
-(void)_reloadMapControlsForMode:(id)arg1 animated:(char)arg2 ;
-(void)_reloadMapControlVisibilityAnimated:(char)arg1 ;
-(char)_shouldMapControlsBeVisible;
-(void)_layoutMapControlView;
-(float)_mapControlGutterWidth;
-(float)_mapControlViewWidth;
-(CGRect)_mapControlViewFrame;
-(float)_mapControlViewOffset;
-(void)_recenterButtonPressed;
-(void)_explicitPanButtonPressed;
-(id)_userActionDetailsWithMapItem:(id)arg1 resultIndex:(int)arg2 ;
-(int)_currentUsageTarget;
-(void)_captureUserActionBackToMode:(id)arg1 ;
-(void)captureUserAction:(int)arg1 onTarget:(int)arg2 ;
-(void)captureUserAction:(int)arg1 onTarget:(int)arg2 eventValue:(id)arg3 ;
-(void)captureUserAction:(int)arg1 ;
-(void)captureUserAction:(int)arg1 mapItem:(id)arg2 ;
-(void)captureUserAction:(int)arg1 mapItem:(id)arg2 atResultIndex:(int)arg3 ;
-(void)captureUserAction:(int)arg1 selectedRouteIndex:(int)arg2 ;
-(void)captureUserActionChangedTrackingMode:(int)arg1 ;
-(void)captureUserActionPannedInDirection:(int)arg1 ;
-(void)captureUserActionSelectedSearchCategory:(id)arg1 categoriesDisplayed:(id)arg2 ;
-(void)_createOverlayViewIfNeeded;
-(void)_tearDownOverlayView;
-(void)_createOverlayFocusGuide;
-(void)_tearDownOverlayFocusGuide;
-(float)overlayWidth;
-(void)reloadOverlays:(char)arg1 ;
-(void)_updateOverlayInGroupAnimation:(id)arg1 ;
-(id)_overlayItemsForMode:(id)arg1 forState:(id)arg2 ;
-(id)_currentOverlayState;
-(void)_layoutOverlayView;
-(CGRect)_overlayFrame;
-(float)_overlayOffset;
-(void)_presentOverlayForMode:(id)arg1 fromMode:(id)arg2 animated:(char)arg3 ;
-(void)setNeedsAutohideBehaviorUpdateForMode:(id)arg1 ;
-(void)_requestAutohideBehaviorForMode:(id)arg1 ;
-(char)_autohidingContentIsHiddenForMode:(id)arg1 ;
-(void)_setAutohidingContentIsHidden:(char)arg1 forMode:(id)arg2 ;
-(int)_autohidingBehaviorForMode:(id)arg1 ;
-(void)_setAutohideBehavior:(int)arg1 forMode:(id)arg2 ;
-(void)_updateAutohideBehavior;
-(void)_autohideBecameIdle;
-(void)_autohideGestureRecognizerDetectedTap:(id)arg1 ;
-(void)_humanPresenceDidChange;
-(void)_beginAutohideInterruptingInteractionsWithCount:(unsigned)arg1 ;
-(void)_endAutohideInterruptingInteractionsWithCount:(unsigned)arg1 ;
-(void)interruptAutohideForIncidentalInteraction;
-(void)setAutohidingContentForCurrentModeHidden:(char)arg1 ;
-(char)isAutohidingContentForCurrentModeHidden;
-(char)isAutohidingContentHiddenForMode:(id)arg1 ;
-(void)_startAutohideIdleTimerIfStopped;
-(void)restartAutohideIdleTimerIfStarted;
-(void)_restartAutohideIdleTimer;
-(void)_stopAutohideIdleTimer;
-(void)_addAutohideGestureRecognizer;
-(void)_removeAutohideGestureRecognizer;
-(void)beginInterruptingAutohideWithToken:(id)arg1 ;
-(void)endInterruptingAutohideWithToken:(id)arg1 ;
-(void)setHardwareBackButtonBehavior:(int)arg1 forMode:(id)arg2 ;
-(void)updateHardwareBackButtonBehavior;
-(id)_previousMode;
-(void)_handleBackButtonPressed:(id)arg1 ;
-(char)isTopBarAlertViewVisible;
-(id)topBarAlertView;
-(void)presentTopBarAlertView:(id)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(void)dismissTopBarAlertViewAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)searchPinsManager:(id)arg1 displayPlaceCardForResult:(id)arg2 ;
-(void)setSearchPinsManager:(SearchPinsManager *)arg1 ;
-(void)setDirectionsAnnotationsManager:(DirectionsAnnotationsManager *)arg1 ;
-(ParkedCarManager *)parkedCarManager;
-(PersonalizedItemManager *)personalizedItemManager;
-(CarBannerController *)bannerController;
-(void)setBannerController:(CarBannerController *)arg1 ;
-(CarNavigationDisplay *)navigationDisplay;
-(void)setNavigationDisplay:(CarNavigationDisplay *)arg1 ;
-(char)isRunningNavigation;
-(void)setRunningNavigation:(char)arg1 ;
-(void)setDefaultMapSettings:(CarMapSettings *)arg1 ;
-(char)haveVehicleDirection;
-(void)setHaveVehicleDirection:(char)arg1 ;
-(void)setRouteGeniusAnnotationsManager:(CarRouteGeniusAnnotationsManager *)arg1 ;
-(void)setNudgerizer:(CarMapNudgerizer *)arg1 ;
-(UITapGestureRecognizer *)backButtonRecognizer;
-(void)setBackButtonRecognizer:(UITapGestureRecognizer *)arg1 ;
-(id)doubleTapBlock;
-(void)setDoubleTapBlock:(id)arg1 ;
-(void)setLastFocusedIdentifiersByMode:(NSMapTable *)arg1 ;
-(void)setLastFocusedItemsByMode:(NSMapTable *)arg1 ;
-(id)init;
-(void)dealloc;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(void)pressesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)pressesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)pressesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(id)_linearFocusMovementSequences;
-(void)pressesChanged:(id)arg1 withEvent:(id)arg2 ;
-(void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2 ;
-(NSArray *)preferredFocusEnvironments;
-(id)_parentFocusEnvironment;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewDidDisappear:(char)arg1 ;
-(void)viewDidLayoutSubviews;
-(void)viewDidLoad;
-(void)focusedDeferralPropertiesDidChange:(id)arg1 ;
-(CGRect)_accessoryViewFrame;
-(void)zoomIn;
-(void)zoomOut;
-(MapCameraController *)cameraController;
-(void)setCameraController:(MapCameraController *)arg1 ;
-(void)_userDefaultsDidChange:(id)arg1 ;
-(UIEdgeInsets)labelEdgeInsets;
-(void)mapViewDidAnimateInAnnotationViews:(id)arg1 ;
-(void)mapView:(id)arg1 didStopRespondingToGesture:(int)arg2 zoomDirection:(int)arg3 didDecelerate:(char)arg4 tiltDirection:(int)arg5 ;
-(void)mapViewNavigationCameraHasStoppedPanning:(id)arg1 ;
-(void)mapViewNavigationCameraHasStartedPanning:(id)arg1 ;
-(void)mapView:(id)arg1 canZoomOutDidChange:(char)arg2 ;
-(void)mapView:(id)arg1 canZoomInDidChange:(char)arg2 ;
-(id)mapView:(id)arg1 painterForVectorOverlay:(id)arg2 ;
-(void)setInactive:(char)arg1 ;
-(void)_handleDoubleTap:(id)arg1 ;
-(void)setOverlayView:(CarOverlayView *)arg1 ;
-(CarOverlayView *)overlayView;
-(void)setMapView:(MKMapView *)arg1 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapViewDidFinishRenderingMap:(id)arg1 fullyRendered:(char)arg2 ;
-(id)mapView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2 ;
-(void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2 ;
-(id)mapViewDelegate;
@end

