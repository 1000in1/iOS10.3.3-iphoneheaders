/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:43 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <AppSupportUI/NUIContainerView.h>
#import <libobjc.A.dylib/_NUIGridArrangementContainer.h>

@class NSMutableArray, NSString;

@interface NUIContainerStackView : NUIContainerView <_NUIGridArrangementContainer> {

	NSMutableArray* _spacingViews;
	vector<float, std::__1::allocator<float> >* _spacingAfter;
	NUIGridArrangement* _visibleArrangement;
	CGSize _visibleCount;
	SCD_Struct_Ro27 _stackViewFlags;
	int _axis;
	int _distribution;
	int _alignment;
	float _spacing;
	Class _spacingViewClass;

}

@property (assign,nonatomic,__weak) id<NUIContainerStackViewDelegate> delegate; 
@property (assign,nonatomic) int axis;                                                       //@synthesize axis=_axis - In the implementation block
@property (assign,nonatomic) int distribution;                                               //@synthesize distribution=_distribution - In the implementation block
@property (assign,nonatomic) int alignment;                                                  //@synthesize alignment=_alignment - In the implementation block
@property (assign,nonatomic) float spacing;                                                  //@synthesize spacing=_spacing - In the implementation block
@property (nonatomic,retain) Class spacingViewClass;                                         //@synthesize spacingViewClass=_spacingViewClass - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)setAlignment:(int)arg1 ;
-(void)setDelegate:(id<NUIContainerStackViewDelegate>)arg1 ;
-(void)dealloc;
-(id)initWithArrangedSubviews:(id)arg1 ;
-(void)setAxis:(int)arg1 ;
-(void)setDistribution:(int)arg1 ;
-(void)setSpacing:(float)arg1 ;
-(id)viewForLastBaselineLayout;
-(int)alignment;
-(int)axis;
-(int)distribution;
-(float)spacing;
-(void)setBaselineRelativeArrangement:(char)arg1 ;
-(id)viewForFirstBaselineLayout;
-(id)_baselineViewVendForFirstBaseline:(char)arg1 ;
-(void)setSpacingViewClass:(Class)arg1 ;
-(Class)spacingViewClass;
-(void)setSpacing:(float)arg1 afterArrangedSubviewAtIndex:(int)arg2 ;
-(float)spacingAfterArrangedSubviewAtIndex:(int)arg1 ;
-(void)populateGridArrangementCells:(vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >*)arg1 ;
-(void)populateGridArrangementDimension:(vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >*)arg1 withCells:(const vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >*)arg2 axis:(int)arg3 ;
-(void)invalidateIntrinsicContentSizeRequiringArrangedSubviewRemeasurement:(char)arg1 ;
-(id)arrangedDescription;
-(CGSize)calculateArrangedSizeFittingSize:(CGSize)arg1 ;
-(char)layoutArrangedSubviewsInBounds:(CGRect)arg1 ;
-(void)didInsertArrangedSubview:(id)arg1 atIndex:(int)arg2 ;
-(void)didRemoveArrangedSubview:(id)arg1 atIndex:(int)arg2 ;
-(int)_effectiveAlignmentForArrangedSubview:(id)arg1 ;
@end

