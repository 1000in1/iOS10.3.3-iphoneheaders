/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:38 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIGestureRecognizerDelegate.h>

@protocol MKLocationManagerOperation;
@class UILongPressGestureRecognizer, IOSChromeViewController, NSString;

@interface MapsLaunchHandler : NSObject <UIGestureRecognizerDelegate> {

	id<MKLocationManagerOperation> _singleLocationUpdater;
	UILongPressGestureRecognizer* _locateOnLaunchMapGestureRecognizer;
	char _userHasInteractedWithMapSinceStartup;
	char _shouldLaunchIntoNav;
	char _didLaunchWithExplicitIntent;
	char _mapIsRendering;
	char _shouldLaunchIntoNavWithoutDelay;
	IOSChromeViewController* _iosChromeController;

}

@property (assign,nonatomic,__weak) IOSChromeViewController * iosChromeController;              //@synthesize iosChromeController=_iosChromeController - In the implementation block
@property (assign,nonatomic) char shouldLaunchIntoNav;                                          //@synthesize shouldLaunchIntoNav=_shouldLaunchIntoNav - In the implementation block
@property (assign,nonatomic) char shouldLaunchIntoNavWithoutDelay;                              //@synthesize shouldLaunchIntoNavWithoutDelay=_shouldLaunchIntoNavWithoutDelay - In the implementation block
@property (assign,nonatomic) char didLaunchWithExplicitIntent;                                  //@synthesize didLaunchWithExplicitIntent=_didLaunchWithExplicitIntent - In the implementation block
@property (nonatomic,readonly) char mapIsRendering;                                             //@synthesize mapIsRendering=_mapIsRendering - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)waitForLocationWithTimeout:(double)arg1 maxLocationAge:(double)arg2 andPerform:(/*^block*/id)arg3 ;
+(void)perform:(/*^block*/id)arg1 afterWaitingForLocationFix:(char)arg2 ;
+(void)waitForLocationWithTimeout:(double)arg1 andPerform:(/*^block*/id)arg2 ;
+(void)waitForLocationAndPeform:(/*^block*/id)arg1 ;
-(id)mainChrome;
-(id)mainMapView;
-(IOSChromeViewController *)iosChromeController;
-(void)setIosChromeController:(IOSChromeViewController *)arg1 ;
-(void)_willHandleLaunch;
-(id)mapsURLDelegate;
-(id)appCoordinator;
-(id)carMapView;
-(id)_carChromeViewController;
-(char)launchWithOptions:(id)arg1 ;
-(void)zoomWithOptions:(id)arg1 ;
-(void)_launchToCurrentLocationWithOptions:(id)arg1 ;
-(char)launchIntoShowMapItems:(id)arg1 options:(id)arg2 ;
-(char)launchIntoRAPForMapItem:(id)arg1 options:(id)arg2 ;
-(char)launchIntoTableBookingForMapItem:(id)arg1 options:(id)arg2 ;
-(char)launchIntoSearchWithMapItems:(id)arg1 options:(id)arg2 ;
-(char)launchWithSearchAlongRouteCategory:(id)arg1 options:(id)arg2 ;
-(char)launchIntoSearchWithSearchResults:(id)arg1 options:(id)arg2 ;
-(char)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2 ;
-(char)launchIntoDirectionsWithMapItems:(id)arg1 options:(id)arg2 originIsActiveWatch:(char)arg3 ;
-(char)launchIntoDirectionsWithSearchResults:(id)arg1 options:(id)arg2 ;
-(char)launchIntoDirectionsWithSearchResults:(id)arg1 options:(id)arg2 originIsActiveWatch:(char)arg3 ;
-(char)launchIntoTracePlayback:(id)arg1 ;
-(char)launchWithProblemResolutionNotification:(id)arg1 withPrompt:(char)arg2 ;
-(char)launchWithCategory:(id)arg1 ;
-(char)launchIntoParkedCarAndPerformAction:(int)arg1 ;
-(char)launchWithSyncedBookmark:(id)arg1 withPrompt:(char)arg2 ;
-(char)launchWithAnnouncement:(id)arg1 ;
-(void)_resetApplicationState;
-(void)_resetApplicationStateHidingSearch:(char)arg1 ;
-(void)launchWithShortcutItem:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_unconditionallyLaunchWithShortcutItem:(id)arg1 ;
-(SCD_Struct_RA12)regionForLaunchOptions:(id)arg1 andSearchResults:(id)arg2 ;
-(void)mapViewWillStartRendering;
-(void)mapViewDidFinishRendering;
-(void)_enterTrackingModeForOffscreenLocation:(id)arg1 ;
-(char)_determineValueForKey:(id)arg1 ;
-(void)_enterTrackingModeIfDistanceTraveledForLocation:(id)arg1 ;
-(void)_cancelLocateOnLaunch;
-(char)shouldLaunchIntoNav;
-(void)setShouldLaunchIntoNav:(char)arg1 ;
-(char)didLaunchWithExplicitIntent;
-(void)setDidLaunchWithExplicitIntent:(char)arg1 ;
-(char)mapIsRendering;
-(char)shouldLaunchIntoNavWithoutDelay;
-(void)setShouldLaunchIntoNavWithoutDelay:(char)arg1 ;
-(void)_getDefaultAlertTitle:(out id*)arg1 alertMessage:(out id*)arg2 forProblemStatusResponse:(id)arg3 ;
-(char)_getSingleServerSideAlertTitle:(out id*)arg1 message:(out id*)arg2 messageIsSameAsNotificationTitle:(out char*)arg3 forProblemStatusResponse:(id)arg4 ;
-(void)_displayAdditionalUIForProblemStatusResponse:(id)arg1 ;
-(char)_canDisplayAdditionalUIForProblemStatusResponse:(id)arg1 ;
-(void)_displayDedicatedFixedProblemViewControllerForProblemStatusResponse:(id)arg1 ;
-(void)dealloc;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)applicationDidBecomeActive;
-(void)applicationWillResignActive;
@end

