/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:39 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <UIKit/UIResponder.h>
#import <UIKit/UIApplicationTestingDelegate.h>
#import <Maps/RAPSubmitterDelegate.h>
#import <libobjc.A.dylib/MSPMapsPushDaemonProxyObserver.h>
#import <libobjc.A.dylib/NSUserActivityDelegate.h>
#import <Maps/GEONavigationObserver.h>
#import <libobjc.A.dylib/CNContactPickerDelegate.h>
#import <Maps/CarDisplayDelegate.h>
#import <Maps/MapTypeSource.h>
#import <libobjc.A.dylib/MSPContainerObserver.h>
#import <UIKit/UIApplicationDelegate.h>
#import <UIKit/UIApplicationDelegatePrivate.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <Maps/BackgroundNavigationDelegate.h>
#import <Maps/PrintControllerDelegate.h>
#import <libobjc.A.dylib/MNNavigationServiceObserver.h>

@protocol LoadingToken;
@class UIWindow, TopViewController, NSTimer, NSUserActivity, NSMutableSet, CLInUseAssertion, SBSStatusBarStyleOverridesAssertion, DataActivationPopupAssertion, ForegroundOnlyDataActivationPopupAssertion, DirectionsController, POISearchManager, FavoritesiCloudSyncClient, HistoryiCloudSyncClient, FavoritesSpotlightIndexingClient, CarDisplayController, TransitWidgetAlertManager, UINavigationController, MapsDebugController, NSHashTable, RAPReportComposerViewController, RAPAddAPlaceReportComposer, RAPSubmitter, RAPAddAPlaceNavigationController, NSDictionary, DefaultTransportTypeFinder, AppCoordinator, IOSChromeViewController, NSDate, MapsLaunchHandler, MapsURLHandler, PrintController, BKSProcessAssertion, NSString, LightLevelController, NSArray, MapsActivity;

@interface MapsAppDelegate : UIResponder <UIApplicationTestingDelegate, RAPSubmitterDelegate, MSPMapsPushDaemonProxyObserver, NSUserActivityDelegate, GEONavigationObserver, CNContactPickerDelegate, CarDisplayDelegate, MapTypeSource, MSPContainerObserver, UIApplicationDelegate, UIApplicationDelegatePrivate, UINavigationControllerDelegate, BackgroundNavigationDelegate, PrintControllerDelegate, MNNavigationServiceObserver> {

	TopViewController* _rootViewController;
	int _navNotifyToken;
	char _hasNavNotifyToken;
	char _isNavigating;
	char _isSteppingForTransitFromCurrentLocation;
	char _isTrackingLocation;
	char _isShowingTour;
	char _running;
	char _isHoldingUserActivityForSearchIndexing;
	char _needToUpdateHandoff;
	char _carNavigationWasVisible;
	char _isRestoringState;
	NSTimer* _directionsTimestampTimer;
	NSUserActivity* _mapsUserActivity;
	NSMutableSet* _navigatorsSuspendingIdleTimer;
	CLInUseAssertion* _inUseAssertion;
	SBSStatusBarStyleOverridesAssertion* _doubleHeightStatusBarAssertion;
	DataActivationPopupAssertion* _navigatorDataActivationPopupAssertion;
	ForegroundOnlyDataActivationPopupAssertion* _foregroundDataActivationPopupAssertion;
	DirectionsController* _directionsController;
	POISearchManager* _poiSearchManager;
	id<LoadingToken> _continuityLoadingToken;
	FavoritesiCloudSyncClient* _favoritesSyncClient;
	HistoryiCloudSyncClient* _historySyncClient;
	FavoritesSpotlightIndexingClient* _favoritesSpotlightIndexingClient;
	CarDisplayController* _carDisplayController;
	TransitWidgetAlertManager* _transitWidgetAlertManager;
	SBSThermalWarningAssertionRef _thermalWarningSuppressionAssertion;
	int _idleTimerDisabledCount;
	int _idleTimerDisabledIfChargedCount;
	int _idleTimerDisabledReasonCounter[3];
	int _batteryMonitorCount;
	int _batteryMonitorReasonCounter[2];
	UINavigationController* _debugNavigationController;
	MapsDebugController* _mapsDebugController;
	NSHashTable* _directionSessionUIObserversSet;
	RAPReportComposerViewController* _reportComposer;
	RAPAddAPlaceReportComposer* _addAPlaceReportComposer;
	RAPSubmitter* _submitter;
	unsigned _reportAProblemSubmitterAssertion;
	char _backgroundTaskExpired;
	RAPAddAPlaceNavigationController* _addAPlaceNavigationController;
	char _mapsIsNavigating;
	char _mapsIsNavigatingTurnByTurn;
	char _debugAutomaticNightMode;
	char _coreRoutineEnabled;
	NSDictionary* __cachedMapsActivity;
	DefaultTransportTypeFinder* _defaultTransportTypeFinder;
	UIWindow* _window;
	AppCoordinator* _appCoordinator;
	IOSChromeViewController* _chromeViewController;
	NSDate* _enteredForegroundDate;
	MapsLaunchHandler* _mapsLaunchHandler;
	MapsURLHandler* _mapsURLHandler;
	PrintController* _printController;
	BKSProcessAssertion* _priorityAssertion;
	BKSProcessAssertion* _steppingAssertion;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,retain) UIWindow * window; 
@property (nonatomic,readonly) int currentInterruptionKind; 
@property (nonatomic,readonly) LightLevelController * lightLevelController; 
@property (nonatomic,retain) BKSProcessAssertion * priorityAssertion;                                            //@synthesize priorityAssertion=_priorityAssertion - In the implementation block
@property (nonatomic,retain) BKSProcessAssertion * steppingAssertion;                                            //@synthesize steppingAssertion=_steppingAssertion - In the implementation block
@property (nonatomic,retain) NSDate * enteredForegroundDate;                                                     //@synthesize enteredForegroundDate=_enteredForegroundDate - In the implementation block
@property (retain) NSDictionary * _cachedMapsActivity;                                                           //@synthesize _cachedMapsActivity=__cachedMapsActivity - In the implementation block
@property (nonatomic,retain) UIWindow * window;                                                                  //@synthesize window=_window - In the implementation block
@property (nonatomic,retain) AppCoordinator * appCoordinator;                                                    //@synthesize appCoordinator=_appCoordinator - In the implementation block
@property (nonatomic,readonly) IOSChromeViewController * chromeViewController;                                   //@synthesize chromeViewController=_chromeViewController - In the implementation block
@property (nonatomic,readonly) char canPlayTrace; 
@property (assign,nonatomic) char mapsIsNavigating;                                                              //@synthesize mapsIsNavigating=_mapsIsNavigating - In the implementation block
@property (assign,nonatomic) char mapsIsNavigatingTurnByTurn;                                                    //@synthesize mapsIsNavigatingTurnByTurn=_mapsIsNavigatingTurnByTurn - In the implementation block
@property (nonatomic,readonly) NSArray * directionSessionUIObservers; 
@property (nonatomic,readonly) DefaultTransportTypeFinder * defaultTransportTypeFinder;                          //@synthesize defaultTransportTypeFinder=_defaultTransportTypeFinder - In the implementation block
@property (assign,nonatomic) char debugAutomaticNightMode;                                                       //@synthesize debugAutomaticNightMode=_debugAutomaticNightMode - In the implementation block
@property (nonatomic,readonly) MapsLaunchHandler * mapsLaunchHandler;                                            //@synthesize mapsLaunchHandler=_mapsLaunchHandler - In the implementation block
@property (nonatomic,readonly) MapsURLHandler * mapsURLHandler;                                                  //@synthesize mapsURLHandler=_mapsURLHandler - In the implementation block
@property (nonatomic,readonly) DirectionsController * directionsController; 
@property (nonatomic,retain) MapsActivity * mapsActivity; 
@property (nonatomic,readonly) PrintController * printController;                                                //@synthesize printController=_printController - In the implementation block
@property (getter=isRestoringState,nonatomic,readonly) char isRestoringState; 
@property (nonatomic,readonly) FavoritesSpotlightIndexingClient * favoritesSpotlightIndexingClient;              //@synthesize favoritesSpotlightIndexingClient=_favoritesSpotlightIndexingClient - In the implementation block
@property (nonatomic,readonly) FavoritesiCloudSyncClient * favoritesSyncClient;                                  //@synthesize favoritesSyncClient=_favoritesSyncClient - In the implementation block
@property (nonatomic,readonly) HistoryiCloudSyncClient * historySyncClient;                                      //@synthesize historySyncClient=_historySyncClient - In the implementation block
@property (getter=isCoreRoutineEnabled,nonatomic,readonly) char coreRoutineEnabled;                              //@synthesize coreRoutineEnabled=_coreRoutineEnabled - In the implementation block
@property (nonatomic,readonly) int displayedMapType; 
-(DirectionsController *)directionsController;
-(IOSChromeViewController *)chromeViewController;
-(void)archiveMapsActivity;
-(id)testCoordinator;
-(void)_didFinishLaunchTest;
-(void)doPostLaunchTestSetup;
-(char)_writeSampleDataToHistoryContainer;
-(id)_testWithName:(id)arg1 application:(id)arg2 options:(id)arg3 ;
-(id)mainChrome;
-(id)mainMapView;
-(MapsLaunchHandler *)mapsLaunchHandler;
-(void)submitterWillStartRequiringActivityAssertion:(id)arg1 ;
-(void)submitterDidStopRequiringActivityAssertion:(id)arg1 ;
-(void)createReportAProblemAppStateWithCompletion:(/*^block*/id)arg1 ;
-(void)_saveDirectionRecordingsIfNeededWithCompletion:(/*^block*/id)arg1 ;
-(void)presentReportAProblemByEditingContext:(/*^block*/id)arg1 completion:(/*^block*/id)arg2 ;
-(void)presentAddAPlaceViewControllerWithAppState:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_didCancelAddAPlace:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_sendAddAPlaceWithReport:(id)arg1 composer:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)addAPlaceNavigationController;
-(char)reportAProblemPresentationWillCoverEntireScreen;
-(void)presentReportAProblemWithCompletion:(/*^block*/id)arg1 ;
-(void)dismissReportAProblemAnimated:(char)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_beginSendingReportAProblemReportsIfNeeded;
-(void)_beginReschedulingSendingReportAProblemReportsIfNeeded;
-(void)presentAddAPlaceWithCompletion:(/*^block*/id)arg1 ;
-(void)presentBetterRouteAvailable;
-(void)presentAutocompleteSearchRAPWithSearchManager:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_updateReportAProblemSubmitterCanSendReallowingBackgroundAssertions:(char)arg1 ;
-(id)reportAProblemSubmitter;
-(void)representReportAProblemIfCurrentlyOngoingAnimated:(char)arg1 ;
-(AppCoordinator *)appCoordinator;
-(void)setAppCoordinator:(AppCoordinator *)arg1 ;
-(id)_mapsUserActivity;
-(void)printControllerDidPresentPrinterOptions:(id)arg1 ;
-(CGRect)popoverPresentationRectForPrintController:(id)arg1 ;
-(void)prepareBackgroundNavigationWithItems:(id)arg1 ;
-(void)startPreparedBackgroundNavigation;
-(void)endBackgroundNavigation;
-(int)displayedMapType;
-(void)carDisplayControllerDidInvalidateNavigationVisibility:(id)arg1 ;
-(id)directionsControllerForCarDisplay:(id)arg1 ;
-(char)_applicationShouldUseScreenJail:(id)arg1 ;
-(id)searchPinManager;
-(void)insertChromeViewControllerInViewHierarchy;
-(void)_registerDefaults;
-(void)_loadMapsForApplication:(id)arg1 ;
-(void)receivedFullyDrawnNotification;
-(void)prepareForCarPlayLaunch;
-(void)_presentRadarComposerFromGestureRecognizer:(id)arg1 ;
-(void)_resetTrafficToDefaultIfNeeded;
-(void)_resetViewModeToDefaultIfNeeded;
-(void)_resetViewModeForTransportTypePreferenceIfNeeded;
-(void)checkCoreRoutineEnabledState;
-(void)_suspendIfNeeded;
-(void)_resumeIfNeeded;
-(void)sendDidEnterBackgroundNotification;
-(char)_moveBackToNavigationOrTransitSteppingIfNeeded;
-(void)applicationWillAddDeactivationReason:(id)arg1 ;
-(void)applicationDidRemoveDeactivationReason:(id)arg1 ;
-(void)statusBarTappedWithEvent:(id)arg1 ;
-(void)presentMapsDebugController;
-(void)dismissMapsDebugControllerWithCompletion:(/*^block*/id)arg1 ;
-(id)currentTraits;
-(id)poiSearchManager;
-(void)restoreUserActivityOnlyIfNeeded:(char)arg1 ;
-(void)_indexCurrentUserActivityForSearch;
-(char)_shouldIndexUserActivityForHistoryChangesWithEdits:(id)arg1 ;
-(void)setNeedsUserActivityUpdate;
-(void)_updateUserActivityWithMapsActivityAtFullFidelity:(id)arg1 atCompactFidelity:(id)arg2 title:(id)arg3 expirationDate:(id)arg4 ;
-(char)_shouldFavorActivityOverNavigation:(id)arg1 ;
-(void)_unconditionallySetMapsActivityForHandoff:(id)arg1 ;
-(id)idleTimerStateDescription;
-(void)_setIdleTimerState:(int)arg1 ;
-(void)_idleTimerStateEnableBatteryMonitoring:(char)arg1 ;
-(int)_idleTimerStateForBattery;
-(void)_idleTimerStateBatteryStatusDidChange:(id)arg1 ;
-(void)_setDesiredIdleTimerState:(int)arg1 reason:(int)arg2 monitorBatteryState:(char)arg3 ;
-(char)canPlayTrace;
-(void)_updatePersistedDirectionsTimestamp;
-(void)_setLaunchIntoDirectionsOnRelaunch:(char)arg1 ;
-(void)_addSuspendingIdleTimer:(id)arg1 ;
-(void)_removeSuspendingIdleTimer:(id)arg1 ;
-(void)startStepping;
-(void)endStepping;
-(void)_createLocationInUseAssertionWithReason:(id)arg1 ;
-(void)_invalidateLocationInUseAssertion;
-(void)_setSteppingAssertionsEnabled:(char)arg1 ;
-(void)startTurnByTurn:(id)arg1 ;
-(void)endTurnByTurn:(id)arg1 ;
-(void)setMapsIsNavigatingTurnByTurn:(char)arg1 ;
-(void)setMapsIsNavigating:(char)arg1 ;
-(void)setSuppressStatusBarAnimations:(char)arg1 ;
-(void)_acquireDoubleHeightStatusBarAssertionIfNeeded;
-(void)_clearDoubleHeightStatusBar;
-(id)monitorBatteryStateDescription;
-(void)setMonitorBattery:(char)arg1 forReason:(int)arg2 ;
-(void)setTrackingMode:(int)arg1 monitorBatteryState:(char)arg2 ;
-(void)setMapsIsShowingTour:(char)arg1 ;
-(void)setPriorityAssertion:(BKSProcessAssertion *)arg1 ;
-(void)setSteppingAssertion:(BKSProcessAssertion *)arg1 ;
-(void)_updateDistanceUnits;
-(DefaultTransportTypeFinder *)defaultTransportTypeFinder;
-(void)addDirectionSessionUIObserver:(id)arg1 ;
-(void)removeDirectionSessionUIObserver:(id)arg1 ;
-(NSArray *)directionSessionUIObservers;
-(MapsActivity *)mapsActivity;
-(char)isRestoringState;
-(id)mapsActivityWithFidelity:(unsigned)arg1 ;
-(int)_forcedViewMode;
-(char)_isForcingViewMode;
-(void)setMapsActivity:(MapsActivity *)arg1 ;
-(void)setMapsActivity:(id)arg1 assumedSourceFidelity:(unsigned)arg2 source:(int)arg3 ;
-(id)allVisibleMapViews;
-(void)directionsControllerDidReset;
-(void)_print;
-(void)showFromController:(id)arg1 alertForHomeAddress:(char)arg2 ;
-(void)showPeoplePickerControllerFromController:(id)arg1 ;
-(void)testStartiCloudHistorySyncIfNeeded;
-(NSDictionary *)_cachedMapsActivity;
-(void)set_cachedMapsActivity:(NSDictionary *)arg1 ;
-(char)mapsIsNavigating;
-(char)mapsIsNavigatingTurnByTurn;
-(NSDate *)enteredForegroundDate;
-(void)setEnteredForegroundDate:(NSDate *)arg1 ;
-(char)debugAutomaticNightMode;
-(void)setDebugAutomaticNightMode:(char)arg1 ;
-(MapsURLHandler *)mapsURLHandler;
-(PrintController *)printController;
-(FavoritesSpotlightIndexingClient *)favoritesSpotlightIndexingClient;
-(FavoritesiCloudSyncClient *)favoritesSyncClient;
-(HistoryiCloudSyncClient *)historySyncClient;
-(char)isCoreRoutineEnabled;
-(BKSProcessAssertion *)priorityAssertion;
-(BKSProcessAssertion *)steppingAssertion;
-(void)interruptApplicationWithKind:(int)arg1 userInfo:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)dismissCurrentInterruptionOfKind:(int)arg1 ;
-(void)showLocationServicesAlertWithError:(id)arg1 ;
-(void)showNavigationAdvisoryIfNeeded;
-(id)_currentInterruptionHandle;
-(void)_setCurrentInterruptionHandle:(id)arg1 ;
-(int)currentInterruptionKind;
-(void)dismissCurrentInterruption;
-(void)_markMyLocation;
-(char)_isMainScreenMapView:(id)arg1 ;
-(char)_isCarPlayMapView:(id)arg1 ;
-(void)presentRadarComposerIfPossibleInViewController:(id)arg1 showingTracePicker:(char)arg2 traceFilePath:(id)arg3 ;
-(void)addAttachmentsPathToComposer:(id)arg1 ;
-(char)createCurrentStateSnapshotAndReturnSnapshotDirectoryURL:(out id*)arg1 tileStateReportURLs:(out id*)arg2 screenshotImageURLs:(out id*)arg3 mapsActivityDataPath:(out id*)arg4 error:(out id*)arg5 ;
-(void)presentRadarComposerIfPossibleInViewController:(id)arg1 ;
-(LightLevelController *)lightLevelController;
-(void)dealloc;
-(UIWindow *)window;
-(char)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationDidReceiveMemoryWarning:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)_application:(id)arg1 statusBarTouchesEnded:(id)arg2 ;
-(unsigned)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2 ;
-(void)applicationDidFinishLaunching:(id)arg1 ;
-(void)application:(id)arg1 didFinishLaunchingSuspendedWithOptions:(id)arg2 ;
-(void)application:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3 ;
-(char)application:(id)arg1 willContinueUserActivityWithType:(id)arg2 ;
-(char)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(void)setWindow:(UIWindow *)arg1 ;
-(id)nameOfDefaultImageToUpdateAtSuspension;
-(void)prepareForDefaultImageSnapshotForScreen:(id)arg1 ;
-(void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)application:(id)arg1 runTest:(id)arg2 options:(id)arg3 ;
-(void)userActivityWillSave:(id)arg1 ;
-(void)contactPicker:(id)arg1 didSelectContact:(id)arg2 ;
-(void)navigation:(id)arg1 didChangeShouldSuppressCellularDataAlerts:(char)arg2 ;
-(void)_updateUserActivity;
-(void)_userDefaultsDidChange:(id)arg1 ;
-(char)applicationCanPromptToCalibrateHeading:(id)arg1 ;
-(void)presentViewController:(id)arg1 animated:(char)arg2 ;
-(void)print;
-(id)settingsController;
-(void)pushDaemonProxyReceivedNotificationData:(id)arg1 forType:(id)arg2 recordIdentifier:(id)arg3 ;
-(void)favoritesDidChange;
-(void)historyDidChange;
-(id)observationQueueForContainer:(id)arg1 ;
-(void)container:(id)arg1 didEditWithNewContents:(id)arg2 orderedEdits:(id)arg3 cause:(int)arg4 context:(id)arg5 ;
-(void)navigationService:(id)arg1 didEnableGuidancePrompts:(char)arg2 ;
-(void)navigationServiceDidArrive:(id)arg1 ;
-(void)navigationService:(id)arg1 didChangeGuidanceLevel:(int)arg2 ;
-(void)navigationServiceWillResumeFromPause:(id)arg1 ;
-(void)navigationServiceWillPause:(id)arg1 ;
-(void)navigationService:(id)arg1 didChangeFromState:(unsigned)arg2 toState:(unsigned)arg3 ;
-(void)navigationService:(id)arg1 willChangeFromState:(unsigned)arg2 toState:(unsigned)arg3 ;
@end

