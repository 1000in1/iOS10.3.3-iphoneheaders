/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:34 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <GeoServices/GEORouteManager.h>
#import <libobjc.A.dylib/MNETAManagerDelegate.h>
#import <Maps/MNTraceRecorderBackgroundGuard.h>

@protocol RouteManagerDelegate, GEODirectionServiceTicket;
@class GEOComposedWaypoint, GEOMapRegion, GEOURLRouteHandle, RouteSet, Route, MNTraceRecorder, MNTracePlayer, GEODirectionsRequestFeedback, MapsRoutePreloadSession, MNETAManager, NSData, GEODirectionsFeedbackCollector, GEORouteGenerator, NSString, GEOMapServiceTraits, GEORouteAttributes, NSMutableArray, NavTestLogger, TransitRouteOptions;

@interface RouteManager : GEORouteManager <MNETAManagerDelegate, MNTraceRecorderBackgroundGuard> {

	GEOComposedWaypoint* _origin;
	GEOComposedWaypoint* _destination;
	int _desiredTransportType;
	GEOMapRegion* _mapRegion;
	GEOURLRouteHandle* _routeHandle;
	RouteSet* _activeRouteSet;
	Route* _userSelectedRoute;
	int _routeState;
	id<RouteManagerDelegate> _navDelegate;
	MNTraceRecorder* _traceRecorder;
	MNTracePlayer* _tracePlayer;
	GEODirectionsRequestFeedback* _feedback;
	MapsRoutePreloadSession* _mapsRoutePreloadSession;
	MNETAManager* _etaManager;
	NSData* _prevRouteID;
	unsigned _prevStepID;
	GEODirectionsFeedbackCollector* _feedbackCollector;
	id<GEODirectionServiceTicket> _rerouteTicket;
	double _lastRereouteTime;
	GEORouteGenerator* _routeGenerator;
	NSString* _voiceLanguage;
	char _fromCurrentLocation;
	char _preloadRoutes;
	GEOMapServiceTraits* _traits;
	GEORouteAttributes* _routeAttributes;
	NSMutableArray* _routeSets;
	NavTestLogger* _testLogger;
	char _background;
	char _hasTimepoint;
	NSData* _sessionState;
	TransitRouteOptions* _transitOptions;
	GEOTimepoint _timepoint;

}

@property (assign,nonatomic,__weak) Route * currentRoute; 
@property (assign,nonatomic) int routeState; 
@property (nonatomic,retain) NSData * prevRouteID;                                           //@synthesize prevRouteID=_prevRouteID - In the implementation block
@property (nonatomic,retain) Route * userSelectedRoute;                                      //@synthesize userSelectedRoute=_userSelectedRoute - In the implementation block
@property (nonatomic,readonly) id<RouteManagerTestingDelegate> testingDelegate; 
@property (nonatomic,retain) NSData * sessionState;                                          //@synthesize sessionState=_sessionState - In the implementation block
@property (assign,nonatomic) char hasTimepoint;                                              //@synthesize hasTimepoint=_hasTimepoint - In the implementation block
@property (assign,nonatomic) GEOTimepoint timepoint;                                         //@synthesize timepoint=_timepoint - In the implementation block
@property (nonatomic,readonly) RouteSet * activeRouteSet;                                    //@synthesize activeRouteSet=_activeRouteSet - In the implementation block
@property (nonatomic,readonly) GEOComposedWaypoint * origin;                                 //@synthesize origin=_origin - In the implementation block
@property (nonatomic,readonly) GEOComposedWaypoint * destination;                            //@synthesize destination=_destination - In the implementation block
@property (nonatomic,readonly) MNETAManager * etaManager;                                    //@synthesize etaManager=_etaManager - In the implementation block
@property (nonatomic,readonly) NSString * voiceLanguage;                                     //@synthesize voiceLanguage=_voiceLanguage - In the implementation block
@property (nonatomic,readonly) int desiredTransportType;                                     //@synthesize desiredTransportType=_desiredTransportType - In the implementation block
@property (nonatomic,readonly) TransitRouteOptions * transitOptions;                         //@synthesize transitOptions=_transitOptions - In the implementation block
@property (nonatomic,readonly) GEOURLRouteHandle * routeHandle;                              //@synthesize routeHandle=_routeHandle - In the implementation block
@property (nonatomic,readonly) GEORouteGenerator * routeGenerator;                           //@synthesize routeGenerator=_routeGenerator - In the implementation block
@property (assign,nonatomic,__weak) id<RouteManagerDelegate> navDelegate;                    //@synthesize navDelegate=_navDelegate - In the implementation block
@property (nonatomic,readonly) id<GEORoutePreloadSession> routePreloadSession; 
@property (nonatomic,readonly) GEOMapServiceTraits * traits;                                 //@synthesize traits=_traits - In the implementation block
@property (nonatomic,retain) MNTraceRecorder * traceRecorder;                                //@synthesize traceRecorder=_traceRecorder - In the implementation block
@property (nonatomic,retain) MNTracePlayer * tracePlayer;                                    //@synthesize tracePlayer=_tracePlayer - In the implementation block
@property (nonatomic,readonly) NavTestLogger * testLogger;                                   //@synthesize testLogger=_testLogger - In the implementation block
@property (nonatomic,retain) GEODirectionsRequestFeedback * feedback;                        //@synthesize feedback=_feedback - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultRouteAttributesForNavigation;
+(id)defaultRouteAttributes;
-(void)setNavDelegate:(id<RouteManagerDelegate>)arg1 ;
-(id<RouteManagerDelegate>)navDelegate;
-(void)setTracePlayer:(MNTracePlayer *)arg1 ;
-(id)_currentLocation;
-(void)setCurrentRoute:(Route *)arg1 ;
-(id)initWithDirectionsFrom:(id)arg1 to:(id)arg2 mapRegion:(id)arg3 type:(int)arg4 fromCurrentLocation:(char)arg5 preloadRoutes:(char)arg6 routeHandle:(id)arg7 transitRouteOptions:(id)arg8 withFeedback:(id)arg9 traits:(id)arg10 ;
-(void)_clearETAManager;
-(int)routeState;
-(void)setRouteState:(int)arg1 ;
-(void)markCurrentRoute;
-(void)didArriveAtLocation:(id)arg1 ;
-(unsigned)_responseRouteIndexForRoute:(id)arg1 ;
-(id)currentGeoRoute;
-(void)recordCurrentRoute;
-(void)_updatePreloadSessionWithRouteMatch:(id)arg1 ;
-(void)startRouteFeedbackSession;
-(void)sendRouteFeedbackWithLocationWhereRouteWasCancelled:(id)arg1 audioFeedback:(GEONavigationAudioFeedback*)arg2 ;
-(void)addStepFeedbackWithCurrentlyDisplayedStepIndex:(unsigned)arg1 completed:(char)arg2 ;
-(void)_updateRoutePreloading;
-(double)_straightLineDistanceToDestinationFromWaypoint:(id)arg1 ;
-(char)_destinationTooLongForWalkingFromWayPoint:(id)arg1 ;
-(char)_destinationShortEnoughForWalkingFromWaypoint:(id)arg1 ;
-(void)loadNewRouteSetWithMaxRoutes:(unsigned)arg1 useCache:(char)arg2 isResumeRoute:(char)arg3 timepoint:(GEOTimepoint)arg4 errorHandler:(/*^block*/id)arg5 ;
-(void)_setupTraceRecorderIfNeededWithErrorHandler:(/*^block*/id)arg1 ;
-(void)_setupFeedbackIfNeeded;
-(id)_requestTicketWithWaypoints:(id)arg1 routeHandle:(id)arg2 isResumeRoute:(char)arg3 maxRouteCount:(unsigned)arg4 ;
-(void)_addTimepointIfNeededToRouteAttributes:(id)arg1 ;
-(char)_tryLoadingResponseFromTraceFileWithTicket:(id)arg1 routeSet:(id)arg2 ;
-(/*^block*/id)_loadingRequestNetworkActivityHandler;
-(void)_stopRoutePreloadingAndFetchDirectionsForTicket:(id)arg1 routeSet:(id)arg2 networkActivity:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(char)findContingentRouteFrom:(id)arg1 transportType:(int)arg2 ;
-(char)recalculateRouteFrom:(id)arg1 stepIndex:(unsigned)arg2 forceRepeatedRecalc:(char)arg3 transportType:(int)arg4 ;
-(void)cancelRecalculation;
-(void)rerouteFromStop:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)cancelRoute;
-(void)_switchToContingentRoute:(id)arg1 atLocation:(id)arg2 routeCoordinate:(SCD_Struct_Ro29)arg3 onRoute:(char)arg4 ;
-(void)switchToNewRouteIfNecessaryFrom:(id)arg1 transportType:(int)arg2 ;
-(void)stopNavETAUpdateRequests;
-(void)startNavETAUpdateRequests;
-(void)handleRequestFromCache:(id)arg1 routeSet:(id)arg2 failureHandler:(/*^block*/id)arg3 ;
-(void)_cacheRouteResponse:(id)arg1 forTicket:(id)arg2 ;
-(id)routeSetForGEORouteSet:(id)arg1 ;
-(void)resetToNewRoute:(id)arg1 ;
-(void)_handleRequesterResponse:(id)arg1 ticket:(id)arg2 ;
-(void)_handleRequesterError:(id)arg1 directionsError:(id)arg2 ;
-(void)selectRoute:(id)arg1 ;
-(void)forceReroutingWithRouteResponse:(id)arg1 request:(id)arg2 ;
-(char)_requestDirectionsFromTracePlayer:(id)arg1 request:(id)arg2 isReroute:(char)arg3 finishedHandler:(/*^block*/id)arg4 errorHandler:(/*^block*/id)arg5 ;
-(void)_addObserving;
-(void)_removeObserving;
-(MNETAManager *)etaManager;
-(int)desiredTransportType;
-(RouteSet *)activeRouteSet;
-(void)setTraceRecorder:(MNTraceRecorder *)arg1 ;
-(NavTestLogger *)testLogger;
-(NSData *)prevRouteID;
-(void)setPrevRouteID:(NSData *)arg1 ;
-(Route *)userSelectedRoute;
-(void)setUserSelectedRoute:(Route *)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(void)dealloc;
-(void)reset;
-(GEOComposedWaypoint *)origin;
-(GEODirectionsRequestFeedback *)feedback;
-(void)setFeedback:(GEODirectionsRequestFeedback *)arg1 ;
-(GEOMapServiceTraits *)traits;
-(GEOComposedWaypoint *)destination;
-(void)_didEnterBackground:(id)arg1 ;
-(void)_willEnterForeground:(id)arg1 ;
-(GEOURLRouteHandle *)routeHandle;
-(NSData *)sessionState;
-(void)setSessionState:(NSData *)arg1 ;
-(void)setTimepoint:(GEOTimepoint)arg1 ;
-(void)setHasTimepoint:(char)arg1 ;
-(char)hasTimepoint;
-(GEOTimepoint)timepoint;
-(TransitRouteOptions *)transitOptions;
-(void)addTrafficRerouteFeedback:(id)arg1 ;
-(void)handleResponse:(id)arg1 routeSet:(id)arg2 forTicket:(id)arg3 ;
-(void)handleError:(id)arg1 directionsError:(id)arg2 forTicket:(id)arg3 ;
-(void)addedRoutesToRouteSet:(id)arg1 ;
-(Route *)currentRoute;
-(id<GEORoutePreloadSession>)routePreloadSession;
-(GEORouteGenerator *)routeGenerator;
-(id<RouteManagerTestingDelegate>)testingDelegate;
-(void)updateLocation:(id)arg1 ;
-(NSString *)voiceLanguage;
-(void)etaManagerUpdatedETATime:(id)arg1 ;
-(void)etaManager:(id)arg1 willSendETARequest:(id)arg2 ;
-(void)etaManager:(id)arg1 receivedETAResponse:(id)arg2 ;
-(void)etaManager:(id)arg1 failedToReceiveETAResponse:(id)arg2 ;
-(void)etaManager:(id)arg1 updatedIncidentsForRoute:(id)arg2 etaRoute:(id)arg3 incidentsOffset:(unsigned)arg4 ;
-(void)etaManagerUpdatedTrafficIncidents:(id)arg1 ;
-(void)etaManager:(id)arg1 receivedTrafficIncidentAlert:(id)arg2 ;
-(void)etaManager:(id)arg1 updatedTrafficForETARoute:(id)arg2 from:(unsigned)arg3 to:(unsigned)arg4 ;
-(void)stopTrace;
-(void)dispatchWrite:(/*^block*/id)arg1 ;
-(MNTracePlayer *)tracePlayer;
-(MNTraceRecorder *)traceRecorder;
@end

