/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:41 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/Maps
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Maps/Maps-Structs.h>
#import <Maps/StackedChromeViewController.h>
#import <Maps/LightLevelObserver.h>
#import <Maps/MapsURLHandlerDelegate.h>
#import <Maps/MapsDebugViewControllerDelegate.h>
#import <Maps/InterruptionManagerProtocol.h>
#import <Maps/LockScreenProtocol.h>
#import <libobjc.A.dylib/GEOLogContextDelegate.h>

@protocol ViewModeDelegate, LockScreenLayerSource;
@class InterruptionManager, EnvironmentObserver, MapViewResponder, NSArray, OverlayManager, UITapGestureRecognizer, LoadingIndicatorController, SettingsController, SearchPinsManager, PersonalizedItemManager, DirectionsAnnotationsManager, ParkedCarManager, RidesharingCurrentRideProviderDataSource, RidesharingAnnotationsManager, NSString, CustomSearchManager, DirectionsManager, DirectionsController, MapsUserLocationView;

@interface IOSChromeViewController : StackedChromeViewController <LightLevelObserver, MapsURLHandlerDelegate, MapsDebugViewControllerDelegate, InterruptionManagerProtocol, LockScreenProtocol, GEOLogContextDelegate> {

	int _displayedViewMode;
	EnvironmentObserver* _environmentObserver;
	char _explicitlyRequestedUserLocation;
	MapViewResponder* _mapViewResponder;
	NSArray* _historicalLocations;
	OverlayManager* _overlayManager;
	UITapGestureRecognizer* _logTileStateRecognizer;
	LoadingIndicatorController* _loadingMapNetworkActivity;
	char _hasShownNavModeAdvisory;
	SettingsController* _settingsController;
	InterruptionManager* _interruptionManager;
	SearchPinsManager* _searchPinsManager;
	PersonalizedItemManager* _personalizedItemManager;
	DirectionsAnnotationsManager* _directionsAnnotationsManager;
	id<ViewModeDelegate> _viewModeDelegate;
	ParkedCarManager* _parkedCarManager;
	id<LockScreenLayerSource> _lockScreenService;
	RidesharingCurrentRideProviderDataSource* _ridesharingCurrentRideProviderDataSource;
	RidesharingAnnotationsManager* _ridesharingAnnotationsManager;
	NSString* _blurGroupName;

}

@property (nonatomic,retain) InterruptionManager * interruptionManager;                                                        //@synthesize interruptionManager=_interruptionManager - In the implementation block
@property (nonatomic,retain) SearchPinsManager * searchPinsManager;                                                            //@synthesize searchPinsManager=_searchPinsManager - In the implementation block
@property (nonatomic,retain) PersonalizedItemManager * personalizedItemManager;                                                //@synthesize personalizedItemManager=_personalizedItemManager - In the implementation block
@property (nonatomic,retain) DirectionsAnnotationsManager * directionsAnnotationsManager;                                      //@synthesize directionsAnnotationsManager=_directionsAnnotationsManager - In the implementation block
@property (assign,nonatomic,__weak) id<ViewModeDelegate> viewModeDelegate;                                                     //@synthesize viewModeDelegate=_viewModeDelegate - In the implementation block
@property (nonatomic,readonly) CustomSearchManager * customSearchManager; 
@property (nonatomic,readonly) DirectionsManager * directionsManager; 
@property (nonatomic,readonly) DirectionsController * directionsController; 
@property (nonatomic,readonly) SettingsController * settingsController;                                                        //@synthesize settingsController=_settingsController - In the implementation block
@property (nonatomic,readonly) ParkedCarManager * parkedCarManager;                                                            //@synthesize parkedCarManager=_parkedCarManager - In the implementation block
@property (nonatomic,readonly) int displayedViewMode;                                                                          //@synthesize displayedViewMode=_displayedViewMode - In the implementation block
@property (nonatomic,readonly) MapsUserLocationView * userLocationView; 
@property (nonatomic,readonly) MapsUserLocationView * userLocationViewIfExists; 
@property (assign,nonatomic,__weak) id<LockScreenLayerSource> lockScreenService;                                               //@synthesize lockScreenService=_lockScreenService - In the implementation block
@property (nonatomic,retain) RidesharingCurrentRideProviderDataSource * ridesharingCurrentRideProviderDataSource;              //@synthesize ridesharingCurrentRideProviderDataSource=_ridesharingCurrentRideProviderDataSource - In the implementation block
@property (nonatomic,retain) RidesharingAnnotationsManager * ridesharingAnnotationsManager;                                    //@synthesize ridesharingAnnotationsManager=_ridesharingAnnotationsManager - In the implementation block
@property (nonatomic,readonly) NSString * blurGroupName;                                                                       //@synthesize blurGroupName=_blurGroupName - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) char hasShownNavModeAdvisory;                                                                     //@synthesize hasShownNavModeAdvisory=_hasShownNavModeAdvisory - In the implementation block
@property (assign,nonatomic) char locationPulseEnabled; 
+(Class)userLocationViewClass;
-(void)lightLevelController:(id)arg1 didUpdateLightLevel:(int)arg2 ;
-(id)newTraits;
-(DirectionsManager *)directionsManager;
-(DirectionsController *)directionsController;
-(SearchPinsManager *)searchPinsManager;
-(DirectionsAnnotationsManager *)directionsAnnotationsManager;
-(char)navigationTransitionShouldOccurImmediately;
-(void)currentModeWillChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(void)currentModeDidChangeByMovingToItem:(id)arg1 fromItem:(id)arg2 animated:(char)arg3 ;
-(void)updateLightLevelAnimated:(char)arg1 lightLevel:(int)arg2 ;
-(void)setSearchPinsManager:(SearchPinsManager *)arg1 ;
-(void)setDirectionsAnnotationsManager:(DirectionsAnnotationsManager *)arg1 ;
-(ParkedCarManager *)parkedCarManager;
-(PersonalizedItemManager *)personalizedItemManager;
-(void)updateViewMode:(int)arg1 animated:(char)arg2 ;
-(NSString *)blurGroupName;
-(void)reportCurrentLocationFailure;
-(id)navActionCoordinator;
-(void)setPersonalizedItemManager:(PersonalizedItemManager *)arg1 ;
-(int)displayedViewMode;
-(void)createCustomSearchResultForDroppedPinAtPoint:(CLLocationCoordinate2D)arg1 animated:(char)arg2 ;
-(void)updateHistoricalLocations;
-(void)showAnnouncementForFlyover:(id)arg1 ;
-(void)willBeginDisplayingInLockScreen;
-(void)didEndDisplayingInLockScreen;
-(void)reinsertMapViewInViewHierarchy;
-(void)pushMode:(id)arg1 withTransition:(id)arg2 ;
-(void)pushMode:(id)arg1 animated:(char)arg2 ;
-(void)popModeAnimated:(char)arg1 completion:(/*^block*/id)arg2 ;
-(void)popModeWithTransition:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setViewMode:(int)arg1 animated:(char)arg2 ;
-(InterruptionManager *)interruptionManager;
-(void)setInterruptionManager:(InterruptionManager *)arg1 ;
-(id)allVisibleMapViewsForDebugController:(id)arg1 ;
-(void)debugController:(id)arg1 choseTracePlayer:(id)arg2 startNav:(char)arg3 ;
-(void)debugControllerDidFinish:(id)arg1 ;
-(char)hasShownNavModeAdvisory;
-(void)setHasShownNavModeAdvisory:(char)arg1 ;
-(char)locationPulseEnabled;
-(void)setLocationPulseEnabled:(char)arg1 ;
-(void)searchForSearchItem:(id)arg1 traits:(id)arg2 source:(int)arg3 ;
-(void)resetForLaunchURLWithOptions:(id)arg1 ;
-(void)searchForAddress:(id)arg1 source:(int)arg2 ;
-(void)searchForAddressString:(id)arg1 source:(int)arg2 ;
-(void)searchForRouteFromAddress:(id)arg1 toAddress:(id)arg2 directionsMode:(unsigned)arg3 source:(int)arg4 ;
-(void)searchForExternalURLQuery:(id)arg1 coordinate:(CLLocationCoordinate2D)arg2 muid:(unsigned long long)arg3 resultProviderId:(int)arg4 contentProvider:(id)arg5 ;
-(void)searchForString:(id)arg1 traits:(id)arg2 scrollToResults:(char)arg3 source:(int)arg4 ;
-(void)searchWithSearchInfo:(id)arg1 source:(int)arg2 ;
-(void)cleanUIandHideSearch:(char)arg1 ;
-(void)directionsTypeForMapItem:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)routeFromSearchResult:(id)arg1 toSearchResult:(id)arg2 directionsType:(unsigned)arg3 drivePreferences:(id)arg4 routeHandle:(id)arg5 timePoint:(id)arg6 withFeedback:(id)arg7 origin:(int)arg8 ;
-(void)routeUsingDirectionsFrom:(id)arg1 to:(id)arg2 withFeedback:(id)arg3 ;
-(void)showRoutingAppsFromSearchResult:(id)arg1 toSearchResult:(id)arg2 ;
-(void)displayNearbySearch;
-(void)selectParkedCarAndPerformAction:(int)arg1 ;
-(void)showTransitLine:(unsigned long long)arg1 withName:(id)arg2 ;
-(void)showFavoritesType:(int)arg1 ;
-(CustomSearchManager *)customSearchManager;
-(id)mapViewResponder;
-(id)overlayManager;
-(RidesharingCurrentRideProviderDataSource *)ridesharingCurrentRideProviderDataSource;
-(RidesharingAnnotationsManager *)ridesharingAnnotationsManager;
-(char)_shouldRecordViewportChange;
-(void)_handleLogTileState:(id)arg1 ;
-(void)_resetTracking:(char)arg1 ;
-(MapsUserLocationView *)userLocationViewIfExists;
-(void)_loadInternalDebugSetting;
-(void)_updateMapViewResponderTargetForObject:(id)arg1 ;
-(void)updateThemeForController:(id)arg1 ;
-(void)updateThemeForView:(id)arg1 ;
-(void)updateThemeForVisualEffectStyle:(unsigned)arg1 ;
-(void)updateThemeViewAndControllers;
-(void)updateTrafficDisplay;
-(char)_shouldShowTrafficForViewMode:(int)arg1 ;
-(char)removesMapViewWhenInactive;
-(void)_setMapViewSettingsForLockScreenDisplay:(char)arg1 ;
-(void)setLockScreenLayerSourceIfAvailable;
-(void)setLockScreenService:(id<LockScreenLayerSource>)arg1 ;
-(char)displayNavigationAlertAndShouldContinue;
-(id<ViewModeDelegate>)viewModeDelegate;
-(void)setViewModeDelegate:(id<ViewModeDelegate>)arg1 ;
-(id<LockScreenLayerSource>)lockScreenService;
-(void)setRidesharingCurrentRideProviderDataSource:(RidesharingCurrentRideProviderDataSource *)arg1 ;
-(void)setRidesharingAnnotationsManager:(RidesharingAnnotationsManager *)arg1 ;
-(id)init;
-(void)dealloc;
-(int)preferredStatusBarStyle;
-(char)prefersStatusBarHidden;
-(void)viewDidLoad;
-(id)logContextForLogMsgEvent:(id)arg1 ;
-(id)coordinator;
-(int)currentUITargetForAnalytics;
-(int)currentMapViewTargetForAnalytics;
-(void)mapView:(id)arg1 didDeselectLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 didSelectLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 calloutPrimaryActionTriggeredForAnnotationView:(id)arg2 ;
-(void)mapView:(id)arg1 calloutPrimaryActionTriggeredForLabelMarker:(id)arg2 ;
-(void)mapView:(id)arg1 didStopRespondingToGesture:(int)arg2 zoomDirection:(int)arg3 didDecelerate:(char)arg4 tiltDirection:(int)arg5 ;
-(void)mapViewNavigationCameraHasStoppedPanning:(id)arg1 ;
-(void)mapViewNavigationCameraHasStartedPanning:(id)arg1 ;
-(id)mapView:(id)arg1 painterForVectorOverlay:(id)arg2 ;
-(void)mapView:(id)arg1 didChangeUserTrackingMode:(int)arg2 animated:(char)arg3 fromTrackingButton:(char)arg4 ;
-(MapsUserLocationView *)userLocationView;
-(void)setMapView:(id)arg1 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(char)arg2 ;
-(void)mapViewWillStartLoadingMap:(id)arg1 ;
-(void)mapViewDidFinishLoadingMap:(id)arg1 ;
-(void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2 ;
-(id)mapView:(id)arg1 viewForAnnotation:(id)arg2 ;
-(void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2 ;
-(id)mapView:(id)arg1 rendererForOverlay:(id)arg2 ;
-(SettingsController *)settingsController;
@end

