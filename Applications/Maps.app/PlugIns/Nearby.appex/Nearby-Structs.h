/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:46 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Maps.app/PlugIns/Nearby.appex/Nearby
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class <_NUIGridArrangementContainer>;

typedef struct CGSize {
	float width;
	float height;
} CGSize;

typedef struct _compressed_pair<float *, std::__1::allocator<float> > {
	float __first_;
} compressed_pair<float *, std::__1::allocator<float> >;

typedef struct vector<float, std::__1::allocator<float> > {
	float __begin_;
	float __end_;
	compressed_pair<float *, std::__1::allocator<float> > __end_cap_;
} vector<float, std::__1::allocator<float> >;

typedef struct _compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> > {
	_NUIGridArrangementDimension __first_;
} compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> >;

typedef struct vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > {
	_NUIGridArrangementDimension __begin_;
	_NUIGridArrangementDimension __end_;
	compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> > __end_cap_;
} vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >;

typedef struct _compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> > {
	_NUIGridArrangementCell __first_;
} compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> >;

typedef struct vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> > {
	_NUIGridArrangementCell __begin_;
	_NUIGridArrangementCell __end_;
	compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> > __end_cap_;
} vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >;

typedef struct NUIGridArrangement {
	<_NUIGridArrangementContainer>* container;
	char baselineRelative;
	int horzDist;
	int vertDist;
	vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> > cells;
	vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > columns;
	vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> > rows;
} NUIGridArrangement;

