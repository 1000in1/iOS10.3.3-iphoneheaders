/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:10 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/DiagnosticsService.app/PlugIns/Diagnostic-3909.appex/Diagnostic-3909
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol DAAudioPlayAndRecordDelegate;
#import <Diagnostic-3909/Diagnostic-3909-Structs.h>
@class NSArray, NSNumber, NSString, NSURL;

@interface DAPlayAndRecord : NSObject {

	OpaqueAUGraphRef testCaseGraph;
	AURenderCallbackStruct* recordCallBack;
	AURenderCallbackStruct* recordBPCallBack;
	AURenderCallbackStruct* playCallBack;
	OpaqueAudioFileIDRef testSignalFile;
	OpaqueAudioComponentInstanceRef generatorUnit;
	OpaqueAudioComponentInstanceRef remoteIOUnit;
	AudioBufferList* recordBufferList;
	float* receiveSignals;
	float* sourceSignal;
	float previousDeviceVolume;
	char _sendRawData;
	char _sequentialAudioInput;
	char _isCancelled;
	char _volumeNeedsReset;
	NSArray* _results;
	id<DAAudioPlayAndRecordDelegate> _delegate;
	float _fileTimeInFrames;
	unsigned long _playFrameCount;
	unsigned long _recordFrameCount;
	NSNumber* _numInputs;
	OpaqueExtAudioFileRef _recordedSoundFile;
	int _inputID;
	int _outputID;
	NSNumber* _volume;
	NSString* _fileName;
	NSURL* _fileURL;
	NSNumber* _channel;
	id* _error;

}

@property (assign) float fileTimeInFrames;                                                  //@synthesize fileTimeInFrames=_fileTimeInFrames - In the implementation block
@property (assign) unsigned long playFrameCount;                                            //@synthesize playFrameCount=_playFrameCount - In the implementation block
@property (assign) unsigned long recordFrameCount;                                          //@synthesize recordFrameCount=_recordFrameCount - In the implementation block
@property (retain) NSNumber * numInputs;                                                    //@synthesize numInputs=_numInputs - In the implementation block
@property (assign) OpaqueExtAudioFileRef recordedSoundFile;                                 //@synthesize recordedSoundFile=_recordedSoundFile - In the implementation block
@property (assign) int inputID;                                                             //@synthesize inputID=_inputID - In the implementation block
@property (assign) int outputID;                                                            //@synthesize outputID=_outputID - In the implementation block
@property (retain) NSNumber * volume;                                                       //@synthesize volume=_volume - In the implementation block
@property (retain) NSString * fileName;                                                     //@synthesize fileName=_fileName - In the implementation block
@property (retain) NSURL * fileURL;                                                         //@synthesize fileURL=_fileURL - In the implementation block
@property (nonatomic,retain) NSNumber * channel;                                            //@synthesize channel=_channel - In the implementation block
@property (assign) char sendRawData;                                                        //@synthesize sendRawData=_sendRawData - In the implementation block
@property (assign) char sequentialAudioInput;                                               //@synthesize sequentialAudioInput=_sequentialAudioInput - In the implementation block
@property (assign) id* error;                                                               //@synthesize error=_error - In the implementation block
@property (assign) char isCancelled;                                                        //@synthesize isCancelled=_isCancelled - In the implementation block
@property (assign) char volumeNeedsReset;                                                   //@synthesize volumeNeedsReset=_volumeNeedsReset - In the implementation block
@property (nonatomic,retain) NSArray * results;                                             //@synthesize results=_results - In the implementation block
@property (assign,nonatomic,__weak) id<DAAudioPlayAndRecordDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
-(char)sequentialAudioInput;
-(char)sendRawData;
-(int)outputID;
-(int)inputID;
-(float)fileTimeInFrames;
-(void)setNumInputs:(NSNumber *)arg1 ;
-(void)setInputID:(int)arg1 ;
-(void)setOutputID:(int)arg1 ;
-(void)setSendRawData:(char)arg1 ;
-(void)setSequentialAudioInput:(char)arg1 ;
-(void)setVolumeNeedsReset:(char)arg1 ;
-(long)calculateFileDurationForFile:(OpaqueAudioFileIDRef)arg1 error:(id*)arg2 ;
-(long)createAUGraphWithError:(id*)arg1 ;
-(NSNumber *)numInputs;
-(void)setPlayFrameCount:(unsigned long)arg1 ;
-(void)setRecordFrameCount:(unsigned long)arg1 ;
-(char)setDeviceVolume:(float)arg1 ;
-(void)resetToPreviousVolume;
-(id)makeSignalsDataObjects;
-(char)volumeNeedsReset;
-(unsigned long)playFrameCount;
-(unsigned long)recordFrameCount;
-(void)endAudioTestCase;
-(void)setFileTimeInFrames:(float)arg1 ;
-(id)initWithFileURL:(id)arg1 fileName:(id)arg2 numberOfInputs:(id)arg3 inputID:(int)arg4 outputID:(int)arg5 volume:(id)arg6 channel:(id)arg7 sendRawData:(char)arg8 delegate:(id)arg9 sequentialAudioInput:(char)arg10 error:(id*)arg11 ;
-(long)startAudioTestCase;
-(void)grabPlayBackFrameData:(AudioBufferList*)arg1 withNumberOfFrames:(unsigned long)arg2 ;
-(void)grabRecordedFrameData:(AudioBufferList*)arg1 withNumberOfFrames:(unsigned long)arg2 ;
-(OpaqueExtAudioFileRef)recordedSoundFile;
-(void)setRecordedSoundFile:(OpaqueExtAudioFileRef)arg1 ;
-(void)cancel;
-(void)setDelegate:(id<DAAudioPlayAndRecordDelegate>)arg1 ;
-(void)dealloc;
-(id<DAAudioPlayAndRecordDelegate>)delegate;
-(char)isCancelled;
-(NSNumber *)volume;
-(void)setVolume:(NSNumber *)arg1 ;
-(void)setChannel:(NSNumber *)arg1 ;
-(NSNumber *)channel;
-(NSURL *)fileURL;
-(NSArray *)results;
-(void)setResults:(NSArray *)arg1 ;
-(id*)error;
-(void)setError:(id*)arg1 ;
-(void)setFileURL:(NSURL *)arg1 ;
-(void)setIsCancelled:(char)arg1 ;
-(NSString *)fileName;
-(void)setFileName:(NSString *)arg1 ;
@end

