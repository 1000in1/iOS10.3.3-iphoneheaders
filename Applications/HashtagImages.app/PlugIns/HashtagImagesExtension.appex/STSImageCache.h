/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:25 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/HashtagImages.app/PlugIns/HashtagImagesExtension.appex/HashtagImagesExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <HashtagImagesExtension/HashtagImagesExtension-Structs.h>
#import <libobjc.A.dylib/NSURLSessionDownloadDelegate.h>

@protocol OS_dispatch_queue;
@class NSOperationQueue, NSURLSession, NSURLCache, NSMutableDictionary, NSObject, UIImage, NSString;

@interface STSImageCache : NSObject <NSURLSessionDownloadDelegate> {

	NSOperationQueue* _operationQueue;
	NSURLSession* _imageSession;
	NSURLCache* _urlCache;
	NSMutableDictionary* _staticImageCache;
	NSMutableDictionary* _firstFrameImageCache;
	NSMutableDictionary* _imageInfoCache;
	NSMutableDictionary* _downloadOperationInfos;
	NSMutableDictionary* _cancelledDownloadOperationInfos;
	NSObject*<OS_dispatch_queue> _queuedOperationsInfoQueue;
	UIImage* _searchProviderImage;

}

@property (nonatomic,retain) UIImage * searchProviderImage;              //@synthesize searchProviderImage=_searchProviderImage - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedCache;
-(void)setSearchProviderImage:(UIImage *)arg1 ;
-(UIImage *)searchProviderImage;
-(id)fetchCachedStaticImageForURL:(id)arg1 hasMultipleFrames:(char*)arg2 ;
-(char)_allowImageInfoCaching;
-(void)fetchImageDataWithURL:(id)arg1 priority:(int)arg2 isSource:(char)arg3 begin:(/*^block*/id)arg4 progress:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(id)_imageInfoWithData:(id)arg1 ;
-(id)_imageSession;
-(id)_imageInfoUsingAVAssetReaderWithFileURL:(id)arg1 ;
-(id)_imageFromSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(id)fetchCachedStaticImageForURL:(id)arg1 ;
-(id)fetchCachedImageInfoForURL:(id)arg1 ;
-(void)fetchImageWithURL:(id)arg1 priority:(int)arg2 isSource:(char)arg3 begin:(/*^block*/id)arg4 progress:(/*^block*/id)arg5 completion:(/*^block*/id)arg6 ;
-(void)setPriority:(int)arg1 forQueuedDownloadWithURL:(id)arg2 ;
-(void)cancelQueuedDownloadForURL:(id)arg1 ;
-(void)cancelAllDownloads;
-(id)init;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)clearInMemoryCache;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
@end

