/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:59 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileNotes.app/MobileNotes
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <MobileNotes/MobileNotes-Structs.h>
@class ICDrawingCommandData, ICGLContext, TSDGLFrameBuffer, ICDrawingResourceHandler, ICDrawingContour, TSDGLDataBuffer, ICDrawing;

@interface ICDrawingRenderer : NSObject {

	ICDrawingCommandData* _currentCommand;
	ICGLContext* _glContext;
	TSDGLFrameBuffer* _paintFramebuffer;
	TSDGLFrameBuffer* _paintFramebufferAccumulator;
	TSDGLFrameBuffer* _originalBackFramebuffer;
	char _hasRenderedIntoPaintAccumulator;
	GLsyncRef _finishRenderingFence;
	ICDrawingResourceHandler* _resourceHandler;
	float _segmentedDistanceToNextPoint;
	unsigned _segmentedRandomSeed;
	int _backingWidth;
	int _backingHeight;
	CGRect _commandClipRect;
	CGRect _clipRect;
	unsigned _backgroundImageTexture;
	CGSize _backgroundImageTextureSize;
	SCD_Struct_IC8 _backgroundColor;
	char _useBackgroundColor;
	ICDrawingContour* _penContour;
	char _inDrawingMode;
	CGSize _drawingPixelSize;
	CGSize _actualSize;
	float _fromCommandSpaceScale;
	CGRect _contentsBounds;
	TSDGLDataBuffer* _strokeBuffer;
	SCD_Struct_IC9 _lastPointForEraser;
	char _lastPointForEraserIsValid;
	char _solidColorBackboard;
	ICDrawing* _drawing;
	float _inputScale;
	float _eraserIndicatorAlpha;
	UIEdgeInsets _edgeFadeInsets;
	CGAffineTransform _transform;

}

@property (assign,nonatomic,__weak) ICDrawing * drawing;               //@synthesize drawing=_drawing - In the implementation block
@property (nonatomic,readonly) ICGLContext * glContext;                //@synthesize glContext=_glContext - In the implementation block
@property (assign,nonatomic) CGAffineTransform transform;              //@synthesize transform=_transform - In the implementation block
@property (assign,nonatomic) float inputScale;                         //@synthesize inputScale=_inputScale - In the implementation block
@property (assign,nonatomic) float eraserIndicatorAlpha;               //@synthesize eraserIndicatorAlpha=_eraserIndicatorAlpha - In the implementation block
@property (assign,nonatomic) char solidColorBackboard;                 //@synthesize solidColorBackboard=_solidColorBackboard - In the implementation block
@property (assign,nonatomic) UIEdgeInsets edgeFadeInsets;              //@synthesize edgeFadeInsets=_edgeFadeInsets - In the implementation block
-(id)initWithDrawingPixelSize:(CGSize)arg1 actualSize:(CGSize)arg2 ;
-(void)setupOpenGL;
-(CGRect)contentsBoundsInCommandSpace;
-(CGImageRef)newCGImage;
-(void)renderWithTransform:(CGAffineTransform)arg1 onPaper:(char)arg2 clipped:(char)arg3 renderBufferSize:(CGSize)arg4 ;
-(void)resetPaintFramebufferAccumulateIfNeeded;
-(void)drawingRenderPoints:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(void)setSolidColorBackboard:(char)arg1 ;
-(char)solidColorBackboard;
-(void)setEdgeFadeInsets:(UIEdgeInsets)arg1 ;
-(void)renderImage:(CGImageRef)arg1 andMask:(CGImageRef)arg2 ;
-(void)renderImage:(CGImageRef)arg1 andMask:(CGImageRef)arg2 clippedToCommandSpaceRect:(CGRect)arg3 ;
-(void)setViewport;
-(unsigned)renderCommands:(id)arg1 renderedBlock:(/*^block*/id)arg2 ;
-(unsigned)renderCommands:(id)arg1 clippedToCommandSpaceRect:(CGRect)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(unsigned)clearAndRenderCommands:(id)arg1 clippedToCommandSpaceRect:(CGRect)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(void)flushMemoryIfPossible;
-(void)releaseDrawingFramebuffers;
-(void)releaseStrokeBuffer;
-(void)setupMaskFramebufferIfNecessary;
-(void)setupDrawingFramebuffersIfNecessary;
-(void)setupStrokeBufferIfNecessary;
-(float)renderPencilStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 command:(id)arg2 distanceToNextPoint:(float)arg3 randomSeed:(unsigned*)arg4 ;
-(float)renderMarkerStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 starts:(char)arg2 ends:(char)arg3 command:(id)arg4 distanceToNextPoint:(float)arg5 randomSeed:(unsigned*)arg6 ;
-(float)renderPenStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 command:(id)arg2 distanceToNextPoint:(float)arg3 ;
-(float)renderEraserStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 command:(id)arg2 distanceToNextPoint:(float)arg3 ;
-(float)renderPenStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 distanceToNextPoint:(float)arg2 alpha:(float)arg3 ;
-(void)renderEraserIndicatorVertices:(StrokeVertex*)arg1 numVertices:(unsigned long)arg2 buffer:(id)arg3 shader:(id)arg4 withTransform:(CGAffineTransform)arg5 ;
-(void)renderStrokeVertices:(StrokeVertex*)arg1 numVertices:(unsigned long)arg2 buffer:(id)arg3 shader:(id)arg4 ;
-(float)renderParticleStroke:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 starts:(char)arg2 ends:(char)arg3 distanceToNextPoint:(float)arg4 randomSeed:(unsigned*)arg5 alpha:(float)arg6 particleTexture:(unsigned)arg7 spacing:(float)arg8 count:(unsigned)arg9 size:(CGSize)arg10 rotateEachParticle:(char)arg11 ;
-(void)renderStrokeVertices:(StrokeVertex*)arg1 numVertices:(unsigned long)arg2 buffer:(id)arg3 particleTexture:(unsigned)arg4 shader:(id)arg5 ;
-(void)renderFullscreenQuadWithShader:(id)arg1 transform:(CGAffineTransform)arg2 flipped:(char)arg3 ;
-(void)renderCommand:(id)arg1 withTransform:(CGAffineTransform)arg2 mode:(int)arg3 flipped:(char)arg4 ;
-(UIEdgeInsets)edgeFadeInsets;
-(void)renderEraserIndicator:(SCD_Struct_IC11)arg1 withTransform:(CGAffineTransform)arg2 ;
-(void)drawingVertexReplay:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(void)renderVertices:(const vector<ICDrawingOutputPoint, std::__1::allocator<ICDrawingOutputPoint> >*)arg1 fromIndex:(unsigned)arg2 ;
-(float)renderStroke:(Contour*)arg1 starts:(char)arg2 ends:(char)arg3 command:(id)arg4 distanceToNextPoint:(float)arg5 randomSeed:(unsigned*)arg6 ;
-(void)renderTexture:(unsigned)arg1 flipped:(char)arg2 ;
-(void)finishRenderingClippedToCommandSpaceRect:(CGRect)arg1 ;
-(void)clearPaintFramebuffers;
-(void)finishRenderingNoTeardownForCommand:(id)arg1 clippedToPixelSpaceRect:(CGRect)arg2 ;
-(void)_finishRenderingNoTeardownForCommand:(id)arg1 clippedToPixelSpaceRect:(CGRect)arg2 ;
-(CGImageRef)newCGImageFromFramebuffer:(id)arg1 ;
-(CGImageRef)newCGImageFromGL;
-(void)renderImage:(CGImageRef)arg1 intoFramebuffer:(id)arg2 ;
-(void)applyCommandSpaceClipRect:(CGRect)arg1 ;
-(unsigned)_renderCommands:(id)arg1 clippedToCommandSpaceRect:(CGRect)arg2 renderedBlock:(/*^block*/id)arg3 ;
-(void)printPath;
-(void)printSVGFile;
-(void)releaseMaskFramebuffer;
-(void)setTransform:(CGAffineTransform)arg1 ;
-(void)setBackgroundColor:(CGColorRef)arg1 ;
-(void)dealloc;
-(CGAffineTransform)transform;
-(void)setBackgroundImage:(CGImageRef)arg1 ;
-(void)clear;
-(ICGLContext *)glContext;
-(float)inputScale;
-(ICDrawing *)drawing;
-(void)setDrawing:(ICDrawing *)arg1 ;
-(void)drawingBeganWithCommand:(id)arg1 ;
-(void)setEraserIndicatorAlpha:(float)arg1 ;
-(void)drawingEnded;
-(void)drawingCancelled;
-(void)setInputScale:(float)arg1 ;
-(float)eraserIndicatorAlpha;
@end

