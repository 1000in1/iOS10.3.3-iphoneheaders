/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:39:26 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/Podcasts.app/PlugIns/com.apple.podcasts.SpotlightIndexExtension.appex/com.apple.podcasts.SpotlightIndexExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CoreData/NSManagedObject.h>

@class NSString, NSSet;

@interface MTPodcast : NSManagedObject

@property (assign,nonatomic) char needsArtworkUpdate; 
@property (assign,nonatomic) char importing; 
@property (assign,nonatomic) char hasBeenSynced; 
@property (assign,nonatomic) char isExplicit; 
@property (assign,nonatomic) char sortAscending; 
@property (assign,nonatomic) char playbackNewestToOldest; 
@property (assign,nonatomic) double addedDate; 
@property (nonatomic,retain) NSString * author; 
@property (assign,nonatomic) int autoDownloadType; 
@property (nonatomic,retain) NSString * category; 
@property (assign,nonatomic) long long darkCount; 
@property (assign,nonatomic) long long darkCountLocal; 
@property (assign,nonatomic) long long deletePlayedEpisodes; 
@property (assign,nonatomic) double downloadedDate; 
@property (assign,nonatomic) long long episodeLimit; 
@property (nonatomic,retain) NSString * feedURL; 
@property (assign,nonatomic) long long flags; 
@property (assign,nonatomic) char hidden; 
@property (nonatomic,retain) NSString * imageURL; 
@property (nonatomic,retain) NSString * itemDescription; 
@property (assign,nonatomic) double lastDatePlayed; 
@property (assign,nonatomic) double lastTouchDate; 
@property (assign,nonatomic) char notifications; 
@property (assign,nonatomic) char orphanedFromCloud; 
@property (assign,nonatomic) long long podcastPID; 
@property (nonatomic,retain) NSString * provider; 
@property (assign,nonatomic) char showPlacardForOrphanedFromCloud; 
@property (assign,nonatomic) char showPlacardForRemovePlayedEpisodes; 
@property (assign,nonatomic) char showPlacardForSavedEpisodes; 
@property (assign,nonatomic) long long sortOrder; 
@property (assign,nonatomic) long long storeCollectionId; 
@property (nonatomic,retain) NSString * storeCleanURL; 
@property (nonatomic,retain) NSString * storeShortURL; 
@property (assign,nonatomic) double lastStoreEpisodesInfoCheckDate; 
@property (assign,nonatomic) double lastStorePodcastInfoCheckDate; 
@property (assign,nonatomic) char subscribed; 
@property (nonatomic,retain) NSString * title; 
@property (assign,nonatomic) double updateAvg; 
@property (assign,nonatomic) double updatedDate; 
@property (nonatomic,retain) NSString * updatedFeedURL; 
@property (assign,nonatomic) long long updateInterval; 
@property (assign,nonatomic) double updateStdDev; 
@property (nonatomic,retain) NSString * uuid; 
@property (nonatomic,retain) NSSet * episodes; 
@property (nonatomic,retain) NSSet * playlists; 
@property (nonatomic,retain) NSSet * playlistSettings; 
@property (nonatomic,readonly) char autoDownload; 
@property (assign,nonatomic) long long keepEpisodes; 
+(long long)episodeLimitDefaultValue;
+(long long)deletePlayedEpisodesDefaultValue;
+(int)autoDownloadDefaultValue;
+(id)podcastUuidForFeedUrlString:(id)arg1 ;
+(id)latestEpisodeUuidForPodcastUuid:(id)arg1 ctx:(id)arg2 ;
+(id)predicateForAllPodcasts;
+(id)podcastUuidForFeedUrl:(id)arg1 ;
+(id)podcastUuidForEpisodeUuid:(id)arg1 ;
-(void)_setFlag:(long long)arg1 state:(char)arg2 ;
-(char)_stateForFlag:(long long)arg1 ;
-(void)markPlaylistsForUpdate;
-(char)sortAscending;
-(char)playbackNewestToOldest;
-(id)mostRecentlyPlayedEpisode;
-(id)userEpisodeAfterEpisode:(id)arg1 ;
-(id)_episodeAfterEpisode:(id)arg1 restrictToUserEpisodes:(char)arg2 ;
-(long long)episodeLimitResolvedValue;
-(char)deletePlayedEpisodesResolvedValue;
-(id)sortDescriptorsForPlayOrder;
-(id)_latestOrOldestEpisode:(char)arg1 restrictToUserEpisodes:(char)arg2 excludePlayed:(char)arg3 ;
-(id)currentFeedURL;
-(void)setHasBeenSynced:(char)arg1 ;
-(char)hasBeenSynced;
-(void)setImporting:(char)arg1 ;
-(void)setDeletePlayedEpisodes:(long long)arg1 ;
-(char)importing;
-(void)setLastDatePlayed:(double)arg1 ;
-(void)setNeedsArtworkUpdate:(char)arg1 ;
-(char)needsArtworkUpdate;
-(void)setSortAscending:(char)arg1 ;
-(id)sortDescriptorsForSortOrder;
-(void)setPlaybackNewestToOldest:(char)arg1 ;
-(char)autodownloadDefault;
-(int)autoDownloadResolvedValue;
-(id)episodeToResume;
-(id)episodeAfterEpisode:(id)arg1 ;
-(id)firstUserEpisodeNotPlayed;
-(id)newestEpisode;
-(id)newestEpisodeNotPlayed;
-(id)newestUserEpisode;
-(id)newestUserEpisodeNotPlayed;
-(id)oldestEpisode;
-(id)oldestEpisodeNotPlayed;
-(id)oldestUserEpisode;
-(id)oldestUserEpisodeNotPlayed;
-(id)newestEpisodeUuid;
-(void)setIsExplicit:(char)arg1 ;
-(char)isExplicit;
@end

