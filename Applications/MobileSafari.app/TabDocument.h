/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:39:17 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <MobileSafari/AppBannerMetaTagContentObserver.h>
#import <MobileSafari/LoadingControllerDelegate.h>
#import <MobileSafari/QuickWebsiteSearchEventListener.h>
#import <libobjc.A.dylib/SFFormAutoFillControllerDelegate.h>
#import <MobileSafari/StoreBannerDelegate.h>
#import <libobjc.A.dylib/WBSFluidProgressStateSource.h>
#import <libobjc.A.dylib/WBSFluidProgressControllerWindowDelegate.h>
#import <libobjc.A.dylib/WKNavigationDelegatePrivate.h>
#import <libobjc.A.dylib/WKUIDelegatePrivate.h>
#import <MobileSafari/_WKDiagnosticLoggingDelegate.h>
#import <libobjc.A.dylib/_SFDialogControllerDelegate.h>
#import <libobjc.A.dylib/_SFDialogViewControllerPresenting.h>
#import <libobjc.A.dylib/_SFFindOnPageViewDelegate.h>
#import <libobjc.A.dylib/_SFPageLoadErrorControllerDelegate.h>
#import <MobileSafari/_SFPrintControllerDelegate.h>
#import <libobjc.A.dylib/_SFSafeBrowsingControllerDelegate.h>
#import <libobjc.A.dylib/_WKInputDelegate.h>
#import <MobileSafari/MergeableItem.h>
#import <libobjc.A.dylib/_SFDialogPresenting.h>

@protocol TabDocumentDelegate;
@class NSUUID, NSString, NSUserActivity, NSError, _SFURLSpoofingMitigator, _WKSessionState, _WKRemoteObjectInterface, _SFSafariSharingExtensionController, _SFReloadOptionsController, _SFQuickLookDocumentWriter, _SFInjectedJavaScriptController, _SFWebClipMetadataFetcher, TouchIconFetcher, NSMutableArray, FindOnPageCompletionProvider, _SFFormAutoFillController, LoadingController, WBSFluidProgressController, NSDictionary, _SFFluidProgressView, _SFNavigationBarItem, _SFDialogController, WebBookmark, WKBackForwardListItem, StoreBanner, PinnableBanner, _SFTelephonyNavigationMitigationPolicy, PageLoadTest, WBSFluidProgressState, BrowserController, FindOnPageView, _SFDownloadController, _WKDownload, _SFQuickLookDocument, _SFQuickLookDocumentController, UIImage, TabOverviewItem, TiltedTabItem, _SFBrowserConfiguration, PageLoadTestStatistics, WBSAutomaticReadingListItem, NSURL, _SFPageLoadErrorController, WBSSameDocumentNavigationToHistoryVisitCorrelator, _SFWebView, TabBarItem, _SFSafeBrowsingController, WBSHistoryVisit, LinkPreviewViewController, _SFPrintController, CSSearchableItemAttributeSet, ReaderContextWK2, _SFTabStateData, UIView;

@interface TabDocument : NSObject <AppBannerMetaTagContentObserver, LoadingControllerDelegate, QuickWebsiteSearchEventListener, SFFormAutoFillControllerDelegate, StoreBannerDelegate, WBSFluidProgressStateSource, WBSFluidProgressControllerWindowDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _WKDiagnosticLoggingDelegate, _SFDialogControllerDelegate, _SFDialogViewControllerPresenting, _SFFindOnPageViewDelegate, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFSafeBrowsingControllerDelegate, _WKInputDelegate, MergeableItem, _SFDialogPresenting> {

	unsigned _progressAnimationSuppressedCount;
	char _EVOrganizationNameIsValid;
	NSString* _EVOrganizationName;
	NSUserActivity* _userActivity;
	char _forwardActivityToCoreSpotlight;
	NSError* _lastLoadError;
	_SFURLSpoofingMitigator* _URLSpoofingMitigator;
	_WKSessionState* _savedSessionState;
	_WKRemoteObjectInterface* _siteSpecificSearchEventListenerInterface;
	_WKRemoteObjectInterface* _appBannerMetaTagContentObserverInterface;
	_SFSafariSharingExtensionController* _sharingExtensionController;
	_SFReloadOptionsController* _reloadOptionsController;
	_SFQuickLookDocumentWriter* _quickLookDocumentWriter;
	_SFInjectedJavaScriptController* _activityJSController;
	_SFWebClipMetadataFetcher* _webClipMetadataFetcher;
	TouchIconFetcher* _touchIconFetcher;
	NSMutableArray* _fallbackURLs;
	char _loadWasUserDriven;
	char _shouldDismissReaderInReponseToSameDocumentNavigation;
	FindOnPageCompletionProvider* _findCompletionProvider;
	_SFFormAutoFillController* _autoFillController;
	char _suppressingBackdropViewUpdates;
	char _allowURLAsTitle;
	LoadingController* _loadingController;
	WBSFluidProgressController* _fluidProgressController;
	unsigned _downloadBackgroundTaskIdentifier;
	char _wasOpenedFromHistory;
	NSDictionary* _initialArticleScrollDictionaryForCloudTab;
	char _isDisplayingHTTPAuthenticationDialog;
	_SFFluidProgressView* _progressView;
	_SFNavigationBarItem* _navigationBarItem;
	char _displayingStandaloneImage;
	char _displayingStandaloneMedia;
	char _quickLookDocumentCheckCompleted;
	char _didFirstPaint;
	_SFDialogController* _dialogController;
	char _shouldSuppressDialogsThatBlockWebProcess;
	char _shouldResetPrintSuppressionOnNextCommit;
	WebBookmark* _bookmarkForIconFetching;
	WKBackForwardListItem* _backForwardListItemForCurrentAppLinkBannerCheck;
	StoreBanner* _storeBanner;
	PinnableBanner* _appBannerPendingFirstPaint;
	char _sourceApplicationIsValid;
	char _isDisplayingTelephonyPrompt;
	_SFTelephonyNavigationMitigationPolicy* _telephonyNavigationPolicy;
	PageLoadTest* _pageLoadTest;
	char _hasDoneReaderAvailabilityDetection;
	char _wasOpenedFromLink;
	char _showingReader;
	char _shouldRestoreReader;
	char _shouldRevealAppLinkBannerForNextCommit;
	char _storeBannersAreDisabled;
	char _siteCustomIconPrecomposed;
	char _suppressingProgressAnimationForNavigationGesture;
	char _wantsReaderWhenActivated;
	char _hibernatedDueToMemoryWarning;
	char _showingContinuous;
	char _persistWhenHibernated;
	char _active;
	char _blankDocument;
	char _preparingForNewUserActivity;
	char _hibernated;
	char _closed;
	char _didFinishDocumentLoad;
	char _didFirstLayout;
	char _contentIsReadyForSnapshot;
	char _downloadedFileTypeIsQuickLookDocument;
	WBSFluidProgressState* _fluidProgressState;
	BrowserController* _browserController;
	FindOnPageView* _findOnPageView;
	_SFDownloadController* _downloadController;
	_WKDownload* _fileDownload;
	_SFQuickLookDocument* _quickLookDocument;
	_SFQuickLookDocumentController* _quickLookDocumentController;
	int _readerViewTopScrollOffset;
	PinnableBanner* _appBanner;
	NSString* _sourceApplicationBundleIdentifierForNextCommit;
	int _externalAppRedirectState;
	UIImage* _siteCustomIcon;
	TabOverviewItem* _tabOverviewItem;
	TiltedTabItem* _tiltedTabItem;
	WebBookmark* _readingListBookmark;
	unsigned _sessionStateRestorationSource;
	id<TabDocumentDelegate> _delegate;
	_SFBrowserConfiguration* _configuration;
	PageLoadTestStatistics* _pageLoadStatistics;
	WBSAutomaticReadingListItem* _automaticReadingListItem;
	NSURL* _webFeedURL;
	NSURL* _URLFromExternalApplication;
	_SFPageLoadErrorController* _pageLoadErrorController;
	WBSSameDocumentNavigationToHistoryVisitCorrelator* _sameDocumentNavigationToHistoryVisitCorrelator;
	_SFWebView* _webView;
	TabBarItem* _tabBarItem;
	_SFSafeBrowsingController* _safeBrowsingController;
	NSURL* _tabReuseURL;
	NSUUID* _UUID;
	WBSHistoryVisit* _lastVisit;
	LinkPreviewViewController* _previewViewController;
	_SFPrintController* _printController;
	NSUUID* _ownerUUID;
	CSSearchableItemAttributeSet* _searchableItemAttributes;
	ReaderContextWK2* _readerContext;
	_SFWebView* _readerWebView;
	CGPoint _scrollPoint;
	double _lastViewedTime;

}

@property (assign,getter=isShowingContinuous,nonatomic) char showingContinuous;                                                                 //@synthesize showingContinuous=_showingContinuous - In the implementation block
@property (assign,nonatomic,__weak) BrowserController * browserController;                                                                      //@synthesize browserController=_browserController - In the implementation block
@property (nonatomic,readonly) _SFReloadOptionsController * reloadOptionsController;                                                            //@synthesize reloadOptionsController=_reloadOptionsController - In the implementation block
@property (nonatomic,readonly) FindOnPageView * findOnPageView;                                                                                 //@synthesize findOnPageView=_findOnPageView - In the implementation block
@property (nonatomic,retain) _SFDownloadController * downloadController;                                                                        //@synthesize downloadController=_downloadController - In the implementation block
@property (nonatomic,retain) _WKDownload * fileDownload;                                                                                        //@synthesize fileDownload=_fileDownload - In the implementation block
@property (nonatomic,retain) _SFQuickLookDocument * quickLookDocument;                                                                          //@synthesize quickLookDocument=_quickLookDocument - In the implementation block
@property (assign,nonatomic) char wasOpenedFromLink;                                                                                            //@synthesize wasOpenedFromLink=_wasOpenedFromLink - In the implementation block
@property (nonatomic,retain,readonly) _SFQuickLookDocumentController * quickLookDocumentController;                                             //@synthesize quickLookDocumentController=_quickLookDocumentController - In the implementation block
@property (assign,getter=isShowingReader,nonatomic) char showingReader;                                                                         //@synthesize showingReader=_showingReader - In the implementation block
@property (assign,nonatomic) char shouldRestoreReader;                                                                                          //@synthesize shouldRestoreReader=_shouldRestoreReader - In the implementation block
@property (assign,nonatomic) int readerViewTopScrollOffset;                                                                                     //@synthesize readerViewTopScrollOffset=_readerViewTopScrollOffset - In the implementation block
@property (nonatomic,retain) PinnableBanner * appBanner;                                                                                        //@synthesize appBanner=_appBanner - In the implementation block
@property (assign,nonatomic) char shouldRevealAppLinkBannerForNextCommit;                                                                       //@synthesize shouldRevealAppLinkBannerForNextCommit=_shouldRevealAppLinkBannerForNextCommit - In the implementation block
@property (nonatomic,copy) NSString * sourceApplicationBundleIdentifierForNextCommit;                                                           //@synthesize sourceApplicationBundleIdentifierForNextCommit=_sourceApplicationBundleIdentifierForNextCommit - In the implementation block
@property (assign,nonatomic) char storeBannersAreDisabled;                                                                                      //@synthesize storeBannersAreDisabled=_storeBannersAreDisabled - In the implementation block
@property (assign,nonatomic) int externalAppRedirectState;                                                                                      //@synthesize externalAppRedirectState=_externalAppRedirectState - In the implementation block
@property (nonatomic,retain) UIImage * siteCustomIcon;                                                                                          //@synthesize siteCustomIcon=_siteCustomIcon - In the implementation block
@property (assign,nonatomic) char siteCustomIconPrecomposed;                                                                                    //@synthesize siteCustomIconPrecomposed=_siteCustomIconPrecomposed - In the implementation block
@property (getter=isShowingErrorPage,nonatomic,readonly) char showingErrorPage; 
@property (nonatomic,readonly) TabOverviewItem * tabOverviewItem;                                                                               //@synthesize tabOverviewItem=_tabOverviewItem - In the implementation block
@property (nonatomic,readonly) TiltedTabItem * tiltedTabItem;                                                                                   //@synthesize tiltedTabItem=_tiltedTabItem - In the implementation block
@property (nonatomic,retain) WebBookmark * readingListBookmark;                                                                                 //@synthesize readingListBookmark=_readingListBookmark - In the implementation block
@property (assign,nonatomic) char suppressingProgressAnimationForNavigationGesture;                                                             //@synthesize suppressingProgressAnimationForNavigationGesture=_suppressingProgressAnimationForNavigationGesture - In the implementation block
@property (assign,nonatomic) char wantsReaderWhenActivated;                                                                                     //@synthesize wantsReaderWhenActivated=_wantsReaderWhenActivated - In the implementation block
@property (getter=isPrivateBrowsingEnabled,nonatomic,readonly) char privateBrowsingEnabled; 
@property (assign,getter=isDisplayingStandaloneImage,nonatomic) char displayingStandaloneImage;                                                 //@synthesize displayingStandaloneImage=_displayingStandaloneImage - In the implementation block
@property (assign,getter=isDisplayingStandaloneMedia,nonatomic) char displayingStandaloneMedia;                                                 //@synthesize displayingStandaloneMedia=_displayingStandaloneMedia - In the implementation block
@property (assign,getter=wasHibernatedDueToMemoryWarning,nonatomic) char hibernatedDueToMemoryWarning;                                          //@synthesize hibernatedDueToMemoryWarning=_hibernatedDueToMemoryWarning - In the implementation block
@property (assign,nonatomic) unsigned sessionStateRestorationSource;                                                                            //@synthesize sessionStateRestorationSource=_sessionStateRestorationSource - In the implementation block
@property (nonatomic,__weak,readonly) id<WBSFluidProgressStateSource> currentFluidProgressStateSource; 
@property (assign,nonatomic,__weak) id<TabDocumentDelegate> delegate;                                                                           //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) _SFBrowserConfiguration * configuration;                                                                         //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,retain) PageLoadTestStatistics * pageLoadStatistics;                                                                       //@synthesize pageLoadStatistics=_pageLoadStatistics - In the implementation block
@property (nonatomic,readonly) WBSFluidProgressState * progressState;                                                                           //@synthesize fluidProgressState=_fluidProgressState - In the implementation block
@property (nonatomic,retain,readonly) WBSAutomaticReadingListItem * automaticReadingListItem;                                                   //@synthesize automaticReadingListItem=_automaticReadingListItem - In the implementation block
@property (nonatomic,retain) NSURL * webFeedURL;                                                                                                //@synthesize webFeedURL=_webFeedURL - In the implementation block
@property (nonatomic,readonly) _SFSafariSharingExtensionController * sharingExtensionController; 
@property (nonatomic,readonly) _SFInjectedJavaScriptController * activityJSController; 
@property (nonatomic,retain) NSURL * URLFromExternalApplication;                                                                                //@synthesize URLFromExternalApplication=_URLFromExternalApplication - In the implementation block
@property (nonatomic,readonly) _SFWebClipMetadataFetcher * webClipMetadataFetcher; 
@property (nonatomic,readonly) _SFPageLoadErrorController * pageLoadErrorController;                                                            //@synthesize pageLoadErrorController=_pageLoadErrorController - In the implementation block
@property (nonatomic,readonly) _SFDialogController * dialogController;                                                                          //@synthesize dialogController=_dialogController - In the implementation block
@property (nonatomic,readonly) WBSSameDocumentNavigationToHistoryVisitCorrelator * sameDocumentNavigationToHistoryVisitCorrelator;              //@synthesize sameDocumentNavigationToHistoryVisitCorrelator=_sameDocumentNavigationToHistoryVisitCorrelator - In the implementation block
@property (nonatomic,readonly) _SFTabStateData * tabStateData; 
@property (assign,nonatomic) char persistWhenHibernated;                                                                                        //@synthesize persistWhenHibernated=_persistWhenHibernated - In the implementation block
@property (assign,getter=isActive,nonatomic) char active;                                                                                       //@synthesize active=_active - In the implementation block
@property (nonatomic,readonly) _SFWebView * webView;                                                                                            //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) UIView * frontView; 
@property (assign,getter=isBlankDocument,nonatomic) char blankDocument;                                                                         //@synthesize blankDocument=_blankDocument - In the implementation block
@property (assign,getter=isPreparingForNewUserActivity,nonatomic) char preparingForNewUserActivity;                                             //@synthesize preparingForNewUserActivity=_preparingForNewUserActivity - In the implementation block
@property (nonatomic,readonly) TabBarItem * tabBarItem;                                                                                         //@synthesize tabBarItem=_tabBarItem - In the implementation block
@property (nonatomic,readonly) _SFNavigationBarItem * navigationBarItem; 
@property (nonatomic,readonly) _SFSafeBrowsingController * safeBrowsingController;                                                              //@synthesize safeBrowsingController=_safeBrowsingController - In the implementation block
@property (getter=isHibernated,nonatomic,readonly) char hibernated;                                                                             //@synthesize hibernated=_hibernated - In the implementation block
@property (getter=isAlive,nonatomic,readonly) char alive; 
@property (nonatomic,readonly) _WKSessionState * sessionState; 
@property (assign,nonatomic) CGPoint scrollPoint;                                                                                               //@synthesize scrollPoint=_scrollPoint - In the implementation block
@property (nonatomic,copy) NSURL * tabReuseURL;                                                                                                 //@synthesize tabReuseURL=_tabReuseURL - In the implementation block
@property (nonatomic,copy) NSUUID * UUID;                                                                                                       //@synthesize UUID=_UUID - In the implementation block
@property (assign,nonatomic) double lastViewedTime;                                                                                             //@synthesize lastViewedTime=_lastViewedTime - In the implementation block
@property (assign,getter=isClosed,nonatomic) char closed;                                                                                       //@synthesize closed=_closed - In the implementation block
@property (nonatomic,retain) WBSHistoryVisit * lastVisit;                                                                                       //@synthesize lastVisit=_lastVisit - In the implementation block
@property (nonatomic,copy) NSString * customUserAgent; 
@property (nonatomic,readonly) char didFinishDocumentLoad;                                                                                      //@synthesize didFinishDocumentLoad=_didFinishDocumentLoad - In the implementation block
@property (nonatomic,readonly) char didFirstLayout;                                                                                             //@synthesize didFirstLayout=_didFirstLayout - In the implementation block
@property (nonatomic,readonly) char contentIsReadyForSnapshot;                                                                                  //@synthesize contentIsReadyForSnapshot=_contentIsReadyForSnapshot - In the implementation block
@property (nonatomic,retain) LinkPreviewViewController * previewViewController;                                                                 //@synthesize previewViewController=_previewViewController - In the implementation block
@property (assign,nonatomic) char downloadedFileTypeIsQuickLookDocument;                                                                        //@synthesize downloadedFileTypeIsQuickLookDocument=_downloadedFileTypeIsQuickLookDocument - In the implementation block
@property (nonatomic,readonly) _SFPrintController * printController;                                                                            //@synthesize printController=_printController - In the implementation block
@property (assign,nonatomic,__weak) NSUUID * ownerUUID;                                                                                         //@synthesize ownerUUID=_ownerUUID - In the implementation block
@property (nonatomic,retain) CSSearchableItemAttributeSet * searchableItemAttributes;                                                           //@synthesize searchableItemAttributes=_searchableItemAttributes - In the implementation block
@property (nonatomic,readonly) char hasDoneReaderDetection;                                                                                     //@synthesize hasDoneReaderAvailabilityDetection=_hasDoneReaderAvailabilityDetection - In the implementation block
@property (nonatomic,readonly) ReaderContextWK2 * readerContext;                                                                                //@synthesize readerContext=_readerContext - In the implementation block
@property (nonatomic,readonly) _SFWebView * readerWebView;                                                                                      //@synthesize readerWebView=_readerWebView - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)tabDocumentForWKWebView:(id)arg1 ;
-(_SFPrintController *)printController;
-(id)URLForSharing;
-(void)snapshotWithSize:(CGSize)arg1 options:(unsigned)arg2 completion:(/*^block*/id)arg3 ;
-(id)titleForSharing;
-(char)isPDFDocument;
-(ReaderContextWK2 *)readerContext;
-(void)clearReaderView;
-(void)setSiteCustomIcon:(UIImage *)arg1 ;
-(void)didFailToContinueUserActivity;
-(id)loadURL:(id)arg1 userDriven:(char)arg2 ;
-(id)loadCloudTab:(id)arg1 ;
-(void)setBrowserController:(BrowserController *)arg1 ;
-(void)invalidateSourceApplication;
-(void)doneWaitingToContinueUserActivity;
-(void)prepareToContinueUserActivity;
-(void)updateTabTitle;
-(char)isBlankDocument;
-(id)initWithBrowserController:(id)arg1 ;
-(void)setBlankDocument:(char)arg1 ;
-(void)setPreparingForNewUserActivity:(char)arg1 ;
-(_SFNavigationBarItem *)navigationBarItem;
-(TabOverviewItem *)tabOverviewItem;
-(void)setPageLoadStatistics:(PageLoadTestStatistics *)arg1 ;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/id)arg2 ;
-(id)_backForwardList;
-(BrowserController *)browserController;
-(char)canSubscribeToWebFeed;
-(id)titleForNewBookmark;
-(WBSAutomaticReadingListItem *)automaticReadingListItem;
-(void)clearBrowserController;
-(void)stopAdvertisingProactiveActivityContent;
-(PinnableBanner *)appBanner;
-(char)hasQuickLookContent;
-(_SFQuickLookDocumentController *)quickLookDocumentController;
-(char)isPreparingForNewUserActivity;
-(void)endSuppressingProgressAnimation;
-(void)beginSuppressingProgressAnimation;
-(void)becomeFirstResponderWithSelectionMovingForward:(char)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setURLFromExternalApplication:(NSURL *)arg1 ;
-(void)setTabReuseURL:(NSURL *)arg1 ;
-(void)hibernate;
-(void)setShouldRestoreReader:(char)arg1 ;
-(void)restoreSessionState:(id)arg1 andNavigate:(char)arg2 fromSafariViewService:(char)arg3 ;
-(void)setShouldRevealAppLinkBannerForNextCommit:(char)arg1 ;
-(void)setSourceApplicationBundleIdentifierForNextCommit:(NSString *)arg1 ;
-(char)isShowingErrorPage;
-(_SFSafeBrowsingController *)safeBrowsingController;
-(void)userDidManipulateVisibleRegion;
-(void)setSuppressingProgressAnimationForNavigationGesture:(char)arg1 ;
-(id)loadRequest:(id)arg1 userDriven:(char)arg2 ;
-(char)quickLookDocumentIsReady;
-(void)clearBackForwardList;
-(void)setAppBanner:(PinnableBanner *)arg1 ;
-(void)setClosed:(char)arg1 userDriven:(char)arg2 ;
-(void)willClose;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 hibernated:(char)arg5 bookmark:(id)arg6 browserController:(id)arg7 relatedWebView:(id)arg8 ;
-(void)unhibernateWithRelatedWebView:(id)arg1 ;
-(void)restoreSessionState:(id)arg1 andNavigate:(char)arg2 ;
-(void)animateProgressForCompletedDocument;
-(char)shouldRestoreReader;
-(void)createBrowserReaderViewIfNeeded;
-(char)hasDoneReaderDetection;
-(char)addReadingListBookmarkWithBlock:(/*^block*/id)arg1 ;
-(char)isHibernated;
-(char)contentIsReadyForSnapshot;
-(void)reinsertQuickLookDocumentView;
-(void)freezeForNavigationGesture;
-(char)mustShowBarsForBackForwardListItem:(id)arg1 ;
-(void)unfreezeAfterNavigationGesture:(char)arg1 ;
-(void)performAutoFillAction;
-(void)reloadAllowingContentBlockers:(char)arg1 ;
-(void)subscribeToWebFeed;
-(void)setDownloadedFileTypeIsQuickLookDocument:(char)arg1 ;
-(void)_closeTabDocumentAnimated:(char)arg1 ;
-(void)_showProfileInstallAlert;
-(void)readerContentIsReadyForDisplay;
-(void)endSuppressingProgressAnimationAnimated:(char)arg1 ;
-(char)isDisplayingStandaloneMedia;
-(char)isDisplayingStandaloneImage;
-(id)backListControllerWithLimit:(int)arg1 ;
-(id)forwardListControllerWithLimit:(int)arg1 ;
-(_SFPageLoadErrorController *)pageLoadErrorController;
-(id)loadURL:(id)arg1 fromBookmark:(id)arg2 ;
-(id)loadAutomaticReadingListItem:(id)arg1 ;
-(NSURL *)webFeedURL;
-(id)dataForDisplayedPDF;
-(id)suggestedFilenameForDisplayedPDF;
-(char)shouldShowReaderOnActivate;
-(void)unhibernate;
-(id)initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 hibernated:(char)arg5 bookmark:(id)arg6 browserController:(id)arg7 ;
-(void)setAutomaticReadingListItem:(WBSAutomaticReadingListItem *)arg1 ;
-(unsigned)sessionStateRestorationSource;
-(char)currentPageLoadedFromReadingList;
-(id)customUserVisibleStringForReadingListBookmarkURL:(id)arg1 ;
-(void)setLastVisit:(WBSHistoryVisit *)arg1 ;
-(WBSSameDocumentNavigationToHistoryVisitCorrelator *)sameDocumentNavigationToHistoryVisitCorrelator;
-(void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(char)arg3 ;
-(void)loadingControllerWillStartUserDrivenLoad:(id)arg1 ;
-(id)URLForStatePersisting;
-(void)loadTestURL:(id)arg1 withCallback:(/*^block*/id)arg2 pagesNeedingMemoryWarningSent:(id)arg3 ;
-(void)setStoreBannersAreDisabled:(char)arg1 ;
-(id)standaloneImageData;
-(void)setOverlaidAccessoryViewsInset:(CGSize)arg1 ;
-(WebBookmark *)readingListBookmark;
-(_SFTabStateData *)tabStateData;
-(void)clearBackForwardListKeepingCurrentItem;
-(PageLoadTestStatistics *)pageLoadStatistics;
-(void)didDeactivateReaderWithMode:(unsigned)arg1 ;
-(char)isShowingReadingListArchive;
-(id)readerPageArchiveURL;
-(void)didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg1 ;
-(void)didClickLinkInReaderWithRequest:(id)arg1 ;
-(id)actionsForElement:(id)arg1 defaultActions:(id)arg2 ;
-(void)setPersistWhenHibernated:(char)arg1 ;
-(char)wasHibernatedDueToMemoryWarning;
-(TiltedTabItem *)tiltedTabItem;
-(void)setNeedsNewTabSnapshot;
-(void)resetTabViewItems;
-(NSURL *)tabReuseURL;
-(id)initWithTabStateData:(id)arg1 hibernated:(char)arg2 browserController:(id)arg3 ;
-(id)tabStateDataForQuickUpdate;
-(void)setReadingListBookmark:(WebBookmark *)arg1 ;
-(void)setInitialURLForStatePersisting:(id)arg1 title:(id)arg2 ;
-(void)_destroyDocumentView;
-(void)clearReaderContext;
-(void)clearPageLoadStatistics;
-(void)_setSuppressingBackdropViewUpdates:(char)arg1 ;
-(id)_titleIncludeLoading:(char)arg1 allowURLStringFallback:(char)arg2 allowUntitled:(char)arg3 ;
-(id)_titleIncludeLoading:(char)arg1 allowURLStringFallback:(char)arg2 ;
-(id)_addTitlePrefixToString:(id)arg1 ;
-(id)tabBarTitle;
-(void)_updateNavigationBarItem;
-(void)_searchEngineControllerDidBecomeAvailable:(id)arg1 ;
-(void)_updateStackName;
-(void)_createDocumentViewRelatedTo:(id)arg1 ;
-(id)_initWithTitle:(id)arg1 URL:(id)arg2 UUID:(id)arg3 privateBrowsingEnabled:(char)arg4 bookmark:(id)arg5 browserController:(id)arg6 createDocumentView:(/*^block*/id)arg7 ;
-(CSSearchableItemAttributeSet *)searchableItemAttributes;
-(void)setSearchableItemAttributes:(CSSearchableItemAttributeSet *)arg1 ;
-(void)setSiteCustomIconPrecomposed:(char)arg1 ;
-(void)clearTabReuseURL;
-(void)setQuickLookDocumentFromCurrentBackForwardListItem:(id)arg1 ;
-(id)quickLookDocumentFromCurrentBackForwardListItem;
-(void)snapshotForWebClipIcon:(/*^block*/id)arg1 ;
-(id)_loadURLInternal:(id)arg1 userDriven:(char)arg2 ;
-(id)loadWebClip:(id)arg1 userDriven:(char)arg2 ;
-(void)restoreScrollPositionWithCloudTab:(id)arg1 ;
-(void)clearReaderScrollInformation;
-(void)_updateShowingContinuous;
-(void)setShowingContinuous:(char)arg1 ;
-(id)_backListWithLimit:(unsigned)arg1 ;
-(id)_forwardListWithLimit:(unsigned)arg1 ;
-(void)_redirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 promptPolicy:(int)arg3 isMainFrame:(char)arg4 userAction:(id)arg5 ;
-(void)_completeRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 userCancelled:(char)arg3 ;
-(void)_queueAlertForRedirectToExternalNavigationResult:(id)arg1 fromOriginalRequest:(id)arg2 isMainFrame:(char)arg3 promptPolicy:(int)arg4 userAction:(id)arg5 ;
-(void)_clearNavigationSource;
-(id)_resultOfLoadingRequest:(id)arg1 inMainFrame:(char)arg2 userInitiated:(char)arg3 ;
-(void)_cancelAntiPhishingCheckAndInvalidateSafeBrowsingObserver;
-(void)_createDocumentViewWithConfiguration:(id)arg1 ;
-(void)_loadingControllerEstimatedProgressChangedTo:(double)arg1 ;
-(void)_loadingControllerDidStartLoading;
-(void)_loadingControllerDidStopLoadingWithError:(id)arg1 ;
-(void)_startedLoadingResources;
-(void)_stoppedLoadingResources;
-(void)_updateFallbackURLsForUserTypedAddress:(id)arg1 ;
-(id)_loadNextFallbackURLWithWebClip:(id)arg1 ;
-(id)_webViewConfiguration;
-(void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2 ;
-(void)didFindAppBannerWithContent:(id)arg1 ;
-(id)touchIconFetcher;
-(char)persistWhenHibernated;
-(void)_setAppBannerWhenPainted:(id)arg1 ;
-(void)_forceStopLoading;
-(char)_shouldAskAboutInsecureFormSubmissionForAction:(id)arg1 andURL:(id)arg2 ;
-(id)_readingListArchiveNextPageLinkForRequest:(id)arg1 targetFrame:(id)arg2 ;
-(void)_addNoFeedAppSupportAlert;
-(void)_loadStartedDuringSimulatedClickForURL:(id)arg1 ;
-(void)setQuickLookDocument:(_SFQuickLookDocument *)arg1 ;
-(char)shouldActivateReaderWhenAvailable;
-(void)setWebFeedURL:(NSURL *)arg1 ;
-(void)_updateInitialZoomScaleForPPT;
-(void)_showQuickLookDocumentView;
-(void)_hideQuickLookDocumentView;
-(void)_clearAppBannerIfNotCurrentStoreBanner;
-(void)_checkForAppLink;
-(id)_initWithBrowserController:(id)arg1 configuration:(id)arg2 ;
-(id)tabDocumentForPreviewURL:(id)arg1 relatedToWebView:(id)arg2 ;
-(id)_actionsForElement:(id)arg1 defaultActions:(id)arg2 previewViewController:(id)arg3 ;
-(void)_willCommitPreviewViewController:(id)arg1 ;
-(void)_updateSnapshotForWebClip:(id)arg1 ;
-(_SFWebClipMetadataFetcher *)webClipMetadataFetcher;
-(void)setHibernatedDueToMemoryWarning:(char)arg1 ;
-(void)setLoading;
-(CGRect)_convertRectFromDocumentToWebView:(CGRect)arg1 ;
-(void)_animateElement:(id)arg1 toToolbarButton:(int)arg2 ;
-(id)resultOfLoadingURL:(id)arg1 ;
-(id)_openInNewPageActionForElement:(id)arg1 previewViewController:(id)arg2 ;
-(id)_addToReadingListActionForElement:(id)arg1 withURL:(id)arg2 ;
-(void)_loadingControllerWillLoadRequest:(id)arg1 userDriven:(char)arg2 ;
-(void)findOnPageCompletionProvider:(id)arg1 setStringToComplete:(id)arg2 ;
-(char)didFirstLayout;
-(char)didFinishDocumentLoad;
-(void)collectReadingListItemInfo;
-(void)didActivateReader;
-(void)updateReadingListItemPreviewText:(id)arg1 ;
-(void)dismissStoreBanner:(id)arg1 ;
-(void)setStoreBanner:(id)arg1 isPinned:(char)arg2 ;
-(char)shouldBlockStoreBanner:(id)arg1 ;
-(id)rawTitle;
-(void)snapshotWithSize:(CGSize)arg1 topBackdropHeight:(float)arg2 options:(unsigned)arg3 completion:(/*^block*/id)arg4 ;
-(char)supportsFindOnPage;
-(void)saveWebArchiveToPath:(id)arg1 completion:(/*^block*/id)arg2 ;
-(_SFDownloadController *)downloadController;
-(void)setDownloadController:(_SFDownloadController *)arg1 ;
-(_WKDownload *)fileDownload;
-(void)setFileDownload:(_WKDownload *)arg1 ;
-(char)shouldRevealAppLinkBannerForNextCommit;
-(NSString *)sourceApplicationBundleIdentifierForNextCommit;
-(char)storeBannersAreDisabled;
-(int)externalAppRedirectState;
-(void)setExternalAppRedirectState:(int)arg1 ;
-(UIImage *)siteCustomIcon;
-(char)siteCustomIconPrecomposed;
-(char)suppressingProgressAnimationForNavigationGesture;
-(char)wantsReaderWhenActivated;
-(void)setWantsReaderWhenActivated:(char)arg1 ;
-(void)setDisplayingStandaloneMedia:(char)arg1 ;
-(void)setSessionStateRestorationSource:(unsigned)arg1 ;
-(char)isShowingContinuous;
-(NSURL *)URLFromExternalApplication;
-(char)downloadedFileTypeIsQuickLookDocument;
-(void)setOwnerUUID:(NSUUID *)arg1 ;
-(void)loadAlternateHTMLString:(id)arg1 baseURL:(id)arg2 forUnreachableURL:(id)arg3 ;
-(CGPoint)scrollPoint;
-(void)setScrollPoint:(CGPoint)arg1 ;
-(void)setAllowsRemoteInspection:(char)arg1 ;
-(NSString *)customUserAgent;
-(void)setDelegate:(id<TabDocumentDelegate>)arg1 ;
-(void)dealloc;
-(NSString *)description;
-(void)reload;
-(id<TabDocumentDelegate>)delegate;
-(char)isActive;
-(id)title;
-(id)URL;
-(char)_isSecure;
-(NSUUID *)UUID;
-(TabBarItem *)tabBarItem;
-(void)setActive:(char)arg1 ;
-(_SFWebView *)webView;
-(void)setCustomUserAgent:(NSString *)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(_SFBrowserConfiguration *)configuration;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 ;
-(char)isLoading;
-(id)pdfView;
-(char)canGoBack;
-(char)canGoForward;
-(void)stopLoading;
-(void)goBack;
-(void)goForward;
-(id)URLString;
-(id)loadUserTypedAddress:(id)arg1 ;
-(double)estimatedProgress;
-(UIView *)frontView;
-(void)setClosed:(char)arg1 ;
-(char)isClosed;
-(_WKSessionState *)sessionState;
-(NSUUID *)ownerUUID;
-(void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(int)arg4 ;
-(void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4 ;
-(void)goToBackForwardListItem:(id)arg1 ;
-(char)isShowingReader;
-(WBSFluidProgressState *)progressState;
-(id)expectedOrCurrentURL;
-(id<WBSFluidProgressStateSource>)currentFluidProgressStateSource;
-(void)clearFluidProgressState;
-(char)createFluidProgressState;
-(char)hasFailedURL;
-(void)fluidProgressRocketAnimationDidComplete;
-(id)committedURL;
-(WBSHistoryVisit *)lastVisit;
-(void)_webViewWebProcessDidCrash:(id)arg1 ;
-(_SFDialogController *)dialogController;
-(void)presentDialog:(id)arg1 sender:(id)arg2 ;
-(id)webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 ;
-(void)webViewDidClose:(id)arg1 ;
-(void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(_SFWebView *)readerWebView;
-(id)_webView:(id)arg1 previewViewControllerForURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 ;
-(void)_webView:(id)arg1 commitPreviewedViewController:(id)arg2 ;
-(void)pageLoadErrorControllerHideAlert:(id)arg1 ;
-(void)pageLoadErrorControllerDidAddAlert:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3 ;
-(void)pageLoadErrorController:(id)arg1 didChooseOnlyAvailableIdentityForAuthenticationChallenge:(id)arg2 ;
-(char)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1 ;
-(void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2 ;
-(double)lastViewedTime;
-(void)setLastViewedTime:(double)arg1 ;
-(int)readerViewTopScrollOffset;
-(void)setReaderViewTopScrollOffset:(int)arg1 ;
-(void)setShowingReader:(char)arg1 ;
-(void)setDisplayingStandaloneImage:(char)arg1 ;
-(int)readingListBookmarkID;
-(char)wasOpenedFromLink;
-(void)setWasOpenedFromLink:(char)arg1 ;
-(void)safeBrowsingControllerDidShowSecurityWarningPage:(id)arg1 ;
-(void)safeBrowsingControllerClosePage:(id)arg1 ;
-(void)safeBrowsingController:(id)arg1 didIgnoreWarningWithURL:(id)arg2 ;
-(void)safeBrowsingControllerGoBack:(id)arg1 ;
-(void)cancelCheckForFraudulentWebsites;
-(void)startCheckingFraudulentWebSitesWithURL:(id)arg1 ;
-(_SFSafariSharingExtensionController *)sharingExtensionController;
-(SecTrustRef)_serverTrust;
-(char)printControllerPageIsLoading:(id)arg1 ;
-(char)printControllerShouldPrintReader:(id)arg1 ;
-(char)printControllerCanPresentPrintUI:(id)arg1 ;
-(id)URLStringForPrintController:(id)arg1 ;
-(id)pageTitleForPrintController:(id)arg1 ;
-(id)loadingDialogPageTitleForPrintController:(id)arg1 ;
-(void)printController:(id)arg1 didCreatePrintInfo:(id)arg2 ;
-(void)didDetermineReaderAvailability:(char)arg1 ;
-(char)isReaderAvailable;
-(void)visibilityWillChangeForFindOnPageView:(id)arg1 ;
-(id)webViewForFindOnPageView:(id)arg1 ;
-(void)updateFindCompletionProviderWithMatchesCount:(unsigned)arg1 forString:(id)arg2 forFindOnPageView:(id)arg3 ;
-(_SFReloadOptionsController *)reloadOptionsController;
-(FindOnPageView *)findOnPageView;
-(char)formAutoFillControllerCanPrefillForm:(id)arg1 ;
-(id)formAutoFillControllerURLForFormAutoFill:(id)arg1 ;
-(char)formAutoFillControllerShouldDisableAutoFill:(id)arg1 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4 ;
-(void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2 ;
-(void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(int)arg3 ;
-(void)_webView:(id)arg1 renderingProgressDidChange:(unsigned)arg2 ;
-(id)_webCryptoMasterKeyForWebView:(id)arg1 ;
-(void)_webViewDidBeginNavigationGesture:(id)arg1 ;
-(void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2 ;
-(void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3 ;
-(void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2 ;
-(void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(/*^block*/id)arg7 ;
-(void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(/*^block*/id)arg5 ;
-(void)_webView:(id)arg1 printFrame:(id)arg2 ;
-(void)_webViewFullscreenMayReturnToInline:(id)arg1 ;
-(void)_webViewDidEnterFullscreen:(id)arg1 ;
-(void)_webViewDidExitFullscreen:(id)arg1 ;
-(void)_webView:(id)arg1 imageOrMediaDocumentSizeChanged:(CGSize)arg2 ;
-(char)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2 ;
-(id)_webView:(id)arg1 actionsForElement:(id)arg2 defaultActions:(id)arg3 ;
-(void)_webView:(id)arg1 didNotHandleTapAsClickAtPoint:(CGPoint)arg2 ;
-(void)_webView:(id)arg1 willPreviewImageWithURL:(id)arg2 ;
-(void)_webView:(id)arg1 commitPreviewedImageWithURL:(id)arg2 ;
-(void)_webView:(id)arg1 didDismissPreviewViewController:(id)arg2 ;
-(UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(CGPoint)arg3 targetContentOffset:(inout CGPoint*)arg4 ;
-(id)_webView:(id)arg1 previewViewControllerForAnimatedImageAtURL:(id)arg2 defaultActions:(id)arg3 elementInfo:(id)arg4 imageSize:(CGSize)arg5 ;
-(id)_presentingViewControllerForWebView:(id)arg1 ;
-(char)dialogController:(id)arg1 shouldSuppressDialog:(id)arg2 ;
-(void)dialogController:(id)arg1 willPresentDialog:(id)arg2 ;
-(void)dialogController:(id)arg1 didDismissDialog:(id)arg2 ;
-(void)dialogController:(id)arg1 presentViewController:(id)arg2 withAdditionalAnimations:(/*^block*/id)arg3 ;
-(void)dialogController:(id)arg1 dismissViewController:(id)arg2 withAdditionalAnimations:(/*^block*/id)arg3 ;
-(void)_webView:(id)arg1 didStartInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(/*^block*/id)arg4 ;
-(void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2 ;
-(void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3 ;
-(char)isPrivateBrowsingEnabled;
-(_SFInjectedJavaScriptController *)activityJSController;
-(id)_EVOrganizationName;
-(void)_performSafeBrowsingCheckForURL:(id)arg1 ;
-(void)_invalidateEVOrganizationName;
-(void)_showGenericDownloadAlert;
-(_SFQuickLookDocument *)quickLookDocument;
-(void)invalidateUserActivity;
-(void)updateUserActivity;
-(void)setUUID:(NSUUID *)arg1 ;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didCommitNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFinishNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(char)isAlive;
-(LinkPreviewViewController *)previewViewController;
-(void)setPreviewViewController:(LinkPreviewViewController *)arg1 ;
@end

