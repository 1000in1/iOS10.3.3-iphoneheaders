/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:39:15 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileSafari.app/MobileSafari
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileSafari/MobileSafari-Structs.h>
#import <UIKit/UIResponder.h>
#import <MobileSafari/ActionPanelDelegate.h>
#import <MobileSafari/AddBookmarkActivityDelegate.h>
#import <MobileSafari/AddToSharedLinksActivityDelegate.h>
#import <MobileSafari/BackForwardTableViewControllerDelegate.h>
#import <MobileSafari/BookmarksBarViewDelegate.h>
#import <MobileSafari/BookmarksNavigationControllerDelegate.h>
#import <MobileSafari/BrowserToolbarDelegate.h>
#import <MobileSafari/TabDocumentDelegate.h>
#import <MobileSafari/ContinuousReadingViewControllerDelegate.h>
#import <MobileSafari/CatalogViewControllerDelegate.h>
#import <MobileSafari/SidebarInteractionReporterDelegate.h>
#import <UIKit/UIGestureRecognizerDelegatePrivate.h>
#import <libobjc.A.dylib/_UIBasicAnimationFactory.h>
#import <libobjc.A.dylib/_SFNavigationBarDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>
#import <MobileSafari/SidebarContentDimmingViewDelegate.h>
#import <libobjc.A.dylib/SFReaderAppearanceViewControllerDelegate.h>
#import <libobjc.A.dylib/SKStoreProductViewControllerDelegate.h>
#import <libobjc.A.dylib/_SFBrowserKeyCommandMethods.h>
#import <libobjc.A.dylib/_SFDynamicBarAnimatorDelegate.h>
#import <MobileSafari/CompletionDetailViewControllerDelegate.h>
#import <MobileSafari/LinkPreviewProvider.h>
#import <libobjc.A.dylib/MFMailComposeViewControllerDelegate.h>
#import <MobileSafari/MobileSafariWindowDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <libobjc.A.dylib/_SFDownloadControllerDelegate.h>
#import <libobjc.A.dylib/_SFSingleBookmarkNavigationControllerDelegate.h>

@class TabController, BrowserRootViewController, UIScrollView, UIView, QuickLookBannerController, UITapGestureRecognizer, WKBackForwardListItem, TabDocument, NSString, BookmarksNavigationController, ContinuousReadingViewController, NSTimer, UIAlertController, NSMapTable, BookmarksBarView, GradientView, _SFBrowserConfiguration, ContinuousReadingController, _SFCrashBanner, UIStatusBar, SearchStateCache, NSDate, UIPinchGestureRecognizer, UIToolbar, CatalogViewControllerState, _SFDynamicBarAnimator, SidebarContentDimmingView, SidebarInteractionReporter, BrowserWindowController, _SFWebView, NSUUID, BrowserToolbar, _SFBrowserSavedState, NSNumber, NavigationBar, WKPreferences, DownloadDispatcher, SKStoreProductViewController, UITextRange, TabMergingController, RecentlyClosedTabViewController, WKProcessPool, BrowserContainerViewController;

@interface BrowserController : UIResponder <ActionPanelDelegate, AddBookmarkActivityDelegate, AddToSharedLinksActivityDelegate, BackForwardTableViewControllerDelegate, BookmarksBarViewDelegate, BookmarksNavigationControllerDelegate, BrowserToolbarDelegate, TabDocumentDelegate, ContinuousReadingViewControllerDelegate, CatalogViewControllerDelegate, SidebarInteractionReporterDelegate, UIGestureRecognizerDelegatePrivate, _UIBasicAnimationFactory, _SFNavigationBarDelegate, UIPopoverPresentationControllerDelegate, SidebarContentDimmingViewDelegate, SFReaderAppearanceViewControllerDelegate, SKStoreProductViewControllerDelegate, _SFBrowserKeyCommandMethods, _SFDynamicBarAnimatorDelegate, CompletionDetailViewControllerDelegate, LinkPreviewProvider, MFMailComposeViewControllerDelegate, MobileSafariWindowDelegate, UIScrollViewDelegate, _SFDownloadControllerDelegate, _SFSingleBookmarkNavigationControllerDelegate> {

	TabController* _tabController;
	BrowserRootViewController* _rootViewController;
	UIScrollView* _scrollView;
	UIView* _rootView;
	UIView* _tabBarClipperView;
	QuickLookBannerController* _quickLookBannerController;
	UITapGestureRecognizer* _quickLookTapRecognizer;
	char _isProgressEnabled;
	WKBackForwardListItem* _backForwardListItemNeedingSnapshot;
	TabDocument* _speculativeLoadDocument;
	TabDocument* _nextContinuousItemDocument;
	TabDocument* _previousContinuousItemDocument;
	TabDocument* _previewDocument;
	int _currentlyLoadingResourcesCount;
	char _isRunningTabExposeTest;
	unsigned _tabExposeTestLoadCount;
	unsigned _tabExposeTestIterationsRemaining;
	char _showingAppModalDialog;
	NSString* _searchCountKey;
	BookmarksNavigationController* _modalBookmarksController;
	char _presentingModalBookmarksController;
	char _showingTiltedTabView;
	char _showingTabOverview;
	ContinuousReadingViewController* _continuousReadingViewController;
	NSTimer* _readerDocumentSetupTimer;
	/*^block*/id _finishReaderAnimationBlock;
	NSTimer* _previewDocumentCloseTimer;
	UIAlertController* _tabExposeAlertController;
	NSMapTable* _viewControllersPendingPresentation;
	char _antiPhishingServiceInitialized;
	char _applicationIsOpaque;
	BookmarksBarView* _bookmarksBar;
	float _bottomBarKeyboardOffset;
	GradientView* _bottomPrivateBrowsingGradient;
	_SFBrowserConfiguration* _cachedConfiguration;
	char _contentBorrowedForTab;
	UIEdgeInsets _contentInsetForContentFrame;
	ContinuousReadingController* _continuousReadingController;
	char _cloudTabsEnabled;
	_SFCrashBanner* _crashBanner;
	float _crashBannerDraggingOffset;
	char _interactivelyChangingObscuredInsets;
	float _lastAdjustmentForKeyboard;
	int _lastTabSwitchKeyboardModifierFlags;
	UIView* _navigationBarAuxiliaryBarsContainer;
	UIView* _pageView;
	TabDocument* _progressSuppressingDocument;
	UIStatusBar* _scrollingStatusBar;
	SearchStateCache* _searchStateCache;
	UIView* _scrollToTopView;
	char _scrollViewIsDragging;
	char _shouldMakeFavoritesStickyWhenReinsertingBorrowedContent;
	char _statusBarStyleUpdateQueued;
	NSDate* _suspendDate;
	char _suspending;
	char _tabViewPinchActive;
	UIPinchGestureRecognizer* _tabViewPinchRecognizer;
	UIToolbar* _tiltedTabToolbar;
	GradientView* _topPrivateBrowsingGradient;
	CatalogViewControllerState* _catalogViewControllerStateForSizeChange;
	char _shouldDisableToolbarForCatalogViewControllerPopover;
	char _disableBarHiding;
	_SFDynamicBarAnimator* _dynamicBarAnimator;
	int _dynamicBarAnimatorStateBeforeNavigationGesture;
	char _pageScrollsWithBottomBar;
	char _shouldShowBarsAfterDraggingDownward;
	UITapGestureRecognizer* _showBarsFromBottomBarRecognizer;
	char _updatingGeometryFromDynamicBarAnimator;
	TabDocument* _documentWhoseProgressIsShown;
	float _progress;
	char _resourcesLoading;
	char _showingProgressIndicator;
	SidebarContentDimmingView* _sidebarContentDimmingView;
	BookmarksNavigationController* _sidebarController;
	unsigned _sidebarControllerActiveAnimationCount;
	SidebarInteractionReporter* _sidebarInteractionReporter;
	UIView* _sidebarSnapshotView;
	char _isSpeculativeLoadingEnabled;
	NSTimer* _speculativeLoadingStartTimer;
	NSString* _speculativeLoadURL;
	char _isPerformingRootViewControllerSizeTransition;
	int _rootViewControllerVerticalSizeClassBeforeSizeTransition;
	int _bookmarksPresentationStyleBeforeSizeTransition;
	char _readerViewStale;
	char _readerShouldBeShownIfPossible;
	char _fullScreenInPortrait;
	char _usesNarrowLayout;
	char _showingCrashBanner;
	char _transitioningFromBookmarksPanelToSidebarForSizeChange;
	char _showingTabBar;
	char _privateBrowsingEnabled;
	char _showingSidebar;
	char _canFocusNavigationBarURL;
	char _inNewWindowHinting;
	BrowserWindowController* _browserWindowController;
	_SFWebView* _webView;
	NSUUID* _UUID;
	BrowserToolbar* _bottomToolbar;
	TabDocument* _cachedDocumentOnContinuousTransition;
	_SFBrowserSavedState* _savedState;
	NSNumber* _doNotTrackEnabledPreference;
	NavigationBar* _navigationBar;
	int _favoritesState;
	WKPreferences* _wkPreferences;
	DownloadDispatcher* _downloadDispatcher;
	SKStoreProductViewController* _presentedStoreProductViewController;
	UITextRange* _textRangeToRestoreAfterParsecCardDismissal;
	double _lastInteractionTime;

}

@property (getter=isPresentingModalBookmarksController,nonatomic,readonly) char presentingModalBookmarksController; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) TabMergingController * currentTabMergingController; 
@property (nonatomic,readonly) TabMergingController * privateTabMergingController; 
@property (nonatomic,readonly) TabMergingController * normalTabMergingController; 
@property (nonatomic,__weak,readonly) BrowserWindowController * browserWindowController;                                         //@synthesize browserWindowController=_browserWindowController - In the implementation block
@property (nonatomic,readonly) _SFWebView * webView;                                                                             //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) BrowserRootViewController * rootViewController;                                                   //@synthesize rootViewController=_rootViewController - In the implementation block
@property (nonatomic,readonly) NSUUID * UUID;                                                                                    //@synthesize UUID=_UUID - In the implementation block
@property (nonatomic,readonly) UIView * legacyUIKitPresentationSourceView; 
@property (nonatomic,readonly) BrowserToolbar * topToolbar; 
@property (nonatomic,readonly) BrowserToolbar * bottomToolbar;                                                                   //@synthesize bottomToolbar=_bottomToolbar - In the implementation block
@property (nonatomic,readonly) BrowserToolbar * activeToolbar; 
@property (assign,getter=isReaderViewStale,nonatomic) char readerViewStale;                                                      //@synthesize readerViewStale=_readerViewStale - In the implementation block
@property (assign,nonatomic) char readerShouldBeShownIfPossible;                                                                 //@synthesize readerShouldBeShownIfPossible=_readerShouldBeShownIfPossible - In the implementation block
@property (nonatomic,retain) TabDocument * previousContinuousItemDocument;                                                       //@synthesize previousContinuousItemDocument=_previousContinuousItemDocument - In the implementation block
@property (nonatomic,retain) TabDocument * nextContinuousItemDocument;                                                           //@synthesize nextContinuousItemDocument=_nextContinuousItemDocument - In the implementation block
@property (nonatomic,retain) TabDocument * cachedDocumentOnContinuousTransition;                                                 //@synthesize cachedDocumentOnContinuousTransition=_cachedDocumentOnContinuousTransition - In the implementation block
@property (nonatomic,readonly) ContinuousReadingController * continuousReadingController; 
@property (nonatomic,readonly) char interfaceFillsScreen; 
@property (nonatomic,readonly) char fullScreenInPortrait;                                                                        //@synthesize fullScreenInPortrait=_fullScreenInPortrait - In the implementation block
@property (nonatomic,readonly) char wantsTransparentBackground; 
@property (assign,nonatomic) double lastInteractionTime;                                                                         //@synthesize lastInteractionTime=_lastInteractionTime - In the implementation block
@property (assign,nonatomic) char usesNarrowLayout;                                                                              //@synthesize usesNarrowLayout=_usesNarrowLayout - In the implementation block
@property (nonatomic,readonly) char documentIsEmpty; 
@property (assign,getter=isShowingCrashBanner,nonatomic) char showingCrashBanner;                                                //@synthesize showingCrashBanner=_showingCrashBanner - In the implementation block
@property (assign,nonatomic) char transitioningFromBookmarksPanelToSidebarForSizeChange;                                         //@synthesize transitioningFromBookmarksPanelToSidebarForSizeChange=_transitioningFromBookmarksPanelToSidebarForSizeChange - In the implementation block
@property (nonatomic,readonly) char bookmarksButtonIsInNavigationBar; 
@property (nonatomic,readonly) BookmarksNavigationController * bookmarksNavigationController; 
@property (nonatomic,readonly) SidebarInteractionReporter * sidebarInteractionReporter; 
@property (getter=isShowingCompletionDetail,nonatomic,readonly) char showingCompletionDetail; 
@property (assign,getter=isShowingTabBar,nonatomic) char showingTabBar;                                                          //@synthesize showingTabBar=_showingTabBar - In the implementation block
@property (nonatomic,readonly) float buttonBarHeight; 
@property (assign,nonatomic) float zoomScale; 
@property (assign,nonatomic) CGPoint contentOffset; 
@property (nonatomic,readonly) TabController * tabController;                                                                    //@synthesize tabController=_tabController - In the implementation block
@property (nonatomic,readonly) RecentlyClosedTabViewController * recentlyClosedTabController; 
@property (nonatomic,readonly) _SFBrowserSavedState * savedState;                                                                //@synthesize savedState=_savedState - In the implementation block
@property (getter=isPrivateBrowsingAvailable,nonatomic,readonly) char privateBrowsingAvailable; 
@property (assign,getter=isPrivateBrowsingEnabled,nonatomic) char privateBrowsingEnabled;                                        //@synthesize privateBrowsingEnabled=_privateBrowsingEnabled - In the implementation block
@property (nonatomic,readonly) _SFBrowserConfiguration * configuration; 
@property (nonatomic,copy) NSNumber * doNotTrackEnabledPreference;                                                               //@synthesize doNotTrackEnabledPreference=_doNotTrackEnabledPreference - In the implementation block
@property (nonatomic,readonly) NavigationBar * navigationBar;                                                                    //@synthesize navigationBar=_navigationBar - In the implementation block
@property (getter=isShowingTabView,nonatomic,readonly) char showingTabView; 
@property (assign,nonatomic) int favoritesState;                                                                                 //@synthesize favoritesState=_favoritesState - In the implementation block
@property (getter=isShowingFavorites,nonatomic,readonly) char showingFavorites; 
@property (getter=isFavoritesFieldFocused,nonatomic,readonly) char favoritesFieldFocused; 
@property (nonatomic,readonly) int _bookmarksPresentationStyle; 
@property (getter=isShowingSidebar,nonatomic,readonly) char showingSidebar;                                                      //@synthesize showingSidebar=_showingSidebar - In the implementation block
@property (nonatomic,readonly) WKProcessPool * processPool; 
@property (nonatomic,readonly) WKPreferences * wkPreferences;                                                                    //@synthesize wkPreferences=_wkPreferences - In the implementation block
@property (nonatomic,readonly) DownloadDispatcher * downloadDispatcher;                                                          //@synthesize downloadDispatcher=_downloadDispatcher - In the implementation block
@property (assign,nonatomic) char canFocusNavigationBarURL;                                                                      //@synthesize canFocusNavigationBarURL=_canFocusNavigationBarURL - In the implementation block
@property (nonatomic,retain) SKStoreProductViewController * presentedStoreProductViewController;                                 //@synthesize presentedStoreProductViewController=_presentedStoreProductViewController - In the implementation block
@property (nonatomic,retain) UITextRange * textRangeToRestoreAfterParsecCardDismissal;                                           //@synthesize textRangeToRestoreAfterParsecCardDismissal=_textRangeToRestoreAfterParsecCardDismissal - In the implementation block
@property (nonatomic,readonly) BrowserContainerViewController * containerViewController; 
@property (assign,nonatomic) char inNewWindowHinting;                                                                            //@synthesize inNewWindowHinting=_inNewWindowHinting - In the implementation block
@property (nonatomic,readonly) UIEdgeInsets barInsets; 
-(BrowserToolbar *)bottomToolbar;
-(CGRect)_navigationBarFrame;
-(char)actionPanelAddTabDocumentToReadingList:(id)arg1 ;
-(void)actionPanel:(id)arg1 prepareForMailActivityWithMailController:(id)arg2 ;
-(void)didReadDefaults;
-(void)willSuspend;
-(void)scrollTabOverviewToTop;
-(TabController *)tabController;
-(id)loadURLInNewTab:(id)arg1 inBackground:(char)arg2 animated:(char)arg3 fromExternalApplication:(char)arg4 ;
-(char)isShowingCompletionDetail;
-(void)dismissCompletionDetail;
-(id)handleExternalURL:(id)arg1 ;
-(id)loadURLFromExternalApplicationInActiveTab:(id)arg1 ;
-(void)updateTabDocument:(id)arg1 forExternalURL:(id)arg2 withOptions:(id)arg3 ;
-(void)modifierFlagsChangedWithEvent:(id)arg1 ;
-(void)updateSearchEngine;
-(void)updateJavaScriptPreferences;
-(void)fraudWarningsToggled;
-(void)updateApplePayPreferences;
-(void)invalidateSourceApplication;
-(void)updateInternalPreferences;
-(void)updateDoNotTrackPreferences;
-(void)setUpWithURL:(id)arg1 launchOptions:(id)arg2 ;
-(void)prepareToNavigateInTabDocument:(id)arg1 ;
-(void)safariWindow:(id)arg1 statusBarChangedFromHeight:(float)arg2 toHeight:(float)arg3 ;
-(BrowserWindowController *)browserWindowController;
-(void)toggleAlwaysShowBookmarksBarMessageReceived;
-(void)updateSpeculativeLoadingPreferences;
-(void)updateUsesTabBar;
-(void)setCookiePolicyMessageReceived;
-(void)carrierBundledChanged;
-(void)clearAutoFillMessageReceived;
-(void)autoFillStateChangedMessageReceived;
-(void)clearHistoryMessageReceived;
-(void)updatePrivateBrowsingAvailability;
-(char)prepareTabExposeTest;
-(void)setFavoritesFieldFocused:(char)arg1 animated:(char)arg2 ;
-(void)cancelFavorites;
-(id)loadURLInNewTab:(id)arg1 inBackground:(char)arg2 ;
-(void)closeTabDocument:(id)arg1 animated:(char)arg2 ;
-(char)isPresentingModalBookmarksController;
-(void)setPresentingModalBookmarksController:(char)arg1 animated:(char)arg2 ;
-(void)toggleBookmarksFromButtonBar;
-(BookmarksNavigationController *)bookmarksNavigationController;
-(void)showBookmarksPanelWithNonAnimatedTransition;
-(void)setFavoritesState:(int)arg1 ;
-(void)backForwardTableViewController:(id)arg1 didSelectItem:(id)arg2 ;
-(char)isShowingTabView;
-(UIEdgeInsets)barInsets;
-(void)dismissTransientUIAnimated:(char)arg1 preserveFavoritesState:(char)arg2 ;
-(void)rootViewControllerViewWillTransitionToSize:(CGSize)arg1 ;
-(void)rootViewControllerViewTransitionFromSize:(CGSize)arg1 includingSidebar:(char)arg2 animated:(char)arg3 ;
-(void)rootViewControllerViewDidTransitionFromSize:(CGSize)arg1 animated:(char)arg2 ;
-(void)setInNewWindowHinting:(char)arg1 ;
-(void)bookmarksBarView:(id)arg1 didSelectNavigationDestination:(id)arg2 ;
-(void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidAppear:(id)arg2 ;
-(void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidDisappear:(id)arg2 ;
-(void)bookmarksBarView:(id)arg1 bookmarksNavigationController:(id)arg2 showLockedBookmarksDatabaseAlertForBookmarkAddition:(char)arg3 ;
-(void)bookmarksNavigationController:(id)arg1 didSelectNavigationDestination:(id)arg2 ;
-(void)bookmarksNavigationControllerReloadDidFail:(id)arg1 ;
-(void)bookmarksNavigationControllerDidPressDoneButton:(id)arg1 ;
-(void)bookmarksNavigationControllerDidTapOutsideFavorites:(id)arg1 ;
-(id)bookmarksNavigationControllerCurrentWebFeedURL:(id)arg1 ;
-(void)bookmarksNavigationControllerSubscribeToCurrentWebFeed:(id)arg1 ;
-(id)bookmarksNavigationControllerCurrentContinuousReadingItem:(id)arg1 ;
-(void)bookmarksNavigationController:(id)arg1 updateReadingListUnreadFilterShowingAllBookmarks:(char)arg2 ;
-(int)bookmarksNavigationControllerFavoritesGridViewLayoutType:(id)arg1 ;
-(void)bookmarksNavigationController:(id)arg1 editFavoritesGridViewBookmark:(id)arg2 ;
-(void)bookmarksNavigationControllerViewDidAppear:(id)arg1 ;
-(void)bookmarksNavigationControllerViewDidDisappear:(id)arg1 ;
-(void)bookmarksNavigationController:(id)arg1 showLockedBookmarksDatabaseAlertForBookmarkAddition:(char)arg2 ;
-(id)bookmarksNavigationController:(id)arg1 previewViewControllerForBookmark:(id)arg2 ;
-(void)bookmarksNavigationController:(id)arg1 commitPreviewedViewController:(id)arg2 ;
-(SidebarInteractionReporter *)sidebarInteractionReporter;
-(void)showLockedBookmarksDatabaseAlertForBookmarkAdditionAfterDelay;
-(void)_presentModalViewController:(id)arg1 fromButtonIdentifier:(int)arg2 completion:(/*^block*/id)arg3 ;
-(char)addReadingListBookmarkForCurrentTabUpdatingController:(id)arg1 ;
-(void)showAddToSharedLinksConfirmationForTabDocument:(id)arg1 buttonIdentifier:(int)arg2 ;
-(char)showDemoModeFeatureDisabledAlert;
-(id)linkPreviewViewControllerForURL:(id)arg1 ;
-(void)commitLinkPreviewViewController:(id)arg1 ;
-(void)didDismissLinkPreviewViewController:(id)arg1 committing:(char)arg2 ;
-(void)updateViewsAfterStatusBarChange;
-(void)updateScrollToTopView;
-(CGRect)frameForRootView;
-(void)updateContentContainerViewFrame;
-(void)updateButtonBarFrame;
-(void)updateNavigationBarFrame;
-(void)updateExposedScrollViewRect;
-(void)updateSidebarFrame;
-(void)updateAppBannerFrame;
-(void)updateQuickLookBannerViewFrame;
-(CGRect)frameForCatalogView;
-(char)isShowingFavorites;
-(void)scrollBrowserViewToTop;
-(id)_topScrollView;
-(void)showBars;
-(void)_resignWebViewFirstResponder;
-(void)updateDynamicBarGeometry;
-(void)_resizeToContentFrame;
-(void)_updateCatalogViewControllerObscuredInsets;
-(void)_updateTabBarAndBookmarksBarStyles;
-(char)interfaceFillsScreen;
-(float)_navigationBarDesiredHeight;
-(float)_navigationBarAuxiliaryBarsHeight;
-(CGRect)_sidebarFrameWhenPresented:(char)arg1 ;
-(void)_updateSidebarWallpaper;
-(char)_canSuppressNavigationBarBlur;
-(void)_layoutCrashBanner;
-(char)_isInContinuousMode;
-(void)_updateCurrentPageBannerView;
-(CGRect)contentContainerViewFrameForBrowserSize:(CGSize)arg1 ;
-(float)contentContainerXOffsetForSidebar;
-(void)updateScrollIndicatorInsets;
-(void)updateWebViewSizeAttributes;
-(void)updateScrollViewContentInset;
-(void)setShowingCrashBanner:(char)arg1 animated:(char)arg2 ;
-(void)updateContinuousPreviewViewFrame;
-(char)_shouldHideBottomToolbar;
-(void)updatePrivateBrowsingGradient;
-(float)_verticalOffsetForAppBanner;
-(float)_appBannerOverlapHeight;
-(float)buttonBarHeight;
-(CGRect)contentFrameInView:(id)arg1 tabDocument:(id)arg2 ;
-(float)_navigationBarSquishedHeight;
-(CGRect)contentFrameInPageView;
-(float)additionalContentHeightForBanners;
-(CGRect)contentFrameInScrollView;
-(int)_bookmarksPresentationStyle;
-(char)_shouldUseTabOverview;
-(char)isShowingSidebar;
-(char)shouldShowSidebarInLandscape;
-(char)_isVerticallyConstrained;
-(char)_shouldUseNarrowLayout;
-(char)inNewWindowHinting;
-(CGRect)quickLookFrameInScrollView;
-(char)_shouldShowSidebarForSizeChange;
-(void)_setShowingSidebar:(char)arg1 ;
-(char)_shouldHideBarsForSizeChange;
-(void)hideBarsForRotation;
-(CGRect)_sidebarContentDimmingViewFrame;
-(char)_shouldShowSidebarContentDimmingView;
-(void)updateTopToolbarEnabled;
-(void)updateTabOverviewFrame;
-(char)_shouldShowBookmarksBarForViewSize:(CGSize)arg1 ;
-(void)_setShowBookmarksBar:(char)arg1 ;
-(void)_initializeSidebarContentDimmingViewIfNecessary;
-(void)_animateRootViewControllerViewTransitionFromSize:(CGSize)arg1 includingSidebar:(char)arg2 ;
-(char)_canAnimateSizeTransitionOfRootViewController;
-(void)updateTabExposePopoverActions;
-(char)_shouldHideCatalogViewControllerForSizeChange;
-(char)_favoritesAreSticky;
-(int)favoritesState;
-(char)_shouldShowTabBar;
-(void)_setShowingTabBar:(char)arg1 animated:(char)arg2 ;
-(char)fullScreenInPortrait;
-(void)updateButtonBarContentsAnimated:(char)arg1 ;
-(void)_tabViewPinch:(id)arg1 ;
-(void)updateTabViewPinchRecognizer;
-(void)updateShowingTabBarAnimated:(char)arg1 ;
-(char)isPrivateBrowsingAvailable;
-(void)togglePrivateBrowsingEnabled;
-(void)_updateDisableBarHiding;
-(float)_horizontalMarginForCatalogViewInPopover;
-(UIEdgeInsets)_obscuredScrollViewInsetsConsideringTargetState:(char)arg1 ;
-(float)_adjustedTopObscuredInsetForBanners:(float)arg1 ;
-(char)isFavoritesFieldFocused;
-(void)setFavoritesState:(int)arg1 animated:(char)arg2 ;
-(int)_notFocusedStickyState;
-(void)cancelFavoritesAnimated:(char)arg1 ;
-(void)updateFavoritesForNewDocument;
-(char)hasAnyFavorites;
-(void)setFavoritesAreSticky:(char)arg1 animated:(char)arg2 ;
-(void)_showOrHideSidebarInLandscapeIfNecessary;
-(void)_updateButtonBarContentsAnimated:(char)arg1 animateFrameIfAnimated:(char)arg2 delay:(double)arg3 ;
-(id)_tiltedTabToolbar;
-(char)_favoritesFieldShouldBeExpanded;
-(void)clearSpeculativeLoadDocument;
-(char)_favoritesAreShowingInPopover;
-(id)createCatalogViewController;
-(void)_updateFavoritesGridForSidebarVisibility;
-(void)_setProgressSuppressingDocument:(id)arg1 ;
-(void)_updateScrollViewScrollsToTop;
-(void)_clearPreviousContinuousItemDocument;
-(void)_clearNextContinuousItemDocument;
-(void)clearContinuousItemDocuments;
-(void)doSearch:(id)arg1 ;
-(void)goToAddress:(id)arg1 ;
-(BrowserToolbar *)activeToolbar;
-(float)_popoverPresentationVerticalOffset;
-(void)updateSpeculativeLoadURL:(id)arg1 defersLoading:(char)arg2 ;
-(void)_completionItem:(id)arg1 wasAcceptedForString:(id)arg2 ;
-(void)_initSearchEngineIfNeeded;
-(void)_pasteAndNavigate:(id)arg1 ;
-(char)_shouldShowBackgroundViewForTabDocument:(id)arg1 ;
-(id)_readerBackgroundColor;
-(id)_viewToInsertNavigationBarAbove;
-(void)setWebViewFromTabDocument:(id)arg1 ;
-(char)_shouldShowBookmarksBar;
-(void)_didChangePowerState;
-(void)_passwordGenerationAssistanceBecameAvailable:(id)arg1 ;
-(void)writePrivateBrowsingEnabled:(char)arg1 ;
-(void)_updateConfiguration;
-(void)setDoNotTrackEnabledPreference:(NSNumber *)arg1 ;
-(void)_updateExperimentalFeatures;
-(BrowserToolbar *)topToolbar;
-(RecentlyClosedTabViewController *)recentlyClosedTabController;
-(char)_isScrolledToThresholdForContinuousPrefetching;
-(void)prefetchNextContinuousItemIfNeeded;
-(void)didCompleteScrolling;
-(void)setShowingCrashBanner:(char)arg1 ;
-(void)dismissTransientUIAnimated:(char)arg1 ;
-(void)_commitToSpeculativeLoad;
-(char)_commitSpeculativeLoadForURL:(id)arg1 ;
-(void)_updateProgressIndicator;
-(CGPoint)_originForOverlayAccessories;
-(CGRect)_quickLookBannerFrame;
-(void)showQuickLookBannerView;
-(void)removeQuickLookBannerView;
-(void)toggleQuickLookBannerView;
-(void)_updateCurrentContinuousReadingItem;
-(void)updateTitleForTabDocument:(id)arg1 ;
-(void)updateBannersForTabDocument:(id)arg1 ;
-(void)_updateProgressForTabDocument:(id)arg1 ;
-(void)_clearSpeculativeLoadingStartTimer;
-(void)_cancelSpeculativeLoadForDocument:(id)arg1 ;
-(void)cancelSpeculativeLoad;
-(void)_closeSpeculativelyLoadedDocument:(id)arg1 ;
-(void)_startSpeculativeLoadingNow;
-(float)_delayForStartingSpeculativeLoad;
-(void)updateInsetsForBackgroundWebView:(id)arg1 ;
-(void)_commitToSpeculativeLoadForDocument:(id)arg1 ;
-(void)_updateStorageBlockingPreference;
-(void)_scrollToTopInView:(id)arg1 ;
-(void)updateQuickLookFrameViewIfNecessary;
-(void)hideReaderForTabDocument:(id)arg1 animated:(char)arg2 deactivationMode:(unsigned)arg3 ;
-(void)showReaderForTabDocument:(id)arg1 animated:(char)arg2 ;
-(void)_setReaderVisible:(char)arg1 forTabDocument:(id)arg2 deactivationMode:(unsigned)arg3 animated:(char)arg4 ;
-(float)verticalScrollOffsetForReaderViewInTabDocument:(id)arg1 ;
-(void)document:(id)arg1 willMakeReaderVisible:(char)arg2 ;
-(void)_readerVisibilityDidChange;
-(void)_readerLayoutTimerFired:(id)arg1 ;
-(void)_animateReaderVisibility:(char)arg1 ;
-(TabDocument *)nextContinuousItemDocument;
-(TabDocument *)previousContinuousItemDocument;
-(void)_setContinuousReadingContentViewFromTabDocument:(id)arg1 useReaderView:(char)arg2 ;
-(id)tabViewBackdropSettingsForNavigationBar:(id)arg1 ;
-(CGPoint)_snapshotOriginForTabDocument:(id)arg1 ;
-(id)_backgroundColorForTabDocument:(id)arg1 ;
-(id)_renderView:(id)arg1 afterScreenUpdates:(char)arg2 ;
-(id)_takeSnapshotWithSize:(CGSize)arg1 backgroundColor:(id)arg2 topBackdropHeight:(float)arg3 backdropSettings:(id)arg4 options:(unsigned)arg5 drawing:(/*^block*/id)arg6 ;
-(void)updatePreferredStatusBarStyleAnimated:(char)arg1 ;
-(void)_presentPendingViewControllerForActiveTab;
-(void)_cancelContentScrollGestures;
-(void)_installContentDimmingViewIfNeeded;
-(void)removeAppBannerFromTabDocument:(id)arg1 animated:(char)arg2 ;
-(char)isContinuousReadingDocument:(id)arg1 ;
-(UIEdgeInsets)scrollViewContentInsetAdjustments;
-(void)_setContentInsetAdjustments:(UIEdgeInsets)arg1 forScrollView:(id)arg2 ;
-(void)_focusAddressFieldKeyPressed;
-(void)_toggleBookmarksKeyPressed;
-(void)_toggleTabViewKeyPressed;
-(void)_addToReadingListKeyPressed;
-(void)_printKeyPressed;
-(void)_newTabKeyPressed;
-(void)_closeActiveTabKeyPressed;
-(void)_openSplitViewKeyPressed;
-(void)_focusOtherSideKeyPressed;
-(void)_previousTabKeyPressed:(id)arg1 ;
-(void)_nextTabKeyPressed:(id)arg1 ;
-(void)setShowingReader:(char)arg1 animated:(char)arg2 ;
-(void)animateSafariIconLinkFromPoint:(CGPoint)arg1 inView:(id)arg2 ;
-(void)presentPrintControllerForTabDocument:(id)arg1 frame:(id)arg2 initiatedByWebContent:(char)arg3 ;
-(void)_switchTabsByIndex:(int)arg1 withKeyCommand:(id)arg2 ;
-(void)_updateBottomBarOffsetWithKeyboardNotification:(id)arg1 ;
-(void)_presentReaderAppearanceControllerForTabDocument:(id)arg1 ;
-(char)isShowingCrashBanner;
-(CGRect)_contentFrameInPageViewWithHiddenBars;
-(id)_topContinuousReadingBanner;
-(void)_replaceActiveDocument:(id)arg1 withSpeculativeDocument:(id)arg2 ;
-(void)showPassBookControllerForPass:(id)arg1 ;
-(char)showICSControllerForPath:(id)arg1 sourceURL:(id)arg2 ;
-(void)dismissStoreProductViewController;
-(void)_initializeAntiPhishingService;
-(void)catalogViewController:(id)arg1 didSelectAddress:(id)arg2 ;
-(void)catalogViewController:(id)arg1 loadRequest:(id)arg2 ;
-(void)catalogViewController:(id)arg1 didSelectSearch:(id)arg2 ;
-(void)catalogViewController:(id)arg1 mightSelectCompletionItem:(id)arg2 forString:(id)arg3 ;
-(void)catalogViewController:(id)arg1 completionItem:(id)arg2 wasAcceptedForString:(id)arg3 ;
-(void)catalogViewControllerDidBeginEditing:(id)arg1 ;
-(void)catalogViewControllerDidEndEditing:(id)arg1 ;
-(void)catalogViewController:(id)arg1 focusNextKeyView:(char)arg2 ;
-(void)catalogViewControllerDidSelectFindOnPage:(id)arg1 ;
-(void)catalogViewControllerPopoverWillDismiss:(id)arg1 dismissalReason:(int)arg2 ;
-(CGRect)catalogViewControllerPopoverPresentationRect:(id)arg1 ;
-(void)catalogViewController:(id)arg1 presentViewControllerWithinPopover:(id)arg2 ;
-(char)catalogViewControllerShouldRequestSuggestions:(id)arg1 ;
-(float)catalogViewControllerPopoverWidth:(id)arg1 ;
-(char)catalogViewControllerShouldSuppressPopover:(id)arg1 ;
-(void)catalogViewController:(id)arg1 didPasteText:(id)arg2 ;
-(char)sidebarInteractionReporterShouldReportEventsForCurrentApplicationState:(id)arg1 ;
-(void)sidebarDimmingViewDismiss:(id)arg1 ;
-(void)completionDetailViewControllerDidDismiss:(id)arg1 ;
-(char)isAnyPageLoaded;
-(char)shouldNotTrackUser;
-(void)willShowViewAboveWebContent;
-(float)_navigationBarOverlapHeight;
-(CGRect)readerContentFrameInScrollView;
-(char)canHideBars;
-(void)willTransitionToHorizontalSizeClass:(int)arg1 ;
-(void)didTransitionToHorizontalSizeClass:(int)arg1 ;
-(void)_updateScrollOffsetForReplacementWebView:(id)arg1 ;
-(UIEdgeInsets)finalObscuredInsetsForScrollView:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(void)prepareForTabDocumentWebViewFullscreenMayReturnToInline:(id)arg1 ;
-(void)setPresentedStoreProductViewController:(SKStoreProductViewController *)arg1 ;
-(void)catalogViewController:(id)arg1 dismissCompletionDetail:(id)arg2 ;
-(char)wantsTransparentBackground;
-(char)bookmarksButtonIsInNavigationBar;
-(void)setProgressEnabled:(char)arg1 ;
-(void)setInitialZoomScaleForPPT:(float)arg1 ;
-(void)setResourcesLoading:(char)arg1 ;
-(UIView *)legacyUIKitPresentationSourceView;
-(void)setScrollViewZoomEnabled:(char)arg1 ;
-(float)_pdfPageNumberLabelYOffset;
-(void)readerContentIsReadyForDisplay;
-(void)setReaderShouldBeShownIfPossible:(char)arg1 ;
-(void)_animateLinkImage:(CGImageRef)arg1 flipped:(char)arg2 fromRect:(CGRect)arg3 intoButton:(int)arg4 inView:(id)arg5 afterLinkImageDisappears:(/*^block*/id)arg6 ;
-(void)snapshotTabDocument:(id)arg1 size:(CGSize)arg2 topBackdropHeight:(float)arg3 options:(unsigned)arg4 completion:(/*^block*/id)arg5 ;
-(id)blankDocumentSnapshotWithTopBackdropHeight:(float)arg1 options:(unsigned)arg2 ;
-(void)willPresentTiltedTabView;
-(void)willDismissTiltedTabView;
-(void)didDismissTiltedTabView;
-(void)willPresentTabOverview;
-(void)didDismissTabOverview;
-(void)didBeginDismissingTabOverview;
-(void)didCancelDismissingTabOverview;
-(id)borrowContentViewForTab:(id)arg1 withTopBackdropView:(id*)arg2 ofHeight:(float)arg3 ;
-(void)reinsertBorrowedContentViewForTab:(id)arg1 ;
-(void)_navigationGestureWillEndWithNavigationToBackForwardListItem:(id)arg1 ;
-(void)_navigationGestureDidEndWithNavigation:(char)arg1 ;
-(void)clearDocumentForContinuousReading:(id)arg1 ;
-(ContinuousReadingController *)continuousReadingController;
-(void)didChangeContinuousReadingItemInActiveDocument;
-(void)_updateSidebarStickinessAfterUserAction;
-(void)updateShowingSidebarForLoad;
-(void)tabDocumentDidChangeWebFeedURL:(id)arg1 ;
-(id)initWithUUID:(id)arg1 browserWindowController:(id)arg2 savedState:(id)arg3 ;
-(char)shouldDeferHistoryUpdatesForWKWebView:(id)arg1 ;
-(float)_verticalOffsetForContinuousReadingBanner;
-(void)_setShowingAppBanner:(id)arg1 isShowing:(char)arg2 ;
-(void)willCloseBrowserWindow;
-(void)initializeAntiPhishingServiceIfNeeded;
-(char)isReaderViewStale;
-(void)setReaderViewStale:(char)arg1 ;
-(char)readerShouldBeShownIfPossible;
-(void)setPreviousContinuousItemDocument:(TabDocument *)arg1 ;
-(void)setNextContinuousItemDocument:(TabDocument *)arg1 ;
-(TabDocument *)cachedDocumentOnContinuousTransition;
-(void)setCachedDocumentOnContinuousTransition:(TabDocument *)arg1 ;
-(double)lastInteractionTime;
-(void)setLastInteractionTime:(double)arg1 ;
-(char)transitioningFromBookmarksPanelToSidebarForSizeChange;
-(void)setTransitioningFromBookmarksPanelToSidebarForSizeChange:(char)arg1 ;
-(char)isShowingTabBar;
-(void)setShowingTabBar:(char)arg1 ;
-(_SFBrowserSavedState *)savedState;
-(WKPreferences *)wkPreferences;
-(DownloadDispatcher *)downloadDispatcher;
-(char)canFocusNavigationBarURL;
-(void)setCanFocusNavigationBarURL:(char)arg1 ;
-(SKStoreProductViewController *)presentedStoreProductViewController;
-(UITextRange *)textRangeToRestoreAfterParsecCardDismissal;
-(void)setTextRangeToRestoreAfterParsecCardDismissal:(UITextRange *)arg1 ;
-(void)hideAlertForTabDocument:(id)arg1 ;
-(void)_presentModalViewController:(id)arg1 fromButtonIdentifier:(int)arg2 animated:(char)arg3 completion:(/*^block*/id)arg4 ;
-(char)_shouldPresentViewControllerUsingAdaptivePopover:(id)arg1 ;
-(void)_createInitialLaunchImageForWebClip:(id)arg1 ;
-(void)showLockedBookmarksDatabaseAlertInViewController:(id)arg1 forBookmarkAddition:(char)arg2 ;
-(void)_delayedShowLockedBookmarksDatabaseAlert;
-(void)_delayedShowLockedBookmarksDatabaseAlertForBookmarkAddition;
-(void)_prepareContentForMailController:(id)arg1 ;
-(void)goToBookmark:(id)arg1 ;
-(void)goToURL:(id)arg1 ;
-(void)_goToAutomaticReadingListItem:(id)arg1 ;
-(void)goToCloudTab:(id)arg1 ;
-(void)goToNavigationDestination:(id)arg1 ;
-(void)showLockedBookmarksDatabaseAlertAfterDelay;
-(char)createAndAddToHomeScreenBundleForWebClip:(id)arg1 ;
-(void)backFromButtonBar;
-(void)forwardFromButtonBar;
-(void)showActionPanelFromButtonBar;
-(void)presentBookmarksLongPressMenuFromButtonBar;
-(void)showTabsFromButtonBar;
-(void)presentBackPopoverFromButtonBar;
-(void)presentForwardPopoverFromButtonBar;
-(void)presentAddTabPopoverFromButtonBar;
-(void)presentTabExposePopoverFromButtonBar;
-(void)addTabFromButtonBar;
-(CGPoint)targetPointForButtonBarLinkImageAnimationIntoLayer:(id)arg1 proposedTargetPoint:(CGPoint)arg2 ;
-(void)composeEmailWithMailToURL:(id)arg1 ;
-(void)presentNextAlertControllerForTabDocument:(id)arg1 ;
-(void)updatePopoverPositionAfterTransitionFromHorizontalSizeClass:(int)arg1 toHorizontalSizeClass:(int)arg2 ;
-(void)addToSharedLinksActivityShowConfirmation:(id)arg1 ;
-(char)addBookmarkActivityCanSaveBookmarkChanges:(id)arg1 ;
-(void)addBookmarkActivityFailedToAcquireBookmarkLock:(id)arg1 ;
-(char)_canUpdateInterfaceWithTabDocument:(id)arg1 ;
-(void)didStartLoadingResource;
-(void)didStopLoadingResource;
-(char)_showingAModalAlertWillHang;
-(void)_invalidatePreviewDocumentCloseTimer;
-(void)_closePreviewDocumentTimerFired:(id)arg1 ;
-(void)switchFromTabDocument:(id)arg1 toTabDocument:(id)arg2 ;
-(TabMergingController *)currentTabMergingController;
-(TabMergingController *)privateTabMergingController;
-(TabMergingController *)normalTabMergingController;
-(id)loadURLInNewTab:(id)arg1 inBackground:(char)arg2 animated:(char)arg3 ;
-(id)loadURLInNewTab:(id)arg1 title:(id)arg2 UUID:(id)arg3 inBackground:(char)arg4 animated:(char)arg5 fromExternalApplication:(char)arg6 restoringCloudTab:(char)arg7 ;
-(id)blankTabDocumentToReuse;
-(void)runTabExposeTest;
-(void)_runTabExposeTest;
-(void)tabDocumentDidUpdateShowingContinuous:(id)arg1 ;
-(void)tabDocumentDidUpdatePersistentState:(id)arg1 ;
-(void)tabDocumentDidStartLoading:(id)arg1 ;
-(void)tabDocumentWillStartLoadFromUserClick:(id)arg1 ;
-(char)tabDocumentCanDownloadFile:(id)arg1 ;
-(char)tabDocumentCanRedirectToExternalApplication:(id)arg1 ;
-(void)tabDocumentDidCancelRedirectToExternalApplication:(id)arg1 ;
-(void)tabDocument:(id)arg1 didFinishLoadingWithError:(char)arg2 ;
-(void)tabDocumentDidChangeLocationWithinPageForMainFrame:(id)arg1 ;
-(void)tabDocumentDidUpdateTitle:(id)arg1 ;
-(void)tabDocumentDidUpdateBackForward:(id)arg1 ;
-(void)tabDocument:(id)arg1 progressChanged:(float)arg2 ;
-(void)tabDocumentStartedLoadingResource:(id)arg1 ;
-(void)tabDocumentFluidProgressRocketAnimationDidComplete:(id)arg1 ;
-(void)tabDocumentStoppedLoadingResource:(id)arg1 ;
-(char)tabDocument:(id)arg1 shouldHandleAuthenticationChallenge:(id)arg2 ;
-(char)tabDocumentShouldHandleCertificateError:(id)arg1 ;
-(char)tabDocumentCanShowJavaScriptAlertConfirmOrTextInput:(id)arg1 ;
-(void)showAlertForTabDocument:(id)arg1 ;
-(void)tabDocument:(id)arg1 didDismissDialog:(id)arg2 ;
-(void)tabDocument:(id)arg1 didDetectReaderAvailability:(char)arg2 ;
-(void)tabDocument:(id)arg1 didCreateNewTabDocument:(id)arg2 ;
-(char)tabDocumentShouldBlockPopUp:(id)arg1 ;
-(void)tabDocument:(id)arg1 didCreatePreviewDocument:(id)arg2 ;
-(void)tabDocumentCommitPreviewedDocument:(id)arg1 ;
-(void)tabDocumentCommitPreviewedDocumentAsNewTab:(id)arg1 inBackground:(char)arg2 ;
-(void)tabDocumentDidDimissPreviewedDocument:(id)arg1 ;
-(char)tabDocumentCanDisplayModalUI:(id)arg1 ;
-(void)tabControllerDocumentCountDidChange:(id)arg1 ;
-(void)tabController:(id)arg1 didCloseTabDocument:(id)arg2 temporarily:(char)arg3 ;
-(void)tabController:(id)arg1 didSwitchFromTabDocument:(id)arg2 toTabDocument:(id)arg3 ;
-(char)tabDocumentSupportsOpenInNewWindow:(id)arg1 ;
-(char)tabDocumentCanBecomeCurrentUserActivity:(id)arg1 ;
-(char)tabDocumentDidBecomeActiveDueToWindowArrangementChanges:(id)arg1 ;
-(id)blankTabTitleForTabDocument:(id)arg1 ;
-(char)isRunningTabExposeTest;
-(void)finishedTabExposeTest;
-(void)composeEmailWithMailToURL:(id)arg1 forTabDocument:(id)arg2 ;
-(void)tabDocumentDidCompleteCheckForAppBanner:(id)arg1 ;
-(void)setAppBannerPinnedToTop:(char)arg1 forTabDocument:(id)arg2 ;
-(void)tabDocumentDidBeginNavigationGesture:(id)arg1 ;
-(void)tabDocumentWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)tabDocumentDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2 ;
-(void)tabDocument:(id)arg1 presentViewControllerAnimated:(id)arg2 ;
-(void)tabDocument:(id)arg1 dismissViewControllerAnimated:(id)arg2 ;
-(int)tabDocumentOrderIndex:(id)arg1 ;
-(id)tabDocumentSavedSessionStateData:(id)arg1 ;
-(char)tabDocumentCanCloseWindow:(id)arg1 ;
-(id)_cachedDocumentForContinuousReadingItem:(id)arg1 ;
-(void)_prepareTabDocumentForNextContinuousItemIfNeeded;
-(void)_startLoadDocument:(id)arg1 continuousReadingItem:(id)arg2 ;
-(id)_tabDocumentForNextContinuousItem;
-(void)loadNextContinuousDocumentIfNeeded;
-(void)_loadPreviousContinuousDocumentIfNeeded;
-(void)_preparePreviousContinuousDocumentIfNeeded;
-(CGRect)_frameForCurrentPageBannerView;
-(void)setCurrentContinuousReadingItem:(id)arg1 ;
-(void)_setContinuousReadingPreviewView:(id)arg1 ;
-(void)_updateCurrentPageBannerViewBeforeContinuousTransition;
-(void)_commitToTabDocumentForNextContinuousItem;
-(void)_commitToTabDocumentForPreviousContinuousItem;
-(char)_continuousScrollViewShouldScroll;
-(void)continuousReadingViewController:(id)arg1 scrollViewDidScroll:(id)arg2 ;
-(void)continuousReadingViewControllerWillCommitToLoadNextItem:(id)arg1 ;
-(void)continuousReadingViewControllerCommitToLoadPreviousItem:(id)arg1 ;
-(void)continuousReadingViewController:(id)arg1 didCommitToLoadItem:(id)arg2 ;
-(float)continuousReadingViewControllerNextWebViewLandingOffset:(id)arg1 includeBottomBar:(char)arg2 ;
-(void)setPrivateBrowsingEnabled:(char)arg1 ;
-(id)init;
-(CGSize)_contentSize;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(char)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(void)scrollViewDidEndScrollingAnimation:(id)arg1 ;
-(void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2 ;
-(void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(float)arg3 ;
-(char)scrollViewShouldScrollToTop:(id)arg1 ;
-(void)scrollViewDidScrollToTop:(id)arg1 ;
-(NavigationBar *)navigationBar;
-(id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2 ;
-(char)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(char)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2 ;
-(CGPoint)contentOffset;
-(BrowserRootViewController *)rootViewController;
-(id)nextResponder;
-(char)canPerformAction:(SEL)arg1 withSender:(id)arg2 ;
-(void)didReceiveMemoryWarning;
-(char)becomeFirstResponder;
-(void)suspend;
-(id)keyCommands;
-(char)canBecomeFirstResponder;
-(NSUUID *)UUID;
-(void)setContentOffset:(CGPoint)arg1 ;
-(void)setProgress:(float)arg1 ;
-(float)zoomScale;
-(void)setZoomScale:(float)arg1 ;
-(void)_keyboardWillShow:(id)arg1 ;
-(void)_keyboardWillHide:(id)arg1 ;
-(void)_didChangeToFirstResponder:(id)arg1 ;
-(_SFWebView *)webView;
-(void)resume;
-(void)setWebView:(_SFWebView *)arg1 ;
-(void)_initSubviews;
-(void)updateButtons;
-(_SFBrowserConfiguration *)configuration;
-(void)goBack;
-(void)goForward;
-(void)_keyboardDidShow:(id)arg1 ;
-(void)_keyboardWillChangeFrame:(id)arg1 ;
-(char)documentIsEmpty;
-(void)mailComposeController:(id)arg1 didFinishWithResult:(int)arg2 error:(id)arg3 ;
-(void)_navigationGestureDidBegin;
-(void)updateInterface;
-(char)isShowingReader;
-(NSNumber *)doNotTrackEnabledPreference;
-(void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1 ;
-(void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1 ;
-(char)dynamicBarAnimator:(id)arg1 canHideBarsByDraggingWithOffset:(float)arg2 ;
-(float)bottomBarOffset;
-(void)productViewControllerDidFinish:(id)arg1 ;
-(BrowserContainerViewController *)containerViewController;
-(WKProcessPool *)processPool;
-(void)addBookmarkNavController:(id)arg1 didFinishWithResult:(char)arg2 ;
-(char)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1 ;
-(void)navigationBarReloadButtonWasTapped:(id)arg1 ;
-(void)navigationBarReloadButtonWasLongPressed:(id)arg1 ;
-(void)navigationBarStopLoadingButtonWasTapped:(id)arg1 ;
-(void)navigationBarReaderAppearanceButtonWasTapped:(id)arg1 ;
-(void)compressedNavigationBarWasTapped:(id)arg1 ;
-(void)navigationBarURLWasTapped:(id)arg1 ;
-(void)navigationBarReaderButtonWasTapped:(id)arg1 ;
-(void)navigationBarCancelButtonWasTapped:(id)arg1 ;
-(void)navigationBarBackdropDidApplySettings:(id)arg1 ;
-(id)navigationBarURLForSharing:(id)arg1 ;
-(void)navigationBar:(id)arg1 didPasteText:(id)arg2 ;
-(void)setUsesNarrowLayout:(char)arg1 ;
-(char)usesNarrowLayout;
-(void)reloadKeyPressed;
-(void)navigateBackKeyPressed;
-(void)navigateForwardKeyPressed;
-(void)findKeyPressed;
-(void)nextFindResultKeyPressed;
-(void)previousFindResultKeyPressed;
-(void)toggleReaderKeyPressed;
-(void)cancelKeyPressed;
-(void)loadURL:(id)arg1 ;
-(void)_bookmarksDidReload:(id)arg1 ;
-(id)downloadBackgroundTaskName;
-(void)fileDownloadDidFinish:(id)arg1 withPath:(id)arg2 withType:(int)arg3 withSourceURL:(id)arg4 ;
-(void)readerAppearanceViewControllerDidChangeFont:(id)arg1 ;
-(void)readerAppearanceViewControllerDidDecreaseTextSize:(id)arg1 ;
-(void)readerAppearanceViewControllerDidIncreaseTextSize:(id)arg1 ;
-(void)readerAppearanceViewControllerDidChangeTheme:(id)arg1 ;
-(void)dynamicBarAnimatorOutputsDidChange:(id)arg1 ;
-(char)isPrivateBrowsingEnabled;
-(void)_showBarsFromBottomBarTap:(id)arg1 ;
-(void)_updateUsesNarrowLayout;
-(char)_canScrollToTopInView:(id)arg1 ;
-(void)_scrollToTopFromScrollToTopView;
-(void)_hideCrashBanner;
-(float)_crashBannerDraggingOffsetForContentOffset:(CGPoint)arg1 ;
-(id)_formDataController;
-(void)_loadRequest:(id)arg1 ;
-(void)_setupBottomToolbar;
@end

