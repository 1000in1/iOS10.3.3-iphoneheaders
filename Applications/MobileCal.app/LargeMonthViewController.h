/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:54 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileCal.app/MobileCal
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileCal/MobileCal-Structs.h>
#import <Fitness/MonthViewController.h>
#import <MobileCal/EKEventGestureControllerUntimedDelegate.h>
#import <libobjc.A.dylib/EKEventViewDelegate.h>
#import <libobjc.A.dylib/EKEventEditViewDelegate.h>
#import <libobjc.A.dylib/EKEventViewDelegatePrivate.h>
#import <MobileCal/LargeMonthWeekViewDataSource.h>
#import <MobileCal/LargeMonthWeekViewDelegate.h>
#import <UIKit/UIPopoverPresentationControllerDelegate.h>
#import <MobileCal/EnqueuablePopoverPresentationManagedNavigationControllerDelegate.h>
#import <MobileCal/DateComponentUnitLinearlyNavigable.h>

@class EKEvent, EKCalendarDate, NSArray, EKEventGestureController, LargeMonthViewOccurrenceView, LargeMonthWeekView, NSString;

@interface LargeMonthViewController : MonthViewController <EKEventGestureControllerUntimedDelegate, EKEventViewDelegate, EKEventEditViewDelegate, EKEventViewDelegatePrivate, LargeMonthWeekViewDataSource, LargeMonthWeekViewDelegate, UIPopoverPresentationControllerDelegate, EnqueuablePopoverPresentationManagedNavigationControllerDelegate, DateComponentUnitLinearlyNavigable> {

	char _currentlyEditingEvent;
	EKEvent* _eventBeingInspected;
	CGRect _scrubbingRect;
	EKCalendarDate* _tappedDay;
	char _isTrackingTouches;
	NSArray* _verticalGridLines;
	EKEventGestureController* _gestureController;
	EKCalendarDate* _initialDragDate;
	char _draggingExistingEvent;
	LargeMonthViewOccurrenceView* _draggingEventView;
	EKEvent* _draggingEvent;
	CGPoint _dragOffset;
	EKCalendarDate* _draggedStartDate;
	EKCalendarDate* _draggedEndDate;
	LargeMonthWeekView* _weekContainingSelectedOccurrence;
	EKCalendarDate* _initialDate;
	EKCalendarDate* _navigationBarDisplayedDate;
	char _isWaitingForBackgroundLoadingOfSelectedEventOccurrenceView;
	char _shouldPresentEventCommentsForSelectedOccurrence;
	char _shouldAnimateScrollToVisibleWeekViewForSelectedOccurrence;
	char _editorDismissedFromDelete;
	char _shouldForceAllowUpdateNavigationBarDateString;
	EKCalendarDate* _activeDateDuringSizeChange;

}

@property (nonatomic,retain) EKCalendarDate * activeDateDuringSizeChange;              //@synthesize activeDateDuringSizeChange=_activeDateDuringSizeChange - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(float)subviewHeightForDate:(id)arg1 orientation:(int)arg2 ;
+(float)_cellHeightForOrientation:(int)arg1 withMultiplier:(float)arg2 ;
+(char)_shouldForwardViewWillTransitionToSize;
-(void)didEndScrolling;
-(void)largeMonthWeekView:(id)arg1 touchesBegan:(id)arg2 withEvent:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 touchesMoved:(id)arg2 withEvent:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 touchesEnded:(id)arg2 withEvent:(id)arg3 ;
-(id)occurrencesForStartDate:(id)arg1 endDate:(id)arg2 waitForLoad:(char)arg3 ;
-(void)largeMonthWeekView:(id)arg1 didTapOccurrence:(id)arg2 onDay:(id)arg3 ;
-(void)largeMonthWeekView:(id)arg1 didDoubleTapOnDay:(id)arg2 ;
-(void)didCompleteBackgroundOccurrenceRenderingForLargeMonthWeekView:(id)arg1 ;
-(void)showDate:(id)arg1 animated:(char)arg2 ;
-(void)showEvent:(id)arg1 animated:(char)arg2 showDetails:(char)arg3 context:(NSDictionary*)arg4 ;
-(void)showEvent:(id)arg1 animated:(char)arg2 showDetails:(char)arg3 showComments:(char)arg4 context:(NSDictionary*)arg5 ;
-(void)updatePalette:(id)arg1 ;
-(int)supportedToggleMode;
-(void)updateNavigationBarDisplayedDateString;
-(char)currentlyEditingEventsWithGestures;
-(char)isWaitingForBackgroundLoadingOfSelectedEventOccurrenceView;
-(void)setIsWaitingForBackgroundLoadingOfSelectedEventOccurrenceView:(char)arg1 ;
-(id)initWithCalendarDate:(id)arg1 model:(id)arg2 ;
-(void)weekNumbersPrefChanged;
-(float)heightForSubviewWithCalendarDate:(id)arg1 ;
-(float)decelerationDistanceThresholdForPreferringMonthBoundary;
-(id)pushedWeekViewControllerWithDate:(id)arg1 animated:(char)arg2 ;
-(void)navigateToNextDateComponentUnitAnimated:(char)arg1 ;
-(void)navigateToPreviousDateComponentUnitAnimated:(char)arg1 ;
-(id)createInitialViewForDate:(id)arg1 ;
-(float)subviewBufferExtensionMultiplier;
-(float)topInsetForSubviewWithCalendarDate:(id)arg1 ;
-(unsigned)maximumCachedReusableViews;
-(id)newTopViewAboveViewWithCalendarDate:(id)arg1 ;
-(id)newBottomViewBelowViewWithCalendarDate:(id)arg1 ;
-(void)_displayedOccurrencesChanged:(id)arg1 ;
-(void)_editorUpdated:(id)arg1 ;
-(void)_closeEventPresentationAnimated:(char)arg1 ;
-(id)_weekViewForEKCalendarDate:(id)arg1 ;
-(void)setActiveDateDuringSizeChange:(EKCalendarDate *)arg1 ;
-(void)_updateDraggingView;
-(EKCalendarDate *)activeDateDuringSizeChange;
-(void)_layoutVerticalLines;
-(id)shownEventEditViewController;
-(void)_removeDraggingOccurrenceAnimated:(char)arg1 ;
-(void)_removeAllWeekHighlights;
-(void)_selectOccurrence:(id)arg1 inWeek:(id)arg2 ;
-(id)_createLargeMonthWeekViewForDate:(id)arg1 ;
-(void)_showEventDetailsForOccurrence:(id)arg1 inWeek:(id)arg2 onDay:(id)arg3 animatedScrollToVisible:(char)arg4 showComments:(char)arg5 context:(NSDictionary*)arg6 ;
-(void)_updateDayHeaderFrames;
-(id)shownEventViewController;
-(void)_showNextDateComponentUnitInForwardDirection:(char)arg1 animated:(char)arg2 ;
-(void)_showEventDetailsForOccurrence:(id)arg1 inWeek:(id)arg2 onDay:(id)arg3 ;
-(void)_scrubWithTouches:(id)arg1 ;
-(id)_weekViewAtPoint:(CGPoint)arg1 pointInWeek:(CGPoint*)arg2 ;
-(id)_dateAtPoint:(CGPoint)arg1 ;
-(id)_occurrenceAtPoint:(CGPoint)arg1 ;
-(void)_scrubAtPoint:(CGPoint)arg1 ;
-(char)isReadyToShowViewControllersInsideEnqueueableManagedNavigationController:(id)arg1 ;
-(void)_scrollToWeekView:(id)arg1 animated:(char)arg2 completion:(/*^block*/id)arg3 ;
-(CGRect)_startingFrameForEvent:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)_event:(id)arg1 wasCancelledAtPoint:(CGPoint)arg2 ;
-(void)_updateDraggingOffsetTimesForPoint:(CGPoint)arg1 ;
-(void)_updateWeekHighlightsForDragPoint:(CGPoint)arg1 ;
-(CGRect)_mainFrameForEvent:(id)arg1 atLastPosition:(char)arg2 atPoint:(CGPoint)arg3 ;
-(void)_animateDraggingOccurrenceToDate:(id)arg1 atLastPosition:(char)arg2 dropPoint:(CGPoint)arg3 completion:(/*^block*/id)arg4 ;
-(void)_saveDraggedEventWithSpan:(int)arg1 ;
-(void)enqueuableNavigationController:(id)arg1 requestsDeferShowViewControllerUntilReady:(/*^block*/id)arg2 ;
-(void)enqueueableManagedNavigationController:(id)arg1 requestsConfigurationOfPropertiesForPopoverPresentationController:(id)arg2 completion:(/*^block*/id)arg3 ;
-(char)_isEventAllInOneWeek:(id)arg1 ;
-(void)dealloc;
-(unsigned)supportedInterfaceOrientations;
-(char)shouldAutorotate;
-(void)loadView;
-(void)viewWillAppear:(char)arg1 ;
-(void)viewDidAppear:(char)arg1 ;
-(void)viewWillDisappear:(char)arg1 ;
-(void)viewWillLayoutSubviews;
-(void)viewWillTransitionToSize:(CGSize)arg1 withTransitionCoordinator:(id)arg2 ;
-(void)popoverPresentationControllerDidDismissPopover:(id)arg1 ;
-(char)popoverPresentationControllerShouldDismissPopover:(id)arg1 ;
-(void)popoverPresentationController:(id)arg1 willRepositionPopoverToRect:(inout CGRect*)arg2 inView:(inout id*)arg3 ;
-(void)didScroll;
-(CGRect)frameForTodayHighlight;
-(id)touchTrackingViewForEventGestureController:(id)arg1 ;
-(char)eventGestureControllerShouldAllowLongPress:(id)arg1 ;
-(void)significantTimeChangeOccurred;
-(void)eventViewControllerWillBeginEditingEvent:(id)arg1 ;
-(char)eventViewDelegateShouldCreateOwnEditViewController:(id)arg1 ;
-(char)eventViewDelegateShouldHandlePresentationOfEditViewController:(id)arg1 ;
-(void)eventViewController:(id)arg1 requestsDisplayOfEditViewController:(id)arg2 animated:(char)arg3 ;
-(char)eventViewControllerPresentationWantsHiddenNavBarForSingleController;
-(void)eventViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
-(int)editorShowTransition;
-(int)editorHideTransition;
-(id)eventGestureController:(id)arg1 setUpAtPoint:(CGPoint)arg2 withOccurrence:(id)arg3 ;
-(void)eventGestureController:(id)arg1 updateToPoint:(CGPoint)arg2 ;
-(void)eventGestureController:(id)arg1 commitToPoint:(CGPoint)arg2 ;
-(void)eventGestureControllerScrollTimerFired:(id)arg1 ;
-(void)eventGestureControllerCancelled:(id)arg1 ;
-(char)isDraggingOccurrence;
-(id)_palette;
-(void)eventEditViewController:(id)arg1 didCompleteWithAction:(int)arg2 ;
@end

