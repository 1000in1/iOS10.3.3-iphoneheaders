/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:38:57 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileMail.app/MobileMail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <MobileMail/MobileMail-Structs.h>
#import <libobjc.A.dylib/MFDiagnosticsGenerator.h>
#import <MobileMail/MessageSelectionDataSource.h>
#import <MobileMail/MiniMallSourceBulkOperationsDelegate.h>
#import <MobileMail/MFTableViewPrefetchProvider.h>

@protocol OS_dispatch_queue;
@class NSObject, NSMutableSet, MFMessageInfoOrderedSet, MFActivityMonitor, NSDictionary, MessageSelectionStrategy, MFMailMessage, SourceSearchContext, MFMessageMiniMallSendersCache, NSString;

@interface MessageMiniMall : NSObject <MFDiagnosticsGenerator, MessageSelectionDataSource, MiniMallSourceBulkOperationsDelegate, MFTableViewPrefetchProvider> {

	int _suspendCount;
	NSObject*<OS_dispatch_queue> _queue;
	NSMutableSet* _sources;
	NSMutableSet* _emptiedSources;
	CFDictionaryRef _messageCollections;
	MFMessageInfoOrderedSet* _messageInfoSet;
	unsigned _messageCountInCollections;
	MFActivityMonitor* _fetchActivity;
	char _userRefresh;
	NSDictionary* _maximumIndexPathsBySource;
	CFDictionaryRef _sourceShouldGrowCache;
	CFDictionaryRef _growingMailboxesByActivity;
	MessageSelectionStrategy* _selectionStrategy;
	MFMailMessage* _currentMessage;
	int _lastChangeDirection;
	SourceSearchContext* _searchContext;
	/*^block*/id _comparator;
	unsigned _tag;
	/*^block*/id _duplicatePreferenceComparator;
	/*^block*/id _outgoingIndexPathMapper;
	/*^block*/id _incomingIndexPathMapper;
	/*^block*/id _incomingIndexPathValidator;
	/*^block*/id _growthThresholdComparator;
	id _context;
	MFMessageMiniMallSendersCache* _senderCache;

}

@property (retain) MFMessageMiniMallSendersCache * senderCache;              //@synthesize senderCache=_senderCache - In the implementation block
@property (nonatomic,readonly) char allSourcesThreadMessages; 
@property (assign,nonatomic) unsigned tag;                                   //@synthesize tag=_tag - In the implementation block
@property (nonatomic,copy) id comparator;                                    //@synthesize comparator=_comparator - In the implementation block
@property (nonatomic,copy) id duplicatePreferenceComparator;                 //@synthesize duplicatePreferenceComparator=_duplicatePreferenceComparator - In the implementation block
@property (nonatomic,readonly) unsigned numberOfSections; 
@property (nonatomic,copy) id outgoingIndexPathMapper;                       //@synthesize outgoingIndexPathMapper=_outgoingIndexPathMapper - In the implementation block
@property (nonatomic,copy) id incomingIndexPathMapper;                       //@synthesize incomingIndexPathMapper=_incomingIndexPathMapper - In the implementation block
@property (nonatomic,copy) id incomingIndexPathValidator;                    //@synthesize incomingIndexPathValidator=_incomingIndexPathValidator - In the implementation block
@property (nonatomic,copy) id growthThresholdComparator;                     //@synthesize growthThresholdComparator=_growthThresholdComparator - In the implementation block
@property (nonatomic,retain) MFMailMessage * currentMessage; 
@property (nonatomic,retain) MFMailMessage * lastViewedMessage; 
@property (assign,nonatomic) int lastChangeDirection; 
@property (copy) SourceSearchContext * searchContext; 
@property (nonatomic,retain) id context;                                     //@synthesize context=_context - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(/*^block*/id)messageInfosTransformForConversationID:(long long)arg1 ;
-(id)initWithObserver:(id)arg1 tag:(unsigned)arg2 ;
-(void)removeAllSources;
-(id)bulletinsContexts;
-(unsigned)messageCountForCollectionWithMessage:(id)arg1 ;
-(unsigned)unreadCountForDisplay;
-(void)loadMoreMessagesWithMaxVisibleIndexPath:(id)arg1 ;
-(unsigned)flattenedIndexOfMessage:(id)arg1 ;
-(char)shouldPopOnZeroMessages;
-(void)setLastViewedMessage:(MFMailMessage *)arg1 ;
-(id)tableIndexPathOfMessageOrMessageCollection:(id)arg1 ;
-(char)archivesByDefault;
-(char)deleteMovesToTrash;
-(id)sourceForMailbox:(id)arg1 ;
-(id)copyAllMessages;
-(void)markAllMessagesAsDeletedOrArchived:(unsigned)arg1 ;
-(void)markMessages:(id)arg1 asDeletedOrArchived:(unsigned)arg2 ;
-(void)markAllMessagesAsViewed;
-(void)markAllMessagesAsNotViewed;
-(void)markMessagesAsViewed:(id)arg1 ;
-(void)markMessagesAsNotViewed:(id)arg1 ;
-(void)markAllMessagesAsFlagged;
-(void)markAllMessagesAsNotFlagged;
-(void)markMessagesAsFlagged:(id)arg1 ;
-(void)markMessagesAsNotFlagged:(id)arg1 ;
-(void)markMessagesAsJunk:(id)arg1 ;
-(void)markMessagesAsNotJunk:(id)arg1 ;
-(id)messageAtTableIndexPath:(id)arg1 ;
-(id)tableIndexPathOfMessageCollectionContainingMessageInfo:(id)arg1 ;
-(id)tableIndexPathOfMessageCollectionContainingMessage:(id)arg1 ;
-(id)sourcesForMessagesAtTableIndexPath:(id)arg1 ;
-(id)titleWithUnreadCount:(unsigned)arg1 options:(unsigned)arg2 ;
-(char)shouldShowUnreadCount;
-(id)currentRemoteIDForMailbox:(id)arg1 ;
-(void)trackFetchVisibleMailbox:(id)arg1 activity:(id)arg2 options:(unsigned)arg3 ;
-(id)messagesAtTableIndexPath:(id)arg1 ;
-(unsigned)localMessageCount;
-(char)shouldShowEmptyMailboxString;
-(id)emptyMailboxString;
-(id)messagesForConversationWithID:(long long)arg1 ;
-(void)setLastChangeDirection:(int)arg1 ;
-(id)tableIndexPathOfMessage:(id)arg1 ;
-(MFMailMessage *)lastViewedMessage;
-(id)messageForMessageID:(id)arg1 ;
-(id)defaultMessageForStyle:(unsigned)arg1 ;
-(id)messageToSelectAfterDeletedMessage:(id)arg1 ;
-(char)containsMessage:(id)arg1 ;
-(id)messageForMessageInfo:(id)arg1 ;
-(id)messageInfosAtTableIndexPath:(id)arg1 ;
-(char)deleteMovesToTrashForTableIndexPath:(id)arg1 ;
-(char)supportsArchivingForTableIndexPath:(id)arg1 ;
-(char)shouldArchiveByDefaultForTableIndexPath:(id)arg1 ;
-(void)getConversationStateAtTableIndexPath:(id)arg1 hasUnread:(char*)arg2 hasUnflagged:(char*)arg3 ;
-(void)getSourceStateHasUnread:(char*)arg1 hasUnflagged:(char*)arg2 ;
-(char)allSourcesThreadMessages;
-(void)setOutgoingIndexPathMapper:(id)arg1 ;
-(void)setIncomingIndexPathMapper:(id)arg1 ;
-(void)setIncomingIndexPathValidator:(id)arg1 ;
-(void)updateEntry:(id)arg1 atTableIndexPath:(id)arg2 addressList:(id*)arg3 options:(unsigned)arg4 entryStyle:(unsigned)arg5 ;
-(id)messageCollectionAtTableIndexPath:(id)arg1 ;
-(long long)messageCollectionHashAtIndexPath:(id)arg1 ;
-(id)tableIndexPathOfMessageCollectionHash:(long long)arg1 ;
-(id)conversationReferenceMessageToSelectFromMessage:(id)arg1 withDirection:(int)arg2 ;
-(id)messageCollectionContainingMessage:(id)arg1 ;
-(int)lastChangeDirection;
-(id)tableViewPrefetcher:(id)arg1 prefetchOperationAtIndexPath:(id)arg2 ;
-(void)_messagesAdded:(id)arg1 ;
-(void)_cancelGrowingMailboxes;
-(void)_protectedDataWillBecomeUnavailable:(id)arg1 ;
-(void)_protectedDataWasReconciled:(id)arg1 ;
-(void)_applyPendingChangesLocally:(id)arg1 ;
-(id)incomingIndexPathMapper;
-(void)setGrowthThresholdComparator:(id)arg1 ;
-(void)withGroup:(id)arg1 enqueueWork:(/*^block*/id)arg2 ;
-(void)_messageFlagsChanged:(id)arg1 ;
-(void)_messagesCompacted:(id)arg1 ;
-(void)_checkServerCount:(id)arg1 ;
-(void)_conversationHasMerged:(id)arg1 ;
-(void)_sourceDidReload:(id)arg1 ;
-(void)_sourceDidFinishSearch:(id)arg1 ;
-(void)_invalidateMaximumIndexPathsBySource;
-(void)_purgeCachedMessageInfosWithReason:(id)arg1 ;
-(void)_purgeCachedSendersWithReason:(id)arg1 ;
-(void)_fetchCompleted:(id)arg1 ;
-(void)_notifyGrowingMailboxesChanged;
-(void)_clearFetchActivity;
-(void)_checkForNewMailAndNotifyOnFailure:(char)arg1 ;
-(void)_checkForNewMailAndNotifyOnFailureBackground:(char)arg1 userRefresh:(char)arg2 foregroundRequest:(char)arg3 sourcesToCheck:(id)arg4 remoteID:(id)arg5 ;
-(char)_nts_isGrowingFetchWindowForAnySource;
-(id)_nts_growingMailboxActivityMonitorForSource:(id)arg1 ;
-(id)_tableIndexPathOfOldestMessageInSource:(id)arg1 ;
-(id)outgoingIndexPathMapper;
-(id)growthThresholdComparator;
-(char)shouldGrowFetchWindowForSource:(id)arg1 ;
-(char)isGrowingFetchWindowForSource:(id)arg1 ;
-(void)loadOlderMessages;
-(void)growFetchWindowForSources:(id)arg1 ;
-(id)maximumIndexPathsBySource;
-(void)_loadMoreMessagesWithContext:(id)arg1 ;
-(void)setSenderCache:(MFMessageMiniMallSendersCache *)arg1 ;
-(void)_scheduleEnsureWeHaveLoadedMessages;
-(unsigned)_messageInfoIndexForIndexPath:(id)arg1 ;
-(id)_messageInfoAtIndexPath:(id)arg1 ;
-(id)_messageCollectionInfoForMessageInfo:(id)arg1 ;
-(char)ensureWeHaveLoadedMessages;
-(id)_messageForMessageInfo:(id)arg1 cache:(char)arg2 ;
-(MFMessageMiniMallSendersCache *)senderCache;
-(void)_nts_getConversationStateFromNewestMessageInfo:(id)arg1 shouldCollect:(char)arg2 hasUnread:(char*)arg3 hasUnflagged:(char*)arg4 ;
-(id)_visibleMessageInfoAtIndexPath:(id)arg1 ;
-(long long)_messageCollectionHashForMessageInfo:(id)arg1 ;
-(id)_sourceForMessageInfo:(id)arg1 ;
-(id)_messageCollectionInfoForMessage:(id)arg1 ;
-(id)tableIndexPathOfMessageInfo:(id)arg1 ;
-(id)_indexPathForMessageInfoIndex:(unsigned)arg1 ;
-(id)_conversationWithID:(long long)arg1 ;
-(id)_tableIndexPathOfConversationWithID:(long long)arg1 ;
-(id)_copySources;
-(id)_messageInfosForConversationID:(long long)arg1 ;
-(char)_anySourceRepresentsMailboxUidType:(int)arg1 ;
-(id)messageInfosIncludingDuplicateForMessageInfos:(id)arg1 removalTest:(/*^block*/id)arg2 ;
-(id)_tableIndexPathOfMessageOrCollectionForInfo:(id)arg1 collectionMustContainMessage:(char)arg2 ;
-(id)_messageCollectionInfoForHash:(long long)arg1 ;
-(id)messageToSelectAfterDeletedMessages:(id)arg1 ;
-(id)messageToSelectFromMessage:(id)arg1 withDirection:(int)arg2 ;
-(void)getLastViewedMessage:(id*)arg1 date:(id*)arg2 ;
-(char)isInCombinedMailboxOfType:(int)arg1 ;
-(char)areAnySourcesSearching;
-(/*^block*/id)removalTestForExcludedMailboxTypes;
-(id)messagesIncludingDuplicateForMessages:(id)arg1 removalTest:(/*^block*/id)arg2 ;
-(id)junkMailboxMessagesInMessages:(id)arg1 ;
-(void)_addChangeSetToManager:(id)arg1 ;
-(id)_removeMessages:(id)arg1 ;
-(void)_filterTaskCompletedWithContext:(id)arg1 ;
-(id)_indexPathsFromIndexes:(id)arg1 ;
-(void)_applyOperation:(id)arg1 onMessages:(id)arg2 removalTest:(/*^block*/id)arg3 ;
-(void)_synchronouslyFilterMessages:(id)arg1 fromSource:(id)arg2 operation:(unsigned)arg3 ;
-(void)_flagsChangedForMessages:(id)arg1 flags:(id)arg2 source:(id)arg3 group:(id)arg4 ;
-(id)_messageCollectionInfoForForHash:(long long)arg1 createIfNeeded:(char)arg2 ;
-(id)_cachedMessageForMessageInfo:(id)arg1 ;
-(void)enqueueWork:(/*^block*/id)arg1 ;
-(char)_loadMessages;
-(void)_loadGroupedMessages:(id)arg1 ;
-(void)_loadNonGroupedMessages:(id)arg1 ;
-(id)_messageCollectionInfoForMessageInfo:(id)arg1 createIfNeeded:(char)arg2 ;
-(id)_addMessages:(id)arg1 ;
-(void)_currentMessage:(id)arg1 removedWithMessageToSelect:(id)arg2 ;
-(id)_copyAllMessageInfos;
-(CFDictionaryRef)_copyMessageInfosBySourceForTableIndexPath:(id)arg1 ;
-(id)incomingIndexPathValidator;
-(char)_hasOnlyThreadedSources;
-(long long)_messageCollectionHashForMessage:(id)arg1 ;
-(unsigned)flattenedIndexOfWhereMessageShouldGo:(id)arg1 ;
-(id)messageAtFlattenedIndex:(unsigned)arg1 ;
-(id)conversationContainingMessage:(id)arg1 ;
-(void)didDeleteAllMessagesInSource:(id)arg1 ;
-(void)replaceAllSourcesWith:(id)arg1 ;
-(void)checkForNewMailAndNotifyOnFailure:(char)arg1 userRefresh:(char)arg2 ;
-(char)isGrowingFetchWindowForAnySource;
-(unsigned)messageCountAtTableIndexPath:(id)arg1 ;
-(void)getIndex:(unsigned*)arg1 andCount:(unsigned*)arg2 ofMessageInConversation:(id)arg3 ;
-(id)tableIndexPathOfMessageCollection:(id)arg1 ;
-(unsigned)senderCount;
-(void)transferMessages:(id)arg1 toMailbox:(id)arg2 ;
-(void)transferAllMessagesToMailbox:(id)arg1 ;
-(id)startSearchWithContext:(id)arg1 ;
-(char)deleteMovesToTrashForMessage:(id)arg1 ;
-(char)supportsArchivingForMessage:(id)arg1 ;
-(char)archiveByDefaultForMessage:(id)arg1 ;
-(char)isInCombinedInbox;
-(void)_cacheMessageForMessageInfo:(id)arg1 ;
-(void)_cacheSendersForMessageInfo:(id)arg1 ;
-(void)_cacheHeadersForMessageInfo:(id)arg1 ;
-(unsigned)threadedCount;
-(id)fetchActivity;
-(id)comparator;
-(void)dealloc;
-(unsigned)numberOfSections;
-(void)applicationWillSuspend;
-(void)addObserver:(id)arg1 ;
-(void)applicationDidResume;
-(void)suspend;
-(void)removeObserver:(id)arg1 ;
-(id)context;
-(unsigned)tag;
-(void)setTag:(unsigned)arg1 ;
-(void)resume;
-(void)setContext:(id)arg1 ;
-(unsigned)sourceType;
-(unsigned)messageCount;
-(void)addSource:(id)arg1 ;
-(id)sources;
-(SourceSearchContext *)searchContext;
-(void)setSearchContext:(SourceSearchContext *)arg1 ;
-(unsigned)serverMessageCount;
-(char)supportsArchiving;
-(id)copyDiagnosticInformation;
-(id)duplicatePreferenceComparator;
-(void)setDuplicatePreferenceComparator:(id)arg1 ;
-(void)setComparator:(id)arg1 ;
-(void)flushCaches;
-(MFMailMessage *)currentMessage;
-(void)setCurrentMessage:(MFMailMessage *)arg1 ;
@end

