/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:24:57 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /Applications/MobileMail.app/MobileMail
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
@class NSMutableArray, NSObject, NSOperationQueue, NSMutableDictionary;

@interface MFNanoServerFullMessageLoader : NSObject {

	char _isProtectedDataAvailable;
	char _isNetworkUp;
	char _isRetryScheduled;
	NSMutableArray* _requests;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	NSObject*<OS_dispatch_queue> _privateQueue;
	NSOperationQueue* _operationQueue;
	id _networkObserverId;
	NSMutableDictionary* _failedMessageIdsByRequest;
	double _currentBackoff;

}

@property (nonatomic,retain) NSMutableArray * requests;                                    //@synthesize requests=_requests - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> callbackQueue;                   //@synthesize callbackQueue=_callbackQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> privateQueue;                    //@synthesize privateQueue=_privateQueue - In the implementation block
@property (nonatomic,retain) NSOperationQueue * operationQueue;                            //@synthesize operationQueue=_operationQueue - In the implementation block
@property (nonatomic,retain) id networkObserverId;                                         //@synthesize networkObserverId=_networkObserverId - In the implementation block
@property (assign,nonatomic) char isProtectedDataAvailable;                                //@synthesize isProtectedDataAvailable=_isProtectedDataAvailable - In the implementation block
@property (assign,nonatomic) char isNetworkUp;                                             //@synthesize isNetworkUp=_isNetworkUp - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * failedMessageIdsByRequest;              //@synthesize failedMessageIdsByRequest=_failedMessageIdsByRequest - In the implementation block
@property (assign,nonatomic) char isRetryScheduled;                                        //@synthesize isRetryScheduled=_isRetryScheduled - In the implementation block
@property (assign,nonatomic) double currentBackoff;                                        //@synthesize currentBackoff=_currentBackoff - In the implementation block
-(void)attemptToCancelFullMessageLoadForMessageIds:(id)arg1 ;
-(void)cancelAllPendingOperations;
-(void)loadFullMessagesForMessageIds:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_suspendOrResumeOperationQueue;
-(void)_setupNetworkObserver;
-(void)_registerForLibraryAvailabilityNotifications;
-(void)_libraryAvailabilityChanged;
-(void)_networkStatusChanged;
-(void)resetExponentialBackoff;
-(void)_dispatchOperation;
-(id)_dequeueMessageIdsFromFirstRequestAvailable:(out id*)arg1 ;
-(id)_loadFullMessageForMessageIds:(id)arg1 isProtectedMessage:(char*)arg2 ;
-(void)_handleResults:(id)arg1 forRequest:(id)arg2 isProtectedMessage:(char)arg3 ;
-(void)_scheduleRetryForFailedMessageIds:(id)arg1 failedRequest:(id)arg2 ;
-(id)_libraryMessagesKeyedByStore:(id)arg1 ;
-(NSMutableDictionary *)failedMessageIdsByRequest;
-(double)_exponentialBackoff;
-(void)_enqueueMessageIds:(id)arg1 forRequest:(id)arg2 ;
-(void)setIsRetryScheduled:(char)arg1 ;
-(void)_processPendingRequests;
-(id)networkObserverId;
-(void)setNetworkObserverId:(id)arg1 ;
-(void)setIsProtectedDataAvailable:(char)arg1 ;
-(void)setIsNetworkUp:(char)arg1 ;
-(void)setFailedMessageIdsByRequest:(NSMutableDictionary *)arg1 ;
-(char)isRetryScheduled;
-(double)currentBackoff;
-(void)setCurrentBackoff:(double)arg1 ;
-(void)dealloc;
-(char)isProtectedDataAvailable;
-(void)setOperationQueue:(NSOperationQueue *)arg1 ;
-(NSOperationQueue *)operationQueue;
-(NSMutableArray *)requests;
-(NSObject*<OS_dispatch_queue>)callbackQueue;
-(void)setCallbackQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setRequests:(NSMutableArray *)arg1 ;
-(char)isNetworkUp;
-(id)initWithCallbackQueue:(id)arg1 ;
-(char)_isProtectedDataAvailable;
-(NSObject*<OS_dispatch_queue>)privateQueue;
-(void)setPrivateQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

