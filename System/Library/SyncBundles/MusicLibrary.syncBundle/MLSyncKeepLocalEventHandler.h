/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 6:40:12 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/SyncBundles/MusicLibrary.syncBundle/MusicLibrary
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/LSApplicationWorkspaceObserverProtocol.h>
#import <libobjc.A.dylib/NSXPCListenerDelegate.h>
#import <libobjc.A.dylib/MLSyncKeepLocalRequestListener.h>
#import <libobjc.A.dylib/ATAssetLinkControllerObserver.h>
#import <libobjc.A.dylib/ATSessionObserver.h>
#import <libobjc.A.dylib/ATEnvironmentMonitorObserver.h>

@protocol OS_dispatch_queue;
@class ML3MusicLibrary, NSObject, ATEventScheduler, ATEnvironmentMonitor, NSMutableDictionary, NSXPCListener, NSMutableSet, NSString;

@interface MLSyncKeepLocalEventHandler : NSObject <LSApplicationWorkspaceObserverProtocol, NSXPCListenerDelegate, MLSyncKeepLocalRequestListener, ATAssetLinkControllerObserver, ATSessionObserver, ATEnvironmentMonitorObserver> {

	ML3MusicLibrary* _library;
	NSObject*<OS_dispatch_queue> _queue;
	NSObject*<OS_dispatch_queue> _callbackQueue;
	double _lastSessionTime;
	ATEventScheduler* _eventScheduler;
	ATEnvironmentMonitor* _environmentMonitor;
	NSMutableDictionary* _activeDownloads;
	NSMutableDictionary* _cancelledDownloads;
	NSXPCListener* _keepLocalTaskConnection;
	NSMutableSet* _keepLocalObservers;
	char _startupCompleted;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)_downloadOnWifiAllowed;
+(id)keepLocalDisabledAndHasTrackDataOrDownloadAndIsRedownloadablePredicate;
+(id)keepLocalCancelledAndIsDownloadingPredicate;
+(id)_trackPropertiesToFetch;
+(id)keepLocalEnabledPredicate;
+(id)keepLocalAndDownloadingButNotDownloadablePredicate;
+(id)missingTrackDataPredicate;
+(id)keepLocalNotDisabledPredicate;
+(char)_musicDownloadsAllowedOnCurrentNetwork;
+(char)_downloadOnCellularAllowed;
+(id)keepLocalWithMissingTrackDataAndIsDownloadablePredicateForIdentifier:(long long)arg1 ;
+(id)keepLocalAndMissingTrackDataPredicate;
+(id)keepLocalOffPredicate;
+(id)keepLocalDisabledPredicate;
+(id)hasTrackDataAndAlbumKeepLocalOffPredicate;
+(id)hasDownloadingStatusPredicate;
+(id)hasTrackDataOrPendingDownloadPredicate;
+(id)isDownloadablePredicate;
+(id)hasTrackDataPredicate;
+(id)trackMatchingItemIdentifierPredicate:(long long)arg1 ;
+(id)keepLocalCancelledPredicate;
+(id)sharedInstance;
-(void)_notifyObserversAndEnqueueDownloads:(id)arg1 cancelDownloads:(id)arg2 ;
-(id)runDefaultKeepLocalEvaluationWithMusicLibrary:(id)arg1 ;
-(void)_handleImportFinishedNotification:(id)arg1 ;
-(void)_handleInitiateDownloadsNotification:(id)arg1 ;
-(void)_handleKeepLocalSessionEvent:(id)arg1 ;
-(void)_handleAccountsChanged;
-(void)_handleUseCellularDataSettingChangedNotification;
-(void)startKeepLocalSessionInBackground:(char)arg1 forLibraryIdentifier:(long long)arg2 entityType:(int)arg3 newKeepLocalStatus:(int)arg4 ;
-(id)_runKeepLocalEvaluationForAlbumWithPersistentId:(long long)arg1 musicLibrary:(id)arg2 ;
-(id)_runKeepLocalEvaluationForContainerWithPersistentId:(long long)arg1 musicLibrary:(id)arg2 ;
-(id)_trackQueryForEntityCollection:(id)arg1 predicate:(id)arg2 ;
-(char)_containerIsSmartLimited:(id)arg1 ;
-(id)_anyTracksQueryForCollection:(id)arg1 ;
-(char)_canRunKeepLocalEvaluation;
-(void)_handleKeepLocalSessionPeriodicEvent:(id)arg1 ;
-(void)startKeepLocalSessionInBackground:(char)arg1 ;
-(void)_handleNetworkConditionsOrPolicyChanged;
-(void)cancelActiveDownloadsWithError:(id)arg1 ;
-(void)startKeepLocalSessionInBackground:(char)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)_addTrackWithPersistentId:(long long)arg1 andProperties:(id)arg2 withKeepLocalValue:(int)arg3 toResult:(id)arg4 ;
-(id)_processQueryResultsForCollection:(id)arg1 musicLibrary:(id)arg2 ;
-(id)_searchableKeepLocalCollectionClasses;
-(void)_cancelAllTracksFromLibrary:(id)arg1 withPersistentIDs:(id)arg2 ;
-(id)_assetsFromTrackPersistentIds:(id)arg1 andProperties:(id)arg2 inForeground:(char)arg3 ;
-(id)_runKeepLocalEvaluationForTrackWithPersistentId:(long long)arg1 musicLibrary:(id)arg2 ;
-(id)runKeepLocalEvaluationForItem:(long long)arg1 entityType:(int)arg2 newKeepLocalStatus:(int)arg3 musicLibrary:(id)arg4 ;
-(id)_handleKeepLocalEvaluationOperationCompletedWithResult:(id)arg1 andGetEnqueuedDownloads:(id*)arg2 cancelledDownloads:(id*)arg3 ;
-(void)_pruneActiveDownloads;
-(void)_handleAirTrafficStartedEvent:(id)arg1 ;
-(id)_inMyLibraryPredicate;
-(id)_assetWithPersistentID:(long long)arg1 ;
-(id)_allTracksDisabledForCollection:(id)arg1 ;
-(void)dealloc;
-(id)_init;
-(char)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2 ;
-(void)cancelDownloads;
-(void)enqueueAssetForDownload:(long long)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)handleKeepLocalStatusChanged:(int)arg1 forLibraryIdentifier:(long long)arg2 entityType:(int)arg3 withCompletionBlock:(/*^block*/id)arg4 ;
-(void)setLibrary:(id)arg1 ;
-(void)applicationStateDidChange:(id)arg1 ;
-(void)environmentMonitorDidChangeNetworkReachability:(id)arg1 ;
-(void)assetLinkController:(id)arg1 didFinishAsset:(id)arg2 ;
-(void)assetLinkController:(id)arg1 didUpdateAsset:(id)arg2 ;
@end

