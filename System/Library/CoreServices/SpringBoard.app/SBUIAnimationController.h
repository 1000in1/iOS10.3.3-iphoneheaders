/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:36:52 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SBTransaction.h>
#import <UIKit/UIViewControllerInteractiveTransitioning.h>
#import <SpringBoard/SBViewControllerTransitionContextDelegate.h>
#import <SpringBoard/SBUIAnimationStepping.h>
#import <SpringBoard/SBUIAnimationControllerCoordinating.h>

@protocol SBUIAnimationControllerTransitionContextProvider;
@class BSBlockTransaction, NSSet, NSMutableSet, SBAnimationStepper, UIWindow, UIView, SBViewControllerTransitionContext, BSTransaction, SBWorkspaceApplication, BSAnimationSettings, NSString;

@interface SBUIAnimationController : SBTransaction <UIViewControllerInteractiveTransitioning, SBViewControllerTransitionContextDelegate, SBUIAnimationStepping, SBUIAnimationControllerCoordinating> {

	id<SBUIAnimationControllerTransitionContextProvider> _transitionContextProvider;
	BSBlockTransaction* _animationTransaction;
	BSBlockTransaction* _notifyObserversTransaction;
	BSBlockTransaction* _cleanupTransaction;
	NSSet* _progressDependencies;
	NSSet* _waitForActivationDependencies;
	NSMutableSet* _coordinatingChildRelationships;
	NSMutableSet* _steppedCoordinatingChildAnimations;
	SBAnimationStepper* _stepper;
	UIWindow* _transitionWindow;
	UIView* _transitionContainer;
	int _animationState;
	char _didPostBeginAnimationNotification;
	char _didNotifyObserversOfCompletion;
	char _needsCATransactionActivate;
	SBViewControllerTransitionContext* _transition;
	/*^block*/id _animationTransactionCompletion;

}

@property (nonatomic,retain) SBViewControllerTransitionContext * transition;                                              //@synthesize transition=_transition - In the implementation block
@property (nonatomic,retain) id<SBUIAnimationControllerTransitionContextProvider> transitionContextProvider;              //@synthesize transitionContextProvider=_transitionContextProvider - In the implementation block
@property (nonatomic,copy) id animationTransactionCompletion;                                                             //@synthesize animationTransactionCompletion=_animationTransactionCompletion - In the implementation block
@property (nonatomic,readonly) BSTransaction * animationTransaction;                                                      //@synthesize animationTransaction=_animationTransaction - In the implementation block
@property (nonatomic,readonly) BSTransaction * notifyObserversTransaction;                                                //@synthesize notifyObserversTransaction=_notifyObserversTransaction - In the implementation block
@property (nonatomic,readonly) BSTransaction * cleanupTransaction;                                                        //@synthesize cleanupTransaction=_cleanupTransaction - In the implementation block
@property (assign,nonatomic) char needsCATransactionActivate;                                                             //@synthesize needsCATransactionActivate=_needsCATransactionActivate - In the implementation block
@property (nonatomic,readonly) UIView * containerView;                                                                    //@synthesize transitionContainer=_transitionContainer - In the implementation block
@property (nonatomic,copy,readonly) NSSet * activatingApps; 
@property (nonatomic,copy,readonly) NSSet * deactivatingApps; 
@property (nonatomic,readonly) SBWorkspaceApplication * activatingApp; 
@property (nonatomic,readonly) SBWorkspaceApplication * deactivatingApp; 
@property (nonatomic,readonly) char transitionSupportsCancelling; 
@property (nonatomic,readonly) char transitionSupportsRestarting; 
@property (nonatomic,readonly) char transitionWasCancelled; 
@property (nonatomic,readonly) char transitionWasRestarted; 
@property (getter=isInteractive,nonatomic,readonly) char interactive; 
@property (nonatomic,readonly) id<SBViewControllerTransitionCoordinator> transitionCoordinator; 
@property (nonatomic,readonly) BSAnimationSettings * animationSettings; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) float completionSpeed; 
@property (nonatomic,readonly) int completionCurve; 
@property (nonatomic,readonly) char wantsInteractiveStart; 
@property (getter=isStepped,nonatomic,readonly) char stepped; 
@property (assign,nonatomic) float stepPercentage; 
-(char)transitionWasRestarted;
-(id)initWithTransitionContextProvider:(id)arg1 ;
-(NSSet *)activatingApps;
-(void)_noteAnimationDidFinish;
-(void)_cleanupAnimation;
-(char)_waitsForApplicationActivationIfNecessary;
-(id)_animationProgressDependencies;
-(char)_shouldDismissBanner;
-(void)_prepareAnimation;
-(id)_getTransitionWindow;
-(float)stepPercentage;
-(void)setStepPercentage:(float)arg1 ;
-(void)finishSteppingForwardToEnd;
-(void)finishSteppingBackwardToStart;
-(char)isStepped;
-(id)_transitionAnimator;
-(void)enableSteppingWithAnimationSettings:(id)arg1 ;
-(void)_noteAnimationDidFail;
-(void)addCoordinatingChildTransaction:(id)arg1 withSchedulingPolicy:(unsigned)arg2 ;
-(id)_viewsForAnimationStepping;
-(SBWorkspaceApplication *)activatingApp;
-(SBWorkspaceApplication *)deactivatingApp;
-(NSSet *)deactivatingApps;
-(id<SBUIAnimationControllerTransitionContextProvider>)transitionContextProvider;
-(void)restartTransition;
-(void)_applicationDependencyStateChanged;
-(void)_noteAnimationDidRevealApplication;
-(void)_willSetupStartDependencies;
-(char)isReasonableMomentToInterrupt;
-(int)_animationState;
-(char)waitingToStart;
-(char)transitionSupportsCancelling;
-(char)__animationShouldStart;
-(void)setAnimationTransactionCompletion:(id)arg1 ;
-(void)__startAnimation;
-(void)__reportAnimationCompletion;
-(void)__cleanupAnimation;
-(void)_enumerateCoordinatingAnimationsWithSchedulingPolicy:(unsigned)arg1 block:(/*^block*/id)arg2 ;
-(char)transitionSupportsRestarting;
-(void)_setAnimationState:(int)arg1 ;
-(void)_abortAnimation;
-(id)coordinatingAnimationControllers;
-(void)_enumerateCoordinatingChildRelationshipsWithBlock:(/*^block*/id)arg1 ;
-(char)_willAnimate;
-(id)__alertItemsController;
-(id)__waitForAppActivationTransactionForApplication:(id)arg1 ;
-(char)__wantsInitialProgressStateChange;
-(void)_willBeginWaitingForStartDependencies;
-(BSTransaction *)animationTransaction;
-(BSTransaction *)notifyObserversTransaction;
-(BSTransaction *)cleanupTransaction;
-(void)_applicationActivationStateDidChange;
-(void)__abortAnimation;
-(void)_notifyObserversOfAnimationCompletion;
-(char)_isNullAnimation;
-(void)_enumerateCoordinatingAnimationsWithBlock:(/*^block*/id)arg1 ;
-(void)__noteAnimationDidTerminate;
-(id)animationTransactionCompletion;
-(void)addSteppedCoordinatingChildAnimation:(id)arg1 ;
-(void)delayCleanupUntilTransactionFinishes:(id)arg1 ;
-(void)stopDelayingCleanupForTransaction:(id)arg1 ;
-(void)delayAnimationUntilTransactionFinishes:(id)arg1 ;
-(void)stopDelayingAnimationForTransaction:(id)arg1 ;
-(void)setTransitionContextProvider:(id<SBUIAnimationControllerTransitionContextProvider>)arg1 ;
-(char)needsCATransactionActivate;
-(void)setNeedsCATransactionActivate:(char)arg1 ;
-(id)init;
-(void)dealloc;
-(UIView *)containerView;
-(char)isInteractive;
-(char)transitionWasCancelled;
-(void)startInteractiveTransition:(id)arg1 ;
-(void)addObserver:(id)arg1 ;
-(BSAnimationSettings *)animationSettings;
-(void)removeObserver:(id)arg1 ;
-(void)transitionDidFinish:(id)arg1 ;
-(void)setTransition:(SBViewControllerTransitionContext *)arg1 ;
-(SBViewControllerTransitionContext *)transition;
-(id<SBViewControllerTransitionCoordinator>)transitionCoordinator;
-(char)animating;
-(void)_setHidden:(char)arg1 ;
-(id)_animationIdentifier;
-(char)_canBeInterrupted;
-(void)_addDebugLogCategory:(id)arg1 ;
-(void)_begin;
-(void)_willComplete;
-(void)cancelTransition;
-(char)isFinishedAnimating;
-(void)_startAnimation;
@end

