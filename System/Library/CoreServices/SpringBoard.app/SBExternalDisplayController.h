/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:36:50 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/FBDisplayManagerObserver.h>
#import <SpringBoard/SBWorkspaceSlaving.h>

@class FBSDisplay, NSString;

@interface SBExternalDisplayController : NSObject <FBDisplayManagerObserver, SBWorkspaceSlaving> {

	char _listeningForApplicationStateChanges;
	FBSDisplay* _currentDisplay;

}

@property (setter=_setCurrentDisplay:,getter=_currentDisplay,nonatomic,retain) FBSDisplay * currentDisplay;                                                                       //@synthesize currentDisplay=_currentDisplay - In the implementation block
@property (assign,setter=_setListeningForApplicationStateChanges:,getter=_isListeningForApplicationStateChanges,nonatomic) char listeningForApplicationStateChanges;              //@synthesize listeningForApplicationStateChanges=_listeningForApplicationStateChanges - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(id)master:(id)arg1 slaveTransactionsForTransitionRequest:(id)arg2 ;
-(id)_currentDisplay;
-(int)_eventForMainDisplayTransitionRequest:(id)arg1 ;
-(id)_eventLabelForEvent:(int)arg1 ;
-(void)_setCurrentDisplay:(id)arg1 ;
-(char)_isListeningForApplicationStateChanges;
-(void)_appStateDidChange:(id)arg1 ;
-(void)_setListeningForApplicationStateChanges:(char)arg1 ;
-(char)_displayConnectShouldWaitForAppRunning:(id)arg1 ;
-(char)_application:(id)arg1 canAccessDisplay:(id)arg2 ;
-(void)_handleDisplayConnectIfPossible:(id)arg1 ;
-(void)_startListeningForApplicationLaunch;
-(char)_shouldConnectDisplayNow:(id)arg1 ;
-(void)_connectDisplay:(id)arg1 ;
-(void)_stopListeningForApplicationLaunch;
-(id)_slaveTransactionForMainDisplayTransitionRequest:(id)arg1 currentExternalDisplay:(id)arg2 ;
-(id)expectedForegroundAppsOnDisplay:(id)arg1 ;
-(id)init;
-(void)_noteScreenDidChangeMode:(id)arg1 ;
-(void)displayManager:(id)arg1 didDisconnectDisplay:(id)arg2 ;
-(void)displayManager:(id)arg1 willConnectDisplay:(id)arg2 ;
-(void)displayManager:(id)arg1 didConnectDisplay:(id)arg2 ;
@end

