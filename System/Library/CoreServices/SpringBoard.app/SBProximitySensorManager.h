/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:36:58 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SBUIActiveOrientationObserver.h>

@protocol SBProximitySensorControlling;
@class NSMutableSet, SBHardwareDefaults, NSString;

@interface SBProximitySensorManager : NSObject <SBUIActiveOrientationObserver> {

	NSMutableSet* _clientsWantingDetectionEnabled;
	id<SBProximitySensorControlling> _hidInterface;
	SBHardwareDefaults* _hardwareDefaults;
	char _proximityDetectionEnabled;
	char _proximityDetectionPermitted;
	char _objectWithinProximity;

}

@property (assign,setter=_setProximityDetectionEnabled:,getter=isProximityDetectionEnabled,nonatomic) char proximityDetectionEnabled;                    //@synthesize proximityDetectionEnabled=_proximityDetectionEnabled - In the implementation block
@property (assign,setter=_setProximityDetectionPermitted:,getter=isProximityDetectionPermitted,nonatomic) char proximityDetectionPermitted;              //@synthesize proximityDetectionPermitted=_proximityDetectionPermitted - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)resetProximityCalibration;
-(char)isProximityDetectionEnabled;
-(void)client:(id)arg1 wantsProximityDetectionEnabled:(char)arg2 ;
-(id)initWithHIDInterface:(id)arg1 hardwareDefaults:(id)arg2 ;
-(void)reloadDefaults;
-(void)_setProximityDetectionPermitted:(char)arg1 ;
-(void)_updateProxState;
-(char)isProximityDetectionPermitted;
-(void)_setProximityDetectionEnabled:(char)arg1 ;
-(char)_clientsWantDetectionEnabled;
-(void)_enableProx;
-(void)_disableProx;
-(void)_proximityChanged:(id)arg1 ;
-(id)init;
-(NSString *)description;
-(void)activeInterfaceOrientationWillChangeToOrientation:(int)arg1 ;
-(void)activeInterfaceOrientationDidChangeToOrientation:(int)arg1 willAnimateWithDuration:(double)arg2 fromOrientation:(int)arg3 ;
-(void)destroy;
@end

