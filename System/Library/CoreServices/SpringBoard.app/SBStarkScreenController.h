/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:36:57 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/CoreServices/SpringBoard.app/SpringBoard
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SpringBoard/SpringBoard-Structs.h>
#import <SpringBoard/SBAlertManagerDelegate.h>
#import <SpringBoard/SBAlertManagerObserver.h>
#import <SpringBoard/SBAlertObserver.h>
#import <UIKit/UIStatusBarStyleDelegate.h>
#import <libobjc.A.dylib/_UISettingsKeyObserver.h>
#import <SpringBoard/AVExternalDeviceDelegate.h>
#import <libobjc.A.dylib/FBSceneLayerManagerObserver.h>
#import <SpringBoard/SBStarkIconControllerDelegate.h>
#import <SpringBoard/SBStarkWindowDelegate.h>
#import <SpringBoard/SBStarkStatusBarViewControllerDelegate.h>
#import <SpringBoard/SBCarDisplaySceneManagerDelegate.h>

@protocol SBDisplay, SBStarkScreenControllerDelegate;
@class SBStarkSessionConfiguration, FBSDisplay, UIScreen, SBCarDisplaySceneManager, SBCarDisplaySettings, NSMutableOrderedSet, NSMapTable, NSHashTable, SBStarkLockOutViewController, SBStarkLockOutWindow, FBDisplayLayoutElement, SBStarkAnimationWindow, FBScene, SBStarkNowPlayingController, SBStarkNowPlayingWindow, SBStarkIconController, SBStarkIconWindow, SBStarkStatusBarViewController, SBStarkStatusBarWindow, SBStarkNotificationWindow, SBAssistantWindow, SBAlertManager, SBStarkSystemGestureManager, NSTimer, SBStarkFileRadarAlertItem, SBStarkScreenFocusController, SBStarkFakeIconOperationController, AVExternalDevice, NSMutableSet, SBStarkFocusMovementManager, SBWindow, UIWindow, SBStarkNotificationViewController, NSString;

@interface SBStarkScreenController : NSObject <SBAlertManagerDelegate, SBAlertManagerObserver, SBAlertObserver, UIStatusBarStyleDelegate, _UISettingsKeyObserver, AVExternalDeviceDelegate, FBSceneLayerManagerObserver, SBStarkIconControllerDelegate, SBStarkWindowDelegate, SBStarkStatusBarViewControllerDelegate, SBCarDisplaySceneManagerDelegate> {

	SBStarkSessionConfiguration* _configuration;
	FBSDisplay* _fbsDisplay;
	UIScreen* _screen;
	SBCarDisplaySceneManager* _sceneManager;
	SBCarDisplaySettings* _settings;
	id<SBDisplay> _actualTopDisplay;
	id<SBDisplay> _effectiveTopDisplay;
	NSMutableOrderedSet* _alertSheets;
	NSMapTable* _alertSheetsToWindowMap;
	NSHashTable* _observers;
	int _screenState;
	int _lockOutMode;
	char _delayUpdatingLockOutMode;
	SBStarkLockOutViewController* _lockOutViewController;
	SBStarkLockOutWindow* _lockOutWindow;
	FBDisplayLayoutElement* _lockOutLayoutElement;
	SBStarkAnimationWindow* _animationWindow;
	FBScene* _nowPlayingScene;
	SBStarkNowPlayingController* _nowPlayingController;
	SBStarkNowPlayingWindow* _nowPlayingWindow;
	char _showingNowPlaying;
	SBStarkIconController* _iconController;
	SBStarkIconWindow* _iconWindow;
	SBStarkStatusBarViewController* _statusBarViewController;
	SBStarkStatusBarWindow* _statusBarWindow;
	SBStarkNotificationWindow* _notificationWindow;
	SBAssistantWindow* _siriWindow;
	int _siriState;
	SBAlertManager* _alertManager;
	SBStarkSystemGestureManager* _systemGestureManager;
	id _alertBorrowScreenToken;
	id _siriBorrowScreenToken;
	NSTimer* _alertDismissTimer;
	char _currentlyGatheringLogs;
	SBStarkFileRadarAlertItem* _radarAlertItem;
	SBStarkScreenFocusController* _focusController;
	SBStarkFakeIconOperationController* _fakeIconOperationController;
	AVExternalDevice* _externalDevice;
	char _externalDeviceScreenAvailable;
	FBDisplayLayoutElement* _oemScreenLayoutElement;
	NSMutableSet* _acBackDisabledReasons;
	FBScene* _previouslyFocusedScene;
	SBStarkFocusMovementManager* _focusMovementManager;
	char _dockIsEnabled;
	id<SBStarkScreenControllerDelegate> _delegate;

}

@property (assign,nonatomic,__weak) id<SBStarkScreenControllerDelegate> delegate;                       //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) id<SBStarkSessionConfiguring> sessionConfiguration;                      //@synthesize configuration=_configuration - In the implementation block
@property (nonatomic,readonly) FBSDisplay * fbsDisplay;                                                 //@synthesize fbsDisplay=_fbsDisplay - In the implementation block
@property (nonatomic,readonly) int state; 
@property (nonatomic,readonly) SBAlertManager * alertManager;                                           //@synthesize alertManager=_alertManager - In the implementation block
@property (nonatomic,readonly) SBWindow * animationWindow; 
@property (nonatomic,readonly) UIWindow * focusWindow; 
@property (nonatomic,readonly) SBWindow * iconWindow; 
@property (nonatomic,readonly) SBWindow * lockoutWindow; 
@property (nonatomic,readonly) SBStarkIconController * iconController; 
@property (nonatomic,readonly) SBStarkNotificationViewController * notificationController; 
@property (nonatomic,readonly) SBStarkStatusBarViewController * statusBarController; 
@property (nonatomic,readonly) SBStarkSystemGestureManager * systemGestureManager;                      //@synthesize systemGestureManager=_systemGestureManager - In the implementation block
@property (nonatomic,retain,readonly) id<SBDisplay> actualTopDisplay; 
@property (nonatomic,retain,readonly) id<SBDisplay> effectiveTopDisplay; 
@property (getter=isShowingNowPlaying,nonatomic,readonly) char showNowPlaying;                          //@synthesize showingNowPlaying=_showingNowPlaying - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)_launchNowPlaying;
-(void)handleACHomeUp;
-(UIWindow *)focusWindow;
-(SBAlertManager *)alertManager;
-(id<SBDisplay>)actualTopDisplay;
-(CGRect)sceneFrameForAlerts:(id)arg1 ;
-(float)sceneLevelForAlerts;
-(char)alertManager:(id)arg1 shouldDeactivateDismissedAlert:(id)arg2 ;
-(id)alertManager:(id)arg1 newAlertWindowForScene:(id)arg2 ;
-(void)alertManager:(id)arg1 willActivateAlert:(id)arg2 overAlerts:(id)arg3 ;
-(void)alertManager:(id)arg1 didDeactivateAlert:(id)arg2 top:(char)arg3 ;
-(void)alertManager:(id)arg1 didCreateAlertWindow:(id)arg2 ;
-(void)alertManager:(id)arg1 willTearDownAlertWindow:(id)arg2 ;
-(void)alertBannerSuppressionChanged:(id)arg1 ;
-(void)handleLongBackPress;
-(void)handleEndCallButtonPress;
-(id<SBDisplay>)effectiveTopDisplay;
-(void)updateStatusBarStateForDisplay:(id)arg1 withAnimationFactory:(id)arg2 ;
-(char)isShowingNowPlaying;
-(void)handleUnhandledBack;
-(SBWindow *)animationWindow;
-(SBStarkStatusBarViewController *)statusBarController;
-(SBStarkIconController *)iconController;
-(SBStarkSystemGestureManager *)systemGestureManager;
-(char)iconControllerShouldPersistIconsForFakeApps:(id)arg1 ;
-(id)animationWindowForIconController:(id)arg1 ;
-(void)handleBackPress;
-(void)iconModelDidLayout;
-(void)setEffectiveTopDisplay:(id)arg1 forStarkTrigger:(char)arg2 withAnimationFactory:(id)arg3 ;
-(id)nowPlayingSceneHostManager;
-(void)handleStatusBarBackPress;
-(void)dismissSiriWithAnimation:(int)arg1 factory:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_viewController:(id)arg1 willAnimateAppearanceWithContext:(id)arg2 ;
-(void)_viewController:(id)arg1 animateAppearanceWithContext:(id)arg2 ;
-(void)_viewController:(id)arg1 willAnimateDisappearanceWithContext:(id)arg2 ;
-(void)_viewController:(id)arg1 animateDisappearanceWithContext:(id)arg2 ;
-(char)presentSiri:(char)arg1 viewController:(id)arg2 forBundleIdentifer:(id)arg3 ;
-(id)nowPlayingSnapshot;
-(void)starkWindowDidTriggerUnhandledBack:(id)arg1 ;
-(SBWindow *)iconWindow;
-(void)notifyWhenNowPlayingIsActive:(/*^block*/id)arg1 withTimeout:(double)arg2 ;
-(char)handleAction:(id)arg1 fromScene:(id)arg2 forCarDisplaySceneManager:(id)arg3 ;
-(id)newLayoutControllerForCarDisplaySceneManager:(id)arg1 ;
-(id)sceneWindowLayoutStrategyForCarDisplaySceneManager:(id)arg1 ;
-(void)_updateLockOutMode;
-(void)_alertSheetPresented:(id)arg1 ;
-(void)_alertSheetDismissed:(id)arg1 ;
-(void)_externalDeviceScreenBecameAvailable:(id)arg1 ;
-(void)_tearDownAndInvalidate:(char)arg1 ;
-(void)_didChangeFromState:(int)arg1 ;
-(void)setEffectiveTopDisplay:(id)arg1 actualTopDisplay:(id)arg2 forStarkTrigger:(char)arg3 withAnimationFactory:(id)arg4 ;
-(void)_setACBackEnabled:(char)arg1 forRequester:(id)arg2 ;
-(void)_updateDock;
-(void)_toggleNotificationSuspendedState;
-(void)_toggleNowPlayingVisible:(char)arg1 ;
-(void)_takeScreenIfNecessaryForTopDisplayActivation;
-(void)_handleMenuEventAndTakeScreen:(char)arg1 ;
-(void)_handleSuspendTopMost;
-(void)_setSiriState:(int)arg1 ;
-(void)_dismissSiriWithFactory:(id)arg1 animations:(/*^block*/id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_hideWindowsForSetup:(char)arg1 ;
-(CGRect)_defaultScreenFrameOffsetForStatusBar:(id)arg1 ;
-(char)_scrollToFirstIconPageIfPossible;
-(void)_updateAlertSheetFocus;
-(void)_dismissAlertItemAfterDelay:(id)arg1 ;
-(id)_newNowPlayingScene;
-(void)_createFakeIconOperationController;
-(char)_allowInCallOverrideStyle;
-(char)_allowNavigationOverrideStyle;
-(void)_collectCarPlayDiagnostics;
-(char)_isStatusBarScene:(id)arg1 ;
-(char)_isACBackEnabled;
-(void)handleFocusMovementAction:(id)arg1 fromScene:(id)arg2 ;
-(SBWindow *)lockoutWindow;
-(void)setNowPlayingForWorkspaceApplication:(id)arg1 ;
-(void)handleUncompletedAppLaunchWithStarkTrigger:(char)arg1 ;
-(void)cleanupForTopDisplayIfNecessaryWithAnimationFactory:(id)arg1 ;
-(void)_noteInitializationCompleted;
-(void)_noteConnectSetupCompleted;
-(id)init;
-(void)invalidate;
-(void)setDelegate:(id<SBStarkScreenControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<SBStarkScreenControllerDelegate>)delegate;
-(int)state;
-(void)addObserver:(id)arg1 ;
-(FBSDisplay *)fbsDisplay;
-(int)statusBar:(id)arg1 styleForRequestedStyle:(int)arg2 overrides:(int)arg3 ;
-(void)statusBar:(id)arg1 willAnimateFromHeight:(float)arg2 toHeight:(float)arg3 duration:(double)arg4 animation:(int)arg5 ;
-(void)statusBar:(id)arg1 didAnimateFromHeight:(float)arg2 toHeight:(float)arg3 animation:(int)arg4 ;
-(void)removeObserver:(id)arg1 ;
-(void)settings:(id)arg1 changedValueForKey:(id)arg2 ;
-(id)initWithConfiguration:(id)arg1 ;
-(void)statusBar:(id)arg1 didTriggerButtonType:(int)arg2 withAction:(int)arg3 context:(id)arg4 ;
-(void)iOSUIRequestedForApplicationURL:(id)arg1 ;
-(void)siriRequestedWithAction:(int)arg1 ;
-(void)_updateVehicleInfo;
-(void)sceneLayerManagerWillStartTrackingLayers:(id)arg1 ;
-(void)sceneLayerManagerDidStopTrackingLayers:(id)arg1 ;
-(id<SBStarkSessionConfiguring>)sessionConfiguration;
-(void)_externalDeviceScreenBecameUnavailable:(id)arg1 ;
-(SBStarkNotificationViewController *)notificationController;
@end

