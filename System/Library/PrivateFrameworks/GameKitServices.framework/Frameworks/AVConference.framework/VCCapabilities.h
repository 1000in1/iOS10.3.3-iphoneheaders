/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:50 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSCoding.h>

@interface VCCapabilities : NSObject <NSCoding> {

	char isAudioEnabled;
	char isAudioPausedToStart;
	char isVideoEnabled;
	char isVideoPausedToStart;
	char isVideoSourceScreen;
	char isDuplexAudioOnly;
	char isDuplexVideoOnly;
	char isKeyExchangeEnabled;
	char isRelayEnabled;
	char isRelayForced;
	char requiresWifi;
	char isDTLSEnabled;
	unsigned preferredAudioCodec;
	unsigned actualAudioCodec;
	unsigned preferredVideoCodec;
	unsigned actualVideoCodec;
	int deviceRole;

}

@property (assign) char isAudioEnabled; 
@property (assign) char isAudioPausedToStart; 
@property (assign) char isVideoEnabled; 
@property (assign) char isVideoPausedToStart; 
@property (assign) char isVideoSourceScreen; 
@property (assign) char isDuplexVideoOnly; 
@property (assign) char isDuplexAudioOnly; 
@property (assign) char isKeyExchangeEnabled; 
@property (assign) char isRelayEnabled; 
@property (assign) char isRelayForced; 
@property (assign) char requiresWifi; 
@property (assign) char isDTLSEnabled; 
@property (assign) unsigned preferredAudioCodec; 
@property (assign) unsigned actualAudioCodec; 
@property (assign) unsigned preferredVideoCodec; 
@property (assign) unsigned actualVideoCodec; 
@property (assign) int deviceRole; 
+(id)DataOnlyVCCapabilities;
+(id)AudioOnlyVCCapabilities;
+(id)VideoOnlyVCCapabilities;
+(id)screenSharingVCCapabilities;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(id)description;
-(char)isVideoEnabled;
-(char)isAudioEnabled;
-(id)newEncodedDictionary;
-(char)isAudioPausedToStart;
-(char)isVideoPausedToStart;
-(char)requiresWifi;
-(void)setRequiresWifi:(char)arg1 ;
-(id)initWithEncodedDictionary:(id)arg1 ;
-(int)deviceRole;
-(void)setDeviceRole:(int)arg1 ;
-(unsigned)preferredAudioCodec;
-(char)isDuplexAudioOnly;
-(void)setPreferredAudioCodec:(unsigned)arg1 ;
-(unsigned)actualAudioCodec;
-(void)setActualAudioCodec:(unsigned)arg1 ;
-(unsigned)preferredVideoCodec;
-(void)setPreferredVideoCodec:(unsigned)arg1 ;
-(unsigned)actualVideoCodec;
-(void)setActualVideoCodec:(unsigned)arg1 ;
-(char)isDTLSEnabled;
-(char)isKeyExchangeEnabled;
-(char)isRelayForced;
-(void)setIsDTLSEnabled:(char)arg1 ;
-(char)isDuplexVideoOnly;
-(void)setIsAudioEnabled:(char)arg1 ;
-(void)setIsVideoEnabled:(char)arg1 ;
-(void)setIsDuplexAudioOnly:(char)arg1 ;
-(void)setIsDuplexVideoOnly:(char)arg1 ;
-(void)setIsVideoPausedToStart:(char)arg1 ;
-(void)setIsVideoSourceScreen:(char)arg1 ;
-(void)decodeFromNSDictionary:(id)arg1 ;
-(char)isVideoSourceScreen;
-(void)setIsKeyExchangeEnabled:(char)arg1 ;
-(void)setIsAudioPausedToStart:(char)arg1 ;
-(void)setIsRelayEnabled:(char)arg1 ;
-(void)setIsRelayForced:(char)arg1 ;
-(char)isRelayEnabled;
@end

