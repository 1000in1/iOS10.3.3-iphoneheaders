/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:51 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/VCMediaStreamDelegate.h>

@protocol AVCAudioStreamDelegate;
@class AVConferenceXPCClient, VCAudioStream, AVCMediaStreamConfig, NSDictionary, NSString;

@interface AVCAudioStream : NSObject <VCMediaStreamDelegate> {

	AVConferenceXPCClient* _connection;
	id<AVCAudioStreamDelegate> _delegate;
	VCAudioStream* _opaqueStream;
	AVCMediaStreamConfig* _configuration;
	NSDictionary* _capabilities;

}

@property (nonatomic,retain) NSDictionary * capabilities;                                                              //@synthesize capabilities=_capabilities - In the implementation block
@property (nonatomic,retain) AVCMediaStreamConfig * configuration;                                                     //@synthesize configuration=_configuration - In the implementation block
@property (assign,nonatomic) int direction; 
@property (assign,getter=isRTCPEnabled,nonatomic) char rtcpEnabled; 
@property (assign,getter=isRTPTimeOutEnabled,nonatomic) char rtpTimeOutEnabled; 
@property (assign,getter=isRTCPTimeOutEnabled,nonatomic) char rtcpTimeOutEnabled; 
@property (assign,nonatomic) double rtpTimeOutIntervalSec; 
@property (assign,nonatomic) double rtcpTimeOutIntervalSec; 
@property (assign,nonatomic) double rtcpSendIntervalSec; 
@property (assign,getter=isInputFrequencyMeteringEnabled,nonatomic) char inputFrequencyMeteringEnabled; 
@property (assign,getter=isOutputFrequencyMeteringEnabled,nonatomic) char outputFrequencyMeteringEnabled; 
@property (assign,nonatomic) id<AVCAudioStreamDelegate> delegate;                                                      //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)capabilities;
-(void)setDelegate:(id<AVCAudioStreamDelegate>)arg1 ;
-(void)dealloc;
-(id<AVCAudioStreamDelegate>)delegate;
-(void)stop;
-(void)setDirection:(int)arg1 ;
-(int)direction;
-(void)start;
-(void)setConfiguration:(AVCMediaStreamConfig *)arg1 ;
-(void)resume;
-(AVCMediaStreamConfig *)configuration;
-(void)pause;
-(void)refreshLoggingParameters;
-(char)isInputFrequencyMeteringEnabled;
-(void)setInputFrequencyMeteringEnabled:(char)arg1 ;
-(char)isOutputFrequencyMeteringEnabled;
-(void)setOutputFrequencyMeteringEnabled:(char)arg1 ;
-(void)vcMediaStream:(id)arg1 didReceiveRTCPPackets:(id)arg2 ;
-(void)vcMediaStreamDidRTPTimeOut:(id)arg1 ;
-(void)vcMediaStreamDidRTCPTimeOut:(id)arg1 ;
-(void)vcMediaStream:(id)arg1 updateFrequencyLevel:(id)arg2 isInputMeter:(char)arg3 ;
-(void)vcMediaStream:(id)arg1 didStartStream:(char)arg2 error:(id)arg3 ;
-(void)vcMediaStreamDidStop:(id)arg1 ;
-(void)vcMediaStream:(id)arg1 didResumeStream:(char)arg2 error:(id)arg3 ;
-(void)vcMediaStream:(id)arg1 didPauseStream:(char)arg2 error:(id)arg3 ;
-(void)vcMediaStream:(id)arg1 didReceiveDTMFEventWithDigit:(char)arg2 ;
-(id)initWithLocalAddress:(id)arg1 networkSockets:(id)arg2 IDSDestination:(id)arg3 isOriginator:(char)arg4 callID:(id)arg5 error:(id*)arg6 ;
-(void)registerBlocksForDelegateNotifications;
-(void)deregisterBlocksForDelegateNotifications;
-(void)terminateSession;
-(void)vcMediaStream:(id)arg1 updateInputFrequencyLevel:(id)arg2 ;
-(void)vcMediaStream:(id)arg1 updateOutputFrequencyLevel:(id)arg2 ;
-(id)initWithLocalAddress:(id)arg1 error:(id*)arg2 ;
-(id)initWithLocalAddress:(id)arg1 callID:(id)arg2 error:(id*)arg3 ;
-(id)initWithLocalAddress:(id)arg1 isOriginator:(char)arg2 error:(id*)arg3 ;
-(id)initWithLocalAddress:(id)arg1 isOriginator:(char)arg2 callID:(id)arg3 error:(id*)arg4 ;
-(id)initWithNetworkSockets:(id)arg1 isOriginator:(char)arg2 callID:(id)arg3 error:(id*)arg4 ;
-(id)initWithIDSDestination:(id)arg1 isOriginator:(char)arg2 error:(id*)arg3 ;
-(void)sendDTMFDigitString:(id)arg1 withVolume:(unsigned char)arg2 duration:(unsigned short)arg3 interval:(unsigned short)arg4 ;
-(void)startContinuousDTMFWithDigit:(char)arg1 volume:(unsigned char)arg2 ;
-(void)stopContinuousDTMF;
-(NSDictionary *)capabilities;
-(void)setCapabilities:(NSDictionary *)arg1 ;
-(char)configure:(id)arg1 error:(id*)arg2 ;
-(void)setRtcpEnabled:(char)arg1 ;
-(char)isRTCPEnabled;
-(void)setRtpTimeOutEnabled:(char)arg1 ;
-(char)isRTPTimeOutEnabled;
-(void)setRtcpTimeOutEnabled:(char)arg1 ;
-(char)isRTCPTimeOutEnabled;
-(void)setRtpTimeOutIntervalSec:(double)arg1 ;
-(double)rtpTimeOutIntervalSec;
-(void)setRtcpTimeOutIntervalSec:(double)arg1 ;
-(double)rtcpTimeOutIntervalSec;
-(void)setRtcpSendIntervalSec:(double)arg1 ;
-(double)rtcpSendIntervalSec;
-(void)startSynchronizeWithStream:(int)arg1 ;
-(id)initWithIDSDestination:(id)arg1 isOriginator:(char)arg2 callID:(id)arg3 error:(id*)arg4 ;
-(id)initWithNetworkSockets:(id)arg1 isOriginator:(char)arg2 error:(id*)arg3 ;
@end

