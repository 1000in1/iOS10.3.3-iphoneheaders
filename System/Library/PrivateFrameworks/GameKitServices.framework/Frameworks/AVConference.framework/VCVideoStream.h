/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:51 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <libobjc.A.dylib/VCMediaStreamProtocol.h>
#import <libobjc.A.dylib/VCVideoStreamReceiverDelegate.h>
#import <libobjc.A.dylib/VCMediaStreamSyncDestination.h>

@protocol OS_dispatch_queue, OS_dispatch_source, VCMediaStreamDelegate;
@class NSObject, NSString, VCImageQueue, AVCMediaStreamConfig, VCVideoStreamTransmitter, VCVideoStreamReceiver;

@interface VCVideoStream : NSObject <VCMediaStreamProtocol, VCVideoStreamReceiverDelegate, VCMediaStreamSyncDestination> {

	NSObject*<OS_dispatch_queue> _delegateNotificationQueue;
	NSObject*<OS_dispatch_queue> _lastDecodedFrameQueue;
	NSObject*<OS_dispatch_source> _rtcpSendHeartBeat;
	int _state;
	char _isSRTPInitialized;
	NSString* _callID;
	NSString* _idsDestination;
	opaque_pthread_mutex_t _streamLock;
	opaque_pthread_mutex_t _remoteLayerLock;
	opaque_pthread_mutex_t _localLayerLock;
	opaque_pthread_rwlock_t _stateLock;
	tagHANDLE* _videoRTP;
	double _rtpTimeoutEnabledTime;
	double _rtcpTimeoutEnabledTime;
	double _lastRTPTimeoutReportTime;
	double _lastRTCPTimeoutReportTime;
	unsigned _uplinkOperatingBitrate;
	CVBufferRef _cachedRemoteVideoFrame;
	VCImageQueue* _remoteQueue;
	id<VCMediaStreamDelegate> _delegate;
	int _streamToken;
	char _isValid;
	AVCMediaStreamConfig* _streamConfig;
	VCVideoStreamTransmitter* _videoTransmitter;
	VCVideoStreamReceiver* _videoReceiver;
	unsigned datagramChannelToken;
	opaqueRTCReportingRef _reportingAgent;

}

@property (assign,nonatomic) int state;                                        //@synthesize state=_state - In the implementation block
@property (assign,nonatomic) id<VCMediaStreamDelegate> delegate;               //@synthesize delegate=_delegate - In the implementation block
@property (readonly) int streamToken;                                          //@synthesize streamToken=_streamToken - In the implementation block
@property (assign) char isValid;                                               //@synthesize isValid=_isValid - In the implementation block
@property (nonatomic,retain) AVCMediaStreamConfig * streamConfig;              //@synthesize streamConfig=_streamConfig - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)isSameSRTPKey:(id)arg1 newKey:(id)arg2 ;
+(id)supportedVideoPayloads;
+(id)capabilities;
-(id)init;
-(void)setDelegate:(id<VCMediaStreamDelegate>)arg1 ;
-(void)dealloc;
-(id<VCMediaStreamDelegate>)delegate;
-(int)state;
-(void)setState:(int)arg1 ;
-(char)isValid;
-(void)stop;
-(void)lock;
-(void)unlock;
-(void)start;
-(void)reportingVideoStreamEvent:(unsigned short)arg1 ;
-(void)checkPacketTimeouts;
-(AVCMediaStreamConfig *)streamConfig;
-(int)getSRTPMasterKeyLength:(int)arg1 ;
-(long)getCryptoSet:(tagSRTPExchangeInfo*)arg1 withMasterKey:(id)arg2 ;
-(int)SRTPCipherSuiteForLTECipherSuite:(int)arg1 ;
-(id)setupRTPWithSockets:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithLocalParticipantInfo:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithIDSDestination:(id)arg1 error:(id*)arg2 ;
-(id)setupRTPWithIPInfo:(id)arg1 error:(id*)arg2 ;
-(char)isSameSRTPConfig:(id)arg1 ;
-(void)setStreamConfig:(AVCMediaStreamConfig *)arg1 ;
-(void)setupRTPPayloads;
-(char)setRTPPayloads:(int*)arg1 numPayloads:(int)arg2 withError:(id*)arg3 ;
-(void)setIsValid:(char)arg1 ;
-(char)setStreamConfig:(id)arg1 withError:(id*)arg2 ;
-(void)setPause:(char)arg1 ;
-(id)setLocalParticipantInfo:(id)arg1 networkSockets:(id)arg2 withError:(id*)arg3 ;
-(void)setStreamDirection:(int)arg1 ;
-(int)streamDirection;
-(void)reportRTCPPackets:(tagRTCPPACKET*)arg1 withCount:(int)arg2 ;
-(char)startSynchronization:(id)arg1 ;
-(void)stopSynchronization;
-(void)updateVideoConfig:(id)arg1 ;
-(void)vcVideoStreamReceiver:(id)arg1 downlinkQualityDidChange:(id)arg2 ;
-(unsigned)vcVideoStreamReceiver:(id)arg1 receivedTMMBR:(unsigned)arg2 ;
-(void)vcVideoStreamReceiverRequestKeyFrame:(id)arg1 ;
-(char)vcVideoStreamReceiver:(id)arg1 didReceiveRemoteFrame:(CVBufferRef)arg2 atTime:(SCD_Struct_VC21)arg3 newVideoAttributes:(id)arg4 isFirstFrame:(char)arg5 ;
-(void)overrideConfigWithDefaults;
-(long)setupSRTP:(tagHANDLE*)arg1 forVideo:(char)arg2 ;
-(void)resetRtcpSendHeartBeatTimer:(unsigned long long)arg1 ;
-(void)destroyVideoTransmitter;
-(void)destroyVideoReceiver;
-(unsigned long)generateStreamToken;
-(char)configureVideoStreamWithConfiguration:(id)arg1 error:(id*)arg2 ;
-(void)cacheRemoteVideoFrame:(CVBufferRef)arg1 ;
-(void)destroyVideoModules;
-(void)updateVideoReceiver:(id)arg1 ;
-(void)initVideoTransmitter:(id)arg1 ;
-(void)startRtcpSendHeartBeat;
-(void)stopRtcpSendHeartBeat;
-(void)sendLastRemoteVideoFrame:(CVBufferRef)arg1 ;
-(void)collectVideoConfigMetrics:(CFDictionaryRef)arg1 ;
-(void)collectVideoStreamStartMetrics:(CFDictionaryRef)arg1 ;
-(int)streamToken;
-(void)requestLastDecodedFrame;
-(void)setRtcpEnabled:(char)arg1 ;
-(void)setRtpTimeOutEnabled:(char)arg1 ;
-(void)setRtcpTimeOutEnabled:(char)arg1 ;
-(void)setRtcpSendInterval:(double)arg1 ;
-(void)setRtcpTimeOutInterval:(double)arg1 ;
-(void)setRtpTimeOutInterval:(double)arg1 ;
@end

