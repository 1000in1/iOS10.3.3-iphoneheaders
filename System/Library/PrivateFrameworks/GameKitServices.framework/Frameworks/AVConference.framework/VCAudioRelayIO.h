/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:49 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AVConference/AVConference-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>

@interface VCAudioRelayIO : NSObject <NSCopying> {

	char _usePacketThread;
	PacketThread_sRef _packetThread;
	char _isRunning;
	unsigned long _micTimestamp;
	AudioStreamBasicDescription _micFormat;
	/*function pointer*/void* _micCallback;
	void* _micCallbackContext;
	unsigned long _speakerTimestamp;
	AudioStreamBasicDescription _speakerFormat;
	/*function pointer*/void* _speakerCallback;
	void* _speakerCallbackContext;
	float _micPowerRMS;
	float _speakerPowerRMS;
	/*^block*/id _startCompletionHandler;

}

@property (assign) unsigned long speakerTimestamp;                         //@synthesize speakerTimestamp=_speakerTimestamp - In the implementation block
@property (assign) unsigned long micTimestamp;                             //@synthesize micTimestamp=_micTimestamp - In the implementation block
@property (readonly) PacketThread_sRef packetThread;                       //@synthesize packetThread=_packetThread - In the implementation block
@property (assign) float micPowerRMS;                                      //@synthesize micPowerRMS=_micPowerRMS - In the implementation block
@property (assign) float speakerPowerRMS;                                  //@synthesize speakerPowerRMS=_speakerPowerRMS - In the implementation block
@property (nonatomic,readonly) char isRunning;                             //@synthesize isRunning=_isRunning - In the implementation block
@property (assign) char usePacketThread;                                   //@synthesize usePacketThread=_usePacketThread - In the implementation block
@property (copy) id startCompletionHandler;                                //@synthesize startCompletionHandler=_startCompletionHandler - In the implementation block
@property (assign) AudioStreamBasicDescription micFormat;                  //@synthesize micFormat=_micFormat - In the implementation block
@property (assign) /*function pointer*/void* micCallback;                  //@synthesize micCallback=_micCallback - In the implementation block
@property (assign) void* micCallbackContext;                               //@synthesize micCallbackContext=_micCallbackContext - In the implementation block
@property (assign) AudioStreamBasicDescription speakerFormat;              //@synthesize speakerFormat=_speakerFormat - In the implementation block
@property (assign) /*function pointer*/void* speakerCallback;              //@synthesize speakerCallback=_speakerCallback - In the implementation block
@property (assign) void* speakerCallbackContext;                           //@synthesize speakerCallbackContext=_speakerCallbackContext - In the implementation block
-(char)isInitialized;
-(void)dealloc;
-(id)copyWithZone:(NSZone*)arg1 ;
-(char)isRunning;
-(/*function pointer*/void*)micCallback;
-(/*function pointer*/void*)speakerCallback;
-(void)setUsePacketThread:(char)arg1 ;
-(void)setStartCompletionHandler:(id)arg1 ;
-(void)setMicFormat:(AudioStreamBasicDescription)arg1 ;
-(void)setMicCallback:(/*function pointer*/void*)arg1 ;
-(void)setMicCallbackContext:(void*)arg1 ;
-(void)setSpeakerFormat:(AudioStreamBasicDescription)arg1 ;
-(void)setSpeakerCallback:(/*function pointer*/void*)arg1 ;
-(void)setSpeakerCallbackContext:(void*)arg1 ;
-(AudioStreamBasicDescription)micFormat;
-(AudioStreamBasicDescription)speakerFormat;
-(char)usePacketThread;
-(void*)micCallbackContext;
-(void*)speakerCallbackContext;
-(void)destroyPacketThread;
-(void)closeRecordings;
-(char)isEqualToRelayIO:(id)arg1 ;
-(char)createPacketThreadWithIOBufferDuration:(float)arg1 name:(id)arg2 error:(id*)arg3 ;
-(void)createRecordingsWithName:(id)arg1 ;
-(void)printStreamFormats;
-(unsigned long)speakerTimestamp;
-(void)setSpeakerTimestamp:(unsigned long)arg1 ;
-(unsigned long)micTimestamp;
-(void)setMicTimestamp:(unsigned long)arg1 ;
-(id)startCompletionHandler;
-(PacketThread_sRef)packetThread;
-(float)micPowerRMS;
-(void)setMicPowerRMS:(float)arg1 ;
-(float)speakerPowerRMS;
-(void)setSpeakerPowerRMS:(float)arg1 ;
@end

