/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:51 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/GameKitServices.framework/Frameworks/AVConference.framework/AVConference
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AVConference/AVConference-Structs.h>
@interface VCPacketBundler : NSObject {

	char* _buffer;
	unsigned _bufferSize;
	unsigned _maxPacketSize;
	opaque_pthread_mutex_t _mutex;
	unsigned _packetsPerBundle;
	int _payload;
	unsigned _timestamp;
	unsigned _encodedBufferSize;
	unsigned _accessUnitDataSectionSize;
	unsigned _bundledPackets;
	tagAccessUnitHeaderInfo _accessUnitHeaderInfo;
	char _useRFC3640;
	char _allowLargePackets;
	char _isFull;

}

@property (assign,nonatomic) unsigned maxPacketSize; 
@property (assign,nonatomic) char allowLargePackets;                    //@synthesize allowLargePackets=_allowLargePackets - In the implementation block
@property (assign,nonatomic) char useRFC3640;                           //@synthesize useRFC3640=_useRFC3640 - In the implementation block
@property (assign,nonatomic) int payload;                               //@synthesize payload=_payload - In the implementation block
@property (assign,nonatomic) unsigned timestamp;                        //@synthesize timestamp=_timestamp - In the implementation block
@property (nonatomic,readonly) unsigned packetsPerBundle; 
@property (nonatomic,readonly) char* encodedBuffer; 
@property (nonatomic,readonly) unsigned encodedBufferSize; 
@property (nonatomic,readonly) unsigned bundledPackets;                 //@synthesize bundledPackets=_bundledPackets - In the implementation block
@property (nonatomic,readonly) char isFull;                             //@synthesize isFull=_isFull - In the implementation block
-(id)init;
-(void)dealloc;
-(unsigned)timestamp;
-(int)payload;
-(void)setTimestamp:(unsigned)arg1 ;
-(void)lock;
-(void)unlock;
-(void)setPayload:(int)arg1 ;
-(char)isFull;
-(char)allocateBundleBuffer:(unsigned)arg1 ;
-(unsigned)bundledPackets;
-(char*)encodedBuffer;
-(unsigned)encodedBufferSize;
-(void)resetBuffer;
-(char)bundleAudio:(void*)arg1 numInputBytes:(unsigned)arg2 packetPayload:(id)arg3 timestamp:(unsigned)arg4 ;
-(void)setUseRFC3640:(char)arg1 ;
-(char)setPacketsPerBundle:(unsigned)arg1 ;
-(unsigned)packetsPerBundle;
-(unsigned)maxPacketSize;
-(void)setAllowLargePackets:(char)arg1 ;
-(void)setMaxPacketSize:(unsigned)arg1 ;
-(void)initLock;
-(char)reallocateBufferWithMaxPacketSize:(unsigned)arg1 maxPacketCount:(unsigned)arg2 ;
-(void)releaseBundleBuffer;
-(unsigned)bundleBufferSizeWidthMaxPacketSize:(unsigned)arg1 maxPacketCount:(unsigned)arg2 ;
-(char*)encodedBufferForRFC3640;
-(unsigned)encodedBufferSizeForRFC3640;
-(unsigned)accessUnitHeaderSectionSize;
-(char*)accessUnitDataSectionHead;
-(unsigned)accessUnitHeaderSectionSizeMaximum;
-(char)bundleAudioRFC3640:(void*)arg1 numInputBytes:(unsigned)arg2 packetPayload:(id)arg3 timestamp:(unsigned)arg4 ;
-(char)bundleAudioLegacy:(void*)arg1 numInputBytes:(unsigned)arg2 packetPayload:(id)arg3 timestamp:(unsigned)arg4 ;
-(char)allowLargePackets;
-(char)useRFC3640;
@end

