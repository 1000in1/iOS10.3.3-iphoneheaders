/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:06 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/Accessibility.framework/Frameworks/AXHearingSupport.framework/AXHearingSupport
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <AXHearingSupport/AXHearingSupport-Structs.h>
#import <libobjc.A.dylib/CBPeripheralDelegate.h>
#import <AXHearingSupport/AXHADeviceProtocol.h>

@class AXHADispatchTimer, NSMutableDictionary, NSString, NSMutableArray, NSArray, AXHearingAidMode, CBPeripheral, NSDate;

@interface AXHearingAidDevice : NSObject <CBPeripheralDelegate, AXHADeviceProtocol> {

	float _leftVolume;
	float _rightVolume;
	float _leftMicrophoneVolume;
	float _rightMicrophoneVolume;
	float _leftStreamVolume;
	float _rightStreamVolume;
	char _leftTreble;
	char _rightTreble;
	char _leftBass;
	char _rightBass;
	char _keepInSync;
	char _finishedLoading;
	long initialLoadToken;
	AXHADispatchTimer* _propertyWriteTimer;
	char _isListeningForStreamingChanges;
	OpaqueIOPSPowerSourceIDRef _leftPowerSouceID;
	OpaqueIOPSPowerSourceIDRef _rightPowerSourceID;
	NSMutableDictionary* _leftPowerSouceDictionary;
	NSMutableDictionary* _rightPowerSourceDictionary;
	char isPaired;
	char isConnecting;
	char isPersistent;
	char _supportsBinauralStreaming;
	char _supportsCombinedPresets;
	char _supportsCombinedVolumes;
	short _leftMicrophoneVolumeSteps;
	short _rightMicrophoneVolumeSteps;
	short _leftStreamVolumeSteps;
	short _rightStreamVolumeSteps;
	short _leftSensitivitySteps;
	short _rightSensitivitySteps;
	short _leftMixedVolumeSteps;
	short _rightMixedVolumeSteps;
	NSString* leftUUID;
	NSString* rightUUID;
	NSString* name;
	NSMutableArray* manufacturer;
	NSMutableArray* model;
	NSString* leftFirmwareVersion;
	NSString* rightFirmwareVersion;
	NSString* leftHardwareVersion;
	NSString* rightHardwareVersion;
	float rightBatteryLevel;
	float leftBatteryLevel;
	NSArray* rightPrograms;
	NSArray* leftPrograms;
	AXHearingAidMode* currentRightProgram;
	AXHearingAidMode* currentLeftProgram;
	AXHearingAidMode* currentLeftStreamingProgram;
	AXHearingAidMode* currentRightStreamingProgram;
	CBPeripheral* leftPeripheral;
	CBPeripheral* rightPeripheral;
	int _availableEars;
	AXHearingAidMode* _leftSelectedProgram;
	AXHearingAidMode* _rightSelectedProgram;
	AXHearingAidMode* _leftSelectedStreamingProgram;
	AXHearingAidMode* _rightSelectedStreamingProgram;
	float _leftSensitivity;
	float _rightSensitivity;
	float _leftMixedVolume;
	float _rightMixedVolume;
	NSMutableDictionary* leftPropertiesLoadCount;
	NSMutableDictionary* rightPropertiesLoadCount;
	NSString* leftPeripheralUUID;
	NSString* rightPeripheralUUID;
	unsigned long leftProgramVersion;
	unsigned long rightProgramVersion;
	NSDate* _leftBatteryLowDate;
	NSDate* _rightBatteryLowDate;
	unsigned long _leftPresetBitmask;
	unsigned long _rightPresetBitmask;
	unsigned long long leftLoadedProperties;
	unsigned long long rightLoadedProperties;
	unsigned long long leftWriteRequestProperties;
	unsigned long long rightWriteRequestProperties;
	unsigned long long _leftWriteResponseProperties;
	unsigned long long _rightWriteResponseProperties;

}

@property (nonatomic,retain) NSString * name; 
@property (nonatomic,retain) NSMutableArray * manufacturer; 
@property (nonatomic,retain) NSMutableArray * model; 
@property (nonatomic,retain) NSString * leftFirmwareVersion; 
@property (nonatomic,retain) NSString * rightFirmwareVersion; 
@property (nonatomic,retain) NSString * leftHardwareVersion; 
@property (nonatomic,retain) NSString * rightHardwareVersion; 
@property (nonatomic,retain) NSString * leftUUID; 
@property (nonatomic,retain) NSString * rightUUID; 
@property (nonatomic,retain) NSString * leftPeripheralUUID; 
@property (nonatomic,retain) NSString * rightPeripheralUUID; 
@property (assign,nonatomic) float rightBatteryLevel; 
@property (assign,nonatomic) float leftBatteryLevel; 
@property (nonatomic,copy) NSArray * rightPrograms; 
@property (nonatomic,copy) NSArray * leftPrograms; 
@property (nonatomic,retain) CBPeripheral * leftPeripheral; 
@property (nonatomic,retain) CBPeripheral * rightPeripheral; 
@property (assign,nonatomic) short leftMicrophoneVolumeSteps;                               //@synthesize leftMicrophoneVolumeSteps=_leftMicrophoneVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightMicrophoneVolumeSteps;                              //@synthesize rightMicrophoneVolumeSteps=_rightMicrophoneVolumeSteps - In the implementation block
@property (assign,nonatomic) short leftStreamVolumeSteps;                                   //@synthesize leftStreamVolumeSteps=_leftStreamVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightStreamVolumeSteps;                                  //@synthesize rightStreamVolumeSteps=_rightStreamVolumeSteps - In the implementation block
@property (assign,nonatomic) short leftSensitivitySteps;                                    //@synthesize leftSensitivitySteps=_leftSensitivitySteps - In the implementation block
@property (assign,nonatomic) short rightSensitivitySteps;                                   //@synthesize rightSensitivitySteps=_rightSensitivitySteps - In the implementation block
@property (assign,nonatomic) short leftMixedVolumeSteps;                                    //@synthesize leftMixedVolumeSteps=_leftMixedVolumeSteps - In the implementation block
@property (assign,nonatomic) short rightMixedVolumeSteps;                                   //@synthesize rightMixedVolumeSteps=_rightMixedVolumeSteps - In the implementation block
@property (assign,nonatomic) char supportsBinauralStreaming;                                //@synthesize supportsBinauralStreaming=_supportsBinauralStreaming - In the implementation block
@property (assign,nonatomic) char supportsCombinedPresets;                                  //@synthesize supportsCombinedPresets=_supportsCombinedPresets - In the implementation block
@property (assign,nonatomic) char supportsCombinedVolumes;                                  //@synthesize supportsCombinedVolumes=_supportsCombinedVolumes - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * currentRightStreamingProgram; 
@property (nonatomic,retain) AXHearingAidMode * currentLeftStreamingProgram; 
@property (nonatomic,retain) AXHearingAidMode * currentRightProgram; 
@property (nonatomic,retain) AXHearingAidMode * currentLeftProgram; 
@property (assign,nonatomic) char isConnecting; 
@property (assign,nonatomic) unsigned long long leftLoadedProperties; 
@property (assign,nonatomic) unsigned long long rightLoadedProperties; 
@property (assign,nonatomic) unsigned long long leftWriteRequestProperties; 
@property (assign,nonatomic) unsigned long long rightWriteRequestProperties; 
@property (assign,nonatomic) unsigned long long leftWriteResponseProperties;                //@synthesize leftWriteResponseProperties=_leftWriteResponseProperties - In the implementation block
@property (assign,nonatomic) unsigned long long rightWriteResponseProperties;               //@synthesize rightWriteResponseProperties=_rightWriteResponseProperties - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * leftPropertiesLoadCount; 
@property (nonatomic,retain) NSMutableDictionary * rightPropertiesLoadCount; 
@property (assign,nonatomic) unsigned long leftProgramVersion; 
@property (assign,nonatomic) unsigned long rightProgramVersion; 
@property (nonatomic,retain) NSDate * leftBatteryLowDate;                                   //@synthesize leftBatteryLowDate=_leftBatteryLowDate - In the implementation block
@property (nonatomic,retain) NSDate * rightBatteryLowDate;                                  //@synthesize rightBatteryLowDate=_rightBatteryLowDate - In the implementation block
@property (assign,nonatomic) unsigned long leftPresetBitmask;                               //@synthesize leftPresetBitmask=_leftPresetBitmask - In the implementation block
@property (assign,nonatomic) unsigned long rightPresetBitmask;                              //@synthesize rightPresetBitmask=_rightPresetBitmask - In the implementation block
@property (assign,nonatomic) char isPaired; 
@property (assign,nonatomic) char keepInSync;                                               //@synthesize keepInSync=_keepInSync - In the implementation block
@property (assign,nonatomic) char isPersistent; 
@property (assign,nonatomic) float rightMicrophoneVolume;                                   //@synthesize rightMicrophoneVolume=_rightMicrophoneVolume - In the implementation block
@property (assign,nonatomic) float leftMicrophoneVolume;                                    //@synthesize leftMicrophoneVolume=_leftMicrophoneVolume - In the implementation block
@property (assign,nonatomic) float rightStreamVolume;                                       //@synthesize rightStreamVolume=_rightStreamVolume - In the implementation block
@property (assign,nonatomic) float leftStreamVolume;                                        //@synthesize leftStreamVolume=_leftStreamVolume - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * leftSelectedProgram;                        //@synthesize leftSelectedProgram=_leftSelectedProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * rightSelectedProgram;                       //@synthesize rightSelectedProgram=_rightSelectedProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * leftSelectedStreamingProgram;               //@synthesize leftSelectedStreamingProgram=_leftSelectedStreamingProgram - In the implementation block
@property (nonatomic,retain) AXHearingAidMode * rightSelectedStreamingProgram;              //@synthesize rightSelectedStreamingProgram=_rightSelectedStreamingProgram - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int availableEars;                                             //@synthesize availableEars=_availableEars - In the implementation block
@property (assign,nonatomic) float rightSensitivity;                                        //@synthesize rightSensitivity=_rightSensitivity - In the implementation block
@property (assign,nonatomic) float leftSensitivity;                                         //@synthesize leftSensitivity=_leftSensitivity - In the implementation block
@property (assign,nonatomic) float rightMixedVolume;                                        //@synthesize rightMixedVolume=_rightMixedVolume - In the implementation block
@property (assign,nonatomic) float leftMixedVolume;                                         //@synthesize leftMixedVolume=_leftMixedVolume - In the implementation block
@property (assign,nonatomic) char rightTreble;                                              //@synthesize rightTreble=_rightTreble - In the implementation block
@property (assign,nonatomic) char leftTreble;                                               //@synthesize leftTreble=_leftTreble - In the implementation block
@property (assign,nonatomic) char rightBass;                                                //@synthesize rightBass=_rightBass - In the implementation block
@property (assign,nonatomic) char leftBass;                                                 //@synthesize leftBass=_leftBass - In the implementation block
@property (nonatomic,retain,readonly) NSString * deviceUUID; 
+(id)characteristicsUUIDs;
-(void)dealloc;
-(NSString *)description;
-(void)setName:(NSString *)arg1 ;
-(NSString *)name;
-(void)_init;
-(char)isPersistent;
-(NSMutableArray *)model;
-(void)connect;
-(id)valueForProperty:(unsigned long long)arg1 ;
-(NSMutableArray *)manufacturer;
-(void)setManufacturer:(NSMutableArray *)arg1 ;
-(char)isConnected;
-(void)setValue:(id)arg1 forProperty:(unsigned long long)arg2 ;
-(char)isConnecting;
-(void)setModel:(NSMutableArray *)arg1 ;
-(char)leftAvailable;
-(char)rightAvailable;
-(float)leftBatteryLevel;
-(float)rightBatteryLevel;
-(void)setLeftPrograms:(NSArray *)arg1 ;
-(void)setRightPrograms:(NSArray *)arg1 ;
-(void)setAvailableEars:(int)arg1 ;
-(void)setLeftPeripheralUUID:(NSString *)arg1 ;
-(void)setLeftUUID:(NSString *)arg1 ;
-(void)setRightUUID:(NSString *)arg1 ;
-(void)setRightPeripheralUUID:(NSString *)arg1 ;
-(NSString *)leftUUID;
-(NSString *)rightUUID;
-(void)setIsPaired:(char)arg1 ;
-(void)setLeftFirmwareVersion:(NSString *)arg1 ;
-(void)setRightFirmwareVersion:(NSString *)arg1 ;
-(void)setLeftHardwareVersion:(NSString *)arg1 ;
-(void)setRightHardwareVersion:(NSString *)arg1 ;
-(void)setLeftSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedProgram:(AXHearingAidMode *)arg1 ;
-(void)setLeftSelectedStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setRightSelectedStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setLeftBatteryLowDate:(NSDate *)arg1 ;
-(void)setRightBatteryLowDate:(NSDate *)arg1 ;
-(int)availableEars;
-(short)leftMixedVolumeSteps;
-(short)rightMixedVolumeSteps;
-(short)leftMicrophoneVolumeSteps;
-(short)rightMicrophoneVolumeSteps;
-(short)leftStreamVolumeSteps;
-(short)rightStreamVolumeSteps;
-(short)leftSensitivitySteps;
-(short)rightSensitivitySteps;
-(NSArray *)leftPrograms;
-(NSArray *)rightPrograms;
-(AXHearingAidMode *)leftSelectedProgram;
-(AXHearingAidMode *)rightSelectedProgram;
-(AXHearingAidMode *)leftSelectedStreamingProgram;
-(AXHearingAidMode *)rightSelectedStreamingProgram;
-(char)supportsCombinedPresets;
-(id)programs;
-(void)_writeAllProgramSelectionsToPeripheral;
-(char)didLoadRequiredProperties;
-(void)loadRequiredProperties;
-(void)setLeftBatteryLevel:(float)arg1 ;
-(void)setRightBatteryLevel:(float)arg1 ;
-(void)setLeftSensitivitySteps:(short)arg1 ;
-(void)setRightSensitivitySteps:(short)arg1 ;
-(void)setLeftMicrophoneVolumeSteps:(short)arg1 ;
-(void)setRightMicrophoneVolumeSteps:(short)arg1 ;
-(void)setLeftStreamVolumeSteps:(short)arg1 ;
-(void)setRightStreamVolumeSteps:(short)arg1 ;
-(void)setLeftMixedVolumeSteps:(short)arg1 ;
-(void)setRightMixedVolumeSteps:(short)arg1 ;
-(void)setSupportsCombinedPresets:(char)arg1 ;
-(void)setSupportsCombinedVolumes:(char)arg1 ;
-(void)setSupportsBinauralStreaming:(char)arg1 ;
-(void)setLeftTreble:(char)arg1 ;
-(void)setRightTreble:(char)arg1 ;
-(void)setLeftBass:(char)arg1 ;
-(void)setRightBass:(char)arg1 ;
-(float)leftMicrophoneVolume;
-(float)rightMicrophoneVolume;
-(float)leftStreamVolume;
-(float)rightStreamVolume;
-(NSString *)leftFirmwareVersion;
-(NSString *)rightFirmwareVersion;
-(NSString *)leftHardwareVersion;
-(NSString *)rightHardwareVersion;
-(NSDate *)leftBatteryLowDate;
-(NSDate *)rightBatteryLowDate;
-(char)isBluetoothPaired;
-(float)leftSensitivity;
-(float)rightSensitivity;
-(float)leftMixedVolume;
-(float)rightMixedVolume;
-(char)supportsCombinedVolumes;
-(char)supportsBinauralStreaming;
-(id)initWithPersistentRepresentation:(id)arg1 ;
-(void)disconnectAndUnpair:(char)arg1 ;
-(char)hasConnection;
-(char)containsPeripheralWithUUID:(id)arg1 ;
-(char)didLoadBasicProperties;
-(void)selectProgram:(id)arg1 forEar:(int)arg2 ;
-(id)selectedPrograms;
-(id)selectedProgramIndexes;
-(char)keepInSync;
-(void)setKeepInSync:(char)arg1 ;
-(NSString *)leftPeripheralUUID;
-(NSString *)rightPeripheralUUID;
-(void)setRightMicrophoneVolume:(float)arg1 ;
-(void)setLeftMicrophoneVolume:(float)arg1 ;
-(void)setRightStreamVolume:(float)arg1 ;
-(void)setLeftStreamVolume:(float)arg1 ;
-(void)setRightSensitivity:(float)arg1 ;
-(void)setLeftSensitivity:(float)arg1 ;
-(void)setRightMixedVolume:(float)arg1 ;
-(void)setLeftMixedVolume:(float)arg1 ;
-(char)rightTreble;
-(char)leftTreble;
-(char)rightBass;
-(char)leftBass;
-(void)setIsConnecting:(char)arg1 ;
-(void)setLeftPropertiesLoadCount:(NSMutableDictionary *)arg1 ;
-(void)setRightPropertiesLoadCount:(NSMutableDictionary *)arg1 ;
-(void)setCurrentLeftProgram:(AXHearingAidMode *)arg1 ;
-(void)setCurrentRightProgram:(AXHearingAidMode *)arg1 ;
-(void)setCurrentLeftStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setCurrentRightStreamingProgram:(AXHearingAidMode *)arg1 ;
-(void)setLeftPeripheral:(CBPeripheral *)arg1 ;
-(void)peripheral:(id)arg1 didUpdateCharacteristic:(id)arg2 ;
-(void)setIsPersistent:(char)arg1 ;
-(CBPeripheral *)leftPeripheral;
-(AXHearingAidMode *)currentLeftProgram;
-(unsigned long long)leftLoadedProperties;
-(void)setLeftLoadedProperties:(unsigned long long)arg1 ;
-(void)setRightPeripheral:(CBPeripheral *)arg1 ;
-(CBPeripheral *)rightPeripheral;
-(AXHearingAidMode *)currentRightProgram;
-(unsigned long long)rightLoadedProperties;
-(void)setRightLoadedProperties:(unsigned long long)arg1 ;
-(AXHearingAidMode *)currentRightStreamingProgram;
-(AXHearingAidMode *)currentLeftStreamingProgram;
-(NSMutableDictionary *)rightPropertiesLoadCount;
-(NSMutableDictionary *)leftPropertiesLoadCount;
-(id)persistentRepresentation;
-(void)setNotify:(char)arg1 forPeripheral:(id)arg2 ;
-(void)loadProperties:(unsigned long long)arg1 forPeripheral:(id)arg2 withRetryPeriod:(float)arg3 ;
-(void)loadBasicProperties;
-(char)peripheral:(id)arg1 didLoadProperty:(unsigned long long)arg2 ;
-(id)peripheral:(id)arg1 characteristicForProperty:(unsigned long long)arg2 ;
-(unsigned long long)peripheral:(id)arg1 propertyForCharacteristic:(id)arg2 ;
-(void)loadFailedProperties;
-(void)readValueForCharacteristic:(id)arg1 fromPeripheral:(id)arg2 ;
-(unsigned char)volumeValueForProperty:(unsigned long long)arg1 andPeripheral:(id)arg2 ;
-(void)writeInt:(unsigned char)arg1 toEar:(int)arg2 forProperty:(unsigned long long)arg3 ;
-(char)signedValueForProperty:(unsigned long long)arg1 andPeripheral:(id)arg2 ;
-(void)writeSignedInt:(char)arg1 toEar:(int)arg2 forProperty:(unsigned long long)arg3 ;
-(void)_sendDelayedWrites;
-(unsigned long long)leftWriteResponseProperties;
-(void)setLeftWriteResponseProperties:(unsigned long long)arg1 ;
-(unsigned long long)rightWriteResponseProperties;
-(void)setRightWriteResponseProperties:(unsigned long long)arg1 ;
-(void)delayWriteProperty:(unsigned long long)arg1 forPeripheral:(id)arg2 ;
-(void)setMixedVolume:(float)arg1 forLeft:(char)arg2 ;
-(char)deviceSupportsProperty:(unsigned long long)arg1 ;
-(void)setTreble:(char)arg1 forLeft:(char)arg2 ;
-(void)setBass:(char)arg1 forLeft:(char)arg2 ;
-(unsigned long long)availablePropertiesForPeripheral:(id)arg1 ;
-(void)updateBatteryServiceForPeripheral:(id)arg1 ;
-(void)mateWithDevice:(id)arg1 ;
-(unsigned long)rightPresetBitmask;
-(unsigned long)leftPresetBitmask;
-(void)setRightPresetBitmask:(unsigned long)arg1 ;
-(void)readProperty:(unsigned long long)arg1 fromPeripheral:(id)arg2 ;
-(void)setLeftPresetBitmask:(unsigned long)arg1 ;
-(unsigned long)rightProgramVersion;
-(unsigned long)leftProgramVersion;
-(id)peripheral:(id)arg1 characteristicForUUID:(id)arg2 ;
-(void)pairingDidCompleteForPeripheral:(id)arg1 ;
-(id)initWithPeripheral:(id)arg1 ;
-(id)initWithLeftDevice:(id)arg1 andRightDevice:(id)arg2 ;
-(void)connectionDidChange;
-(char)didLoadPersistentProperties;
-(int)connectedEars;
-(id)deviceDescription;
-(void)peripheral:(id)arg1 didInvalidateServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didFinishPairingWithResult:(id)arg2 ;
-(void)peripheralDidUnpair:(id)arg1 ;
-(char)addPeripheral:(id)arg1 ;
-(unsigned long long)leftWriteRequestProperties;
-(void)setLeftWriteRequestProperties:(unsigned long long)arg1 ;
-(unsigned long long)rightWriteRequestProperties;
-(void)setRightWriteRequestProperties:(unsigned long long)arg1 ;
-(void)setLeftProgramVersion:(unsigned long)arg1 ;
-(void)setRightProgramVersion:(unsigned long)arg1 ;
-(void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(void)peripheralDidUpdateName:(id)arg1 ;
-(void)peripheral:(id)arg1 didModifyServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didDiscoverServices:(id)arg2 ;
-(void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3 ;
-(void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3 ;
-(NSString *)deviceUUID;
-(char)isPaired;
-(void)updateName;
@end

