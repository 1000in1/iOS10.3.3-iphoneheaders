/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:59 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <identityservicesd/_IDSSessionConnectionDelegate.h>
#import <identityservicesd/IDSSocketPairConnectionDelegate.h>
#import <identityservicesd/IDSBaseSocketPairConnectionDelegate.h>

@protocol OS_dispatch_queue;
@class NSString, NSSet, NSObject, IDSBaseSocketPairConnection, _IDSSessionConnection, NSData, APSConnection, NSUUID, NSDate, IMTimer, NSError, NSNumber, NSMutableDictionary, IDSClientChannel, NSMutableArray;

@interface IDSDSession : NSObject <_IDSSessionConnectionDelegate, IDSSocketPairConnectionDelegate, IDSBaseSocketPairConnectionDelegate> {

	NSString* _uniqueID;
	NSString* _participantID;
	NSString* _accountID;
	NSSet* _destinations;
	NSSet* _inviteDestinations;
	NSObject*<OS_dispatch_queue> _connectionQueue;
	IDSBaseSocketPairConnection* _baseSocketPairConnection;
	_IDSSessionConnection* _connection;
	NSData* _localBlob;
	NSData* _remoteBlob;
	APSConnection* _apsConnection;
	NSString* _serviceName;
	NSString* _clientID;
	NSData* _quickRelaySessionToken;
	NSString* _fromID;
	NSUUID* _clientUUID;
	int _clientType;
	NSDate* _startConnectingDate;
	NSDate* _startDate;
	NSDate* _endDate;
	double _lastPacketTime;
	IMTimer* _packetLossTimer;
	IMTimer* _inviteTimer;
	IMTimer* _connectionTimer;
	IMTimer* _endSessionTimer;
	AB _inviteTimerCleared;
	AB _connectionTimerCleared;
	AB _endSessionTimerCleared;
	NSError* _error;
	int _transportType;
	unsigned _connectionCountHint;
	double _inviteTimeout;
	double _connectionTimeout;
	double _endSessionTimeout;
	unsigned _state;
	unsigned _reason;
	unsigned char _keyMaterial[60];
	SCD_Struct_ID18* _encryptionState;
	unsigned _SSRCSend;
	unsigned _SSRCRecv;
	unsigned short _seqSendStart;
	unsigned short _seqSend;
	unsigned short _seqRecvStart;
	unsigned _peerProtocolVersion;
	char _isLegacy;
	double _inviteSentTime;
	double _inviteRecvTime;
	char _shouldAssertRealTimeMode;
	char _assertedRealTimeMode;
	char _isInitiator;
	char _encryptionInitialized;
	char _enableQuickRelay;
	unsigned _preferredAddressFamily;
	char _hasCompletedNetworkAvailabilityCheck;
	unsigned _networkAvailabilityFlags;
	NSNumber* _remoteUseCloudPairedControlChannel;
	int _socketDescriptor;
	NSMutableDictionary* _extraConnections;
	unsigned _extraConnectionCount;
	unsigned _connectionClaimed;
	char _verboseFunctionalLogging;
	char _verbosePerformanceLogging;
	char _useQRDirectly;
	IDSClientChannel* _clientChannel;
	char _sessionStartedCalled;
	char _enableSKE;
	NSData* _skeData;
	char _disallowCellularInterface;
	char _disallowWifiInterface;
	char _preferCellularForCallSetup;
	char _disableEncryption;
	char _enableSingleChannelDirectMode;
	NSMutableArray* _cachedClientData;
	int _linkProtocol;
	unsigned short _relayPort;
	char _alwaysSkipSelf;
	char _useStunMICheck;
	char _useSecureQRControlMessage;
	NSString* _awdUniqueId;
	NSDate* _awdStartTimestamp;
	NSNumber* _remoteUsePhoneContinuityLocalMessage;

}

@property (nonatomic,retain) NSString * clientID;                                          //@synthesize clientID=_clientID - In the implementation block
@property (nonatomic,readonly) NSString * uniqueID;                                        //@synthesize uniqueID=_uniqueID - In the implementation block
@property (nonatomic,retain) NSData * remoteBlob;                                          //@synthesize remoteBlob=_remoteBlob - In the implementation block
@property (nonatomic,readonly) NSString * accountID;                                       //@synthesize accountID=_accountID - In the implementation block
@property (nonatomic,readonly) unsigned state;                                             //@synthesize state=_state - In the implementation block
@property (nonatomic,readonly) char isLegacy;                                              //@synthesize isLegacy=_isLegacy - In the implementation block
@property (nonatomic,readonly) char* keyMaterial; 
@property (assign,setter=SRCRecv,nonatomic) unsigned SSRCRecv;                             //@synthesize SSRCRecv=_SSRCRecv - In the implementation block
@property (assign,nonatomic) unsigned short seqRecvStart;                                  //@synthesize seqRecvStart=_seqRecvStart - In the implementation block
@property (nonatomic,readonly) char enableQuickRelay;                                      //@synthesize enableQuickRelay=_enableQuickRelay - In the implementation block
@property (nonatomic,readonly) char enableSKE;                                             //@synthesize enableSKE=_enableSKE - In the implementation block
@property (nonatomic,retain) NSNumber * remoteUseCloudPairedControlChannel;                //@synthesize remoteUseCloudPairedControlChannel=_remoteUseCloudPairedControlChannel - In the implementation block
@property (nonatomic,retain) NSNumber * remoteUsePhoneContinuityLocalMessage;              //@synthesize remoteUsePhoneContinuityLocalMessage=_remoteUsePhoneContinuityLocalMessage - In the implementation block
@property (nonatomic,retain) NSData * quickRelaySessionToken;                              //@synthesize quickRelaySessionToken=_quickRelaySessionToken - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(char)_destinationIsDefaultPairedDevice:(id)arg1 ;
-(int)_loggingFlags;
-(void)_setLinkProtocol:(id)arg1 ;
-(void)submitAWDMetricsForIDSSessionStarted;
-(void)_resetPreferences:(id)arg1 ;
-(void)_cleanupSessionConnection;
-(void)_checkAndUnassertRealTimeMode;
-(void)_sendMessage:(id)arg1 toDestinations:(id)arg2 withCommand:(id)arg3 ;
-(NSNumber *)remoteUsePhoneContinuityLocalMessage;
-(void)_sendSinglePathMessage:(id)arg1 toDestinations:(id)arg2 withCommand:(id)arg3 forceLocalDelivery:(char)arg4 messageGUID:(id)arg5 ;
-(char)_canSendMessageLocally:(id)arg1 toDestinations:(id)arg2 withCommand:(id)arg3 ;
-(char)_checkAndSendCachedDataForClient:(id)arg1 ;
-(void)_endSessionWithReason:(unsigned)arg1 ;
-(void)writeToClientChannel:(id)arg1 packetBuffer:(SCD_Struct_ID11*)arg2 metaData:(const char*)arg3 metadataSize:(unsigned)arg4 ;
-(void)_connectQRDirectlyToClientChannel:(id)arg1 ;
-(void)_checkAndRunClientChannelTests:(id)arg1 ;
-(void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2 ;
-(void)_registerClientChannel;
-(unsigned)globalLinkErrorToSessionEndReason:(int)arg1 ;
-(void)setLinkProtocolSessionInfo:(id)arg1 ;
-(void)_connectQRServerForInitiator:(id)arg1 ;
-(void)_connectQRServerForReceiver:(id)arg1 ;
-(void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3 ;
-(void)_sendInvitationMessageWithOptions:(id)arg1 contextData:(id)arg2 declineOnError:(char)arg3 connectionData:(id)arg4 ;
-(id)_getQuickRelayAllocateOptions;
-(void)runNetworkAvailabilityCheckWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1 ;
-(void)_sendInvitationWithOptions:(id)arg1 data:(id)arg2 declineOnError:(char)arg3 ;
-(void)sendCancelInvitationToDestinations:(id)arg1 remoteEndReason:(unsigned)arg2 data:(id)arg3 ;
-(void)_clearAllTimers;
-(void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned)arg1 numberOfRecipients:(id)arg2 ;
-(void)sendCancelInvitationToDestinations:(id)arg1 withData:(id)arg2 ;
-(void)_sendMessage:(id)arg1 withCommand:(id)arg2 ;
-(void)openSocketToDevice:(id)arg1 ;
-(NSData *)remoteBlob;
-(void)_handleAVConferenceError:(id)arg1 ;
-(void)_sendAcceptMessageWithContext:(id)arg1 connectionData:(id)arg2 ;
-(void)sessionStartWithSocketDescriptor:(int)arg1 ;
-(void)submitAWDMetricsForIDSSessionAcceptSent;
-(void)submitAWDMetricsForIDSSessionDeclineSent;
-(void)submitAWDMetricsForIDSSessionAcceptReceived;
-(void)setRemoteUseCloudPairedControlChannel:(NSNumber *)arg1 ;
-(void)setRemoteUsePhoneContinuityLocalMessage:(NSNumber *)arg1 ;
-(void)setRemoteBlob:(NSData *)arg1 ;
-(void)submitAWDMetricsForIDSSessionDeclineReceived;
-(char)_isValidDestination:(id)arg1 ;
-(void)submitAWDMetricsForIDSSessionCancelReceived;
-(void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2 ;
-(void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2 ;
-(void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2 ;
-(void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2 ;
-(void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2 ;
-(void)_reinitiate;
-(char)_supportsReinitiate;
-(void)_sendReinitiateMessageWithSubcommand:(int)arg1 ;
-(void)submitAWDMetricsForIDSSessionReinitiateConnected;
-(void)submitAWDMetricsForIDSSessionReinitiateRequested;
-(void)submitAWDMetricsForIDSSessionReinitiateStarted;
-(void)_inviteTimedOut;
-(void)_connectionTimedOut;
-(void)_endSessionTimedOut;
-(void)_checkPacketLossTime;
-(void)_setPacketLossTimer:(double)arg1 ;
-(void)_clearPacketLossTimer;
-(void)_clearEndSessionTimeoutTimer;
-(void)submitAWDMetricsForIDSSessionConnected;
-(void)link:(id)arg1 didReceiveReportEvent:(id)arg2 ;
-(id)_acceptedDeviceUniqueID;
-(id)_acceptedDeviceToken;
-(id)__socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4 ;
-(void)checkAndCallSessionStart;
-(void)_notifyClientsSessionStopped;
-(void)closeSocketToDevice:(id)arg1 ;
-(void)_cleanupSocketPairConnection;
-(void)_cleanupQuickRelaySession;
-(void)_setEndSessionTimeoutTimer;
-(void)submitAWDMetricsForIDSSessionCompleted;
-(void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned)arg1 ;
-(void)connection:(id)arg1 didStart:(char)arg2 error:(id)arg3 ;
-(void)connectionDidStop:(id)arg1 error:(id)arg2 ;
-(void)connection:(id)arg1 receivedData:(id)arg2 ;
-(void)_selectDefaultMic;
-(void)connectToQRServerWithSessionInfo:(id)arg1 ;
-(void)setAcceptedRelaySession:(id)arg1 ;
-(void)sendInvitationWithOptions:(id)arg1 declineOnError:(char)arg2 ;
-(void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedCancelMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedSessionMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedEndMessage:(id)arg1 fromID:(id)arg2 ;
-(void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2 ;
-(char)_wifiAvailable;
-(char)_cellularAvailable;
-(void)runConnectivityCheckWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)startListeningOnClientSocket:(int)arg1 isRawSocket:(char)arg2 ;
-(void)cleanupSession;
-(void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(char)link:(id)arg1 didReceivePacket:(SCD_Struct_ID11*)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 ;
-(void)link:(id)arg1 didReceiveSKEData:(id)arg2 ;
-(void)link:(id)arg1 didConnectUnderlyingLink:(char)arg2 localAttributes:(id)arg3 remoteAttributes:(id)arg4 ;
-(void)link:(id)arg1 didRATChange:(unsigned char)arg2 ;
-(void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2 ;
-(void)link:(id)arg1 didDisconnectUnderlyingLinkID:(char)arg2 ;
-(void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(char)arg2 currentDefaultLinkID:(char)arg3 ;
-(NSNumber *)remoteUseCloudPairedControlChannel;
-(unsigned)SSRCRecv;
-(void)setSSRCRecv:(unsigned)arg1 ;
-(unsigned short)seqRecvStart;
-(void)setSeqRecvStart:(unsigned short)arg1 ;
-(char)enableQuickRelay;
-(char)enableSKE;
-(NSData *)quickRelaySessionToken;
-(void)setQuickRelaySessionToken:(NSData *)arg1 ;
-(void)submitAWDMetricsForIDSSessionInvitationReceived;
-(char)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(char)arg2 ;
-(char)_shouldSubmitMetricsForThisSession;
-(void)dealloc;
-(NSString *)description;
-(unsigned)state;
-(void)setPreferences:(id)arg1 ;
-(void)connection:(id)arg1 didReceiveData:(id)arg2 ;
-(char)isLegacy;
-(void)endSession;
-(void)_endSession;
-(NSString *)clientID;
-(void)sendInvitationWithData:(id)arg1 declineOnError:(char)arg2 ;
-(void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned)arg1 ;
-(void)cancelInvitationWithData:(id)arg1 ;
-(void)acceptInvitationWithData:(id)arg1 ;
-(void)declineInvitationWithData:(id)arg1 ;
-(void)cancelInvitation;
-(void)endSessionWithData:(id)arg1 ;
-(void)sendSessionMessage:(id)arg1 ;
-(void)setInviteTimeout:(int)arg1 ;
-(NSString *)uniqueID;
-(char)isWithDefaultPairedDevice;
-(void)declineInvitation;
-(void)_clearConnectionTimeoutTimer;
-(void)_clearInvitationTimeoutTimer;
-(void)_setInvitationTimeoutTimer;
-(void)_setConnectionTimeoutTimer;
-(void)setAudioEnabled:(char)arg1 ;
-(void)setMuted:(char)arg1 ;
-(char*)keyMaterial;
-(id)sessionDuration;
-(NSString *)accountID;
-(id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 ;
-(void)acceptInvitation;
-(void)setClientID:(NSString *)arg1 ;
-(id)connectDuration;
@end

