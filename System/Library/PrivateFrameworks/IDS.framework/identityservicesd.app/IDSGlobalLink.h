/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:57:00 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/IDS.framework/identityservicesd.app/identityservicesd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <identityservicesd/identityservicesd-Structs.h>
#import <identityservicesd/IDSLink.h>
#import <identityservicesd/IDSLinkDelegate.h>

@protocol IDSLinkDelegate, IDSLink, OS_dispatch_source;
@class IDSUDPLink, IDSTCPLink, NSString, NSMutableDictionary, NSObject, NSMutableArray, NSData;

@interface IDSGlobalLink : NSObject <IDSLink, IDSLinkDelegate> {

	IDSUDPLink* _udpLink;
	IDSUDPLink* _udpLinkv6;
	IDSTCPLink* _tcpLink;
	IDSTCPLink* _tcpSSLLink;
	unsigned short _startPort;
	int _portRange;
	unsigned char _protocolVersion;
	NSString* _appName;
	id<IDSLinkDelegate> _delegate;
	id<IDSLinkDelegate> _alternateDelegate;
	/*^block*/id _connectReadyHandler;
	/*^block*/id _disconnectCompletionHandler;
	char _isFaceTimeCall;
	char _forceQuickRelay;
	char _disallowWiFi;
	char _disallowCellular;
	char _preferCellularForCallSetup;
	char _defaultLinkID;
	int _defaultSourceIfIndex;
	sockaddr_storage _defaultSource;
	sockaddr_storage _defaultDestination;
	int _defaultStunTransport;
	id<IDSLink> _defaultLink;
	unsigned short _defaultChannelNumber;
	char _linkIDCounter;
	double _lastOutgoingPacket;
	double _lastIncomingPacket;
	double _natMappingTimeout;
	double _inviteSentTime;
	double _inviteRecvTime;
	unsigned _acceptDelayU32;
	double _allocbindStartTime;
	double _allocbindEndTime;
	double _linkConnectTime;
	double _firstClientPacketTime;
	IDSNAT64PrefixCache_Ref _nat64PrefixCache;
	NSMutableDictionary* _requestIDToInterfaces;
	NSMutableDictionary* _tokenToCandidatePairs;
	NSMutableDictionary* _linkIDToCandidatePairs;
	NSMutableDictionary* _channelToCandidatePairs;
	NSMutableDictionary* _stunRequestToID;
	NSMutableDictionary* _transcationIDToToken;
	IDSSimpleUInt16List* _channelNumberList;
	IDSSimpleUInt16List* _reallocChannelList;
	NSMutableDictionary* _tokenToSessionMessages;
	NSMutableDictionary* _tokenToReallocBlocks;
	NSObject*<OS_dispatch_source> _disconnectTimer;
	NSObject*<OS_dispatch_source> _activityTimer;
	NSMutableArray* _interfaceAddressArray;
	sockaddr_storage _commnatServer;
	double _commnatTimeout;
	NSMutableDictionary* _nonceToRequest;
	NSMutableDictionary* _nonceToCandidates;
	char _isInitiator;
	int _nominateCount;
	NSMutableArray* _localCandidateList;
	NSMutableArray* _remoteCandidateList;
	NSMutableDictionary* _tokenToStunCheckPairs;
	char _enableSKE;
	NSData* _skeData;
	char _recvRemoteSKEData;
	char _delaySessionConnected;
	char _skeComplete;
	double _skeStartTime;
	NSString* _acceptedRelaySessionID;
	NSMutableArray* _nonAcceptedQRSessions;
	NSData* _softwareData;
	char _delayedConnData;
	int _localConnDataCounter;
	int _remoteConnDataCounter;
	char _hasPendingAllocation;
	NSMutableArray* _targetedAllocations;
	char _useSecureControlMessage;
	NSData* _controlMessageKey;
	unsigned short _basebandPacketChannelNumber;
	NSMutableArray* _allocateTimeReportBlocks;
	NSString* _cbuuid;
	NSString* _deviceUniqueID;
	unsigned _headerOverhead;
	unsigned _state;
	unsigned char _clientUUID[16];
	unsigned long long _totalBytesSent;
	unsigned long long _totalPacketsSent;
	unsigned long long _totalBytesReceived;
	unsigned long long _totalPacketsReceived;
	unsigned long long _previousBytesSent;
	unsigned long long _previousPacketsSent;
	unsigned long long _previousBytesReceived;
	unsigned long long _previousPacketsReceived;
	double _previousReportTime;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (retain) NSString * cbuuid;                                              //@synthesize cbuuid=_cbuuid - In the implementation block
@property (retain) NSString * deviceUniqueID;                                      //@synthesize deviceUniqueID=_deviceUniqueID - In the implementation block
@property (getter=linkTypeString,readonly) NSString * linkTypeString; 
@property (readonly) unsigned state;                                               //@synthesize state=_state - In the implementation block
@property (readonly) unsigned headerOverhead;                                      //@synthesize headerOverhead=_headerOverhead - In the implementation block
@property (__weak) id<IDSLinkDelegate> delegate;                                   //@synthesize delegate=_delegate - In the implementation block
@property (__weak) id<IDSLinkDelegate> alternateDelegate;                          //@synthesize alternateDelegate=_alternateDelegate - In the implementation block
-(NSString *)cbuuid;
-(void)setCbuuid:(NSString *)arg1 ;
-(NSString *)deviceUniqueID;
-(id)copyLinkStatsDict;
-(void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(char)link:(id)arg1 didReceivePacket:(SCD_Struct_ID11*)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 ;
-(unsigned)sendPacketBuffer:(SCD_Struct_ID11*)arg1 toDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 ;
-(id)initWithDeviceUniqueID:(id)arg1 cbuuid:(id)arg2 ;
-(id)generateLinkReport:(double)arg1 isCurrentLink:(char)arg2 ;
-(NSString *)linkTypeString;
-(unsigned)headerOverhead;
-(id<IDSLinkDelegate>)alternateDelegate;
-(void)setAlternateDelegate:(id<IDSLinkDelegate>)arg1 ;
-(char)remoteHostAwake;
-(void)currentCellularSignalStrength:(int*)arg1 signalStrength:(int*)arg2 signalGrade:(int*)arg3 ;
-(void)_stopDisconnectTimer;
-(void)_stopActivityTimer;
-(id)_createInterfaceAddressArray:(unsigned)arg1 wantsWiFi:(char)arg2 wantsCellular:(char)arg3 ;
-(void)_parseClientUUID:(id)arg1 ;
-(id)_addSocketAndInterfaceAddress:(unsigned)arg1 wantsWiFi:(char)arg2 wantsCellular:(char)arg3 ;
-(char)_isReachableInterface:(id)arg1 interfaceIPVersion:(unsigned)arg2 ;
-(char)_hasConnectedRelayCandidatePair;
-(unsigned)_getLinkInformation:(int)arg1 linkOK:(char*)arg2 ;
-(int)_stunTransportWithSessionInfo:(id)arg1 ;
-(id)_selectInterfaceForAllocation:(id)arg1 stunTransport:(int)arg2 interfaceIPVersion:(unsigned)arg3 ;
-(void)connectWithSessionInfo:(id)arg1 interfaceAddress:(id)arg2 nat64Prefix:(IDSNAT64Prefix_Ref)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_synthesizeIPv6UsingNat64Prefix:(IDSNAT64Prefix_Ref)arg1 remoteAddress:(sockaddr_in*)arg2 ;
-(unsigned)_calculateLocalMTU:(char)arg1 isCellular:(char)arg2 isRelay:(char)arg3 ;
-(void)_sendAllocbindRequest:(id)arg1 stunMessage:(id)arg2 isRealloc:(char)arg3 ;
-(unsigned)_cellularRATForExtIPv4:(unsigned)arg1 ;
-(void)_reportAWDAllocateTime;
-(void)_reportAWDSessionSetupFailure:(int)arg1 localRAT:(unsigned)arg2 resultCode:(int)arg3 ;
-(void)_discardCandidatePairsWithOption:(char)arg1 ;
-(void)_removePacketNotificationFilter;
-(void)_sendSessionDisconnectedCommand;
-(void)_startDisconnectTimer;
-(id)_getLink:(int)arg1 stunTransport:(int)arg2 ;
-(char)_isBetterCandidatePair:(id)arg1 newCandidatePair:(id)arg2 ;
-(void)_nominateCandidatePair:(id)arg1 ;
-(void)_sendUnallocbindRequest:(id)arg1 stunMessage:(id)arg2 ;
-(void)_notifyCandidatePairDisconnected:(id)arg1 ;
-(char)_hasConnectedCandidatePair;
-(void)_notifyLinkDisconnectedWithError:(int)arg1 ;
-(void)_sendCommandMessage:(int)arg1 options:(id)arg2 candidatePairToken:(id)arg3 ;
-(void)_notifyDefaultUnderlyingLinkChanged:(id)arg1 error:(int)arg2 ;
-(void)_sendConnectionDataWithRemovedAddressList:(id)arg1 ;
-(void)_callDisconnectCompletionHandler:(id)arg1 ;
-(char)_isCommnatDiscoveryDone;
-(void)_reportAllocbindEventForMessageType:(int)arg1 duration:(float)arg2 transport:(int)arg3 localRAT:(unsigned)arg4 ;
-(void)_setChannelToCandidatePair:(id)arg1 localAddress:(sockaddr*)arg2 remoteAddress:(sockaddr*)arg3 channelNumber:(unsigned short)arg4 ;
-(void)_updateDefaultCandidatePair:(id)arg1 ;
-(void)_processXORMappedAddress:(id)arg1 arrivalTime:(double)arg2 ;
-(void)_sendSKEDataWithSelectedCandidatePair;
-(void)_removeSessionCommandMessage:(int)arg1 candidatePairToken:(id)arg2 ;
-(double)_startTimeForStunRequest:(id)arg1 ;
-(void)_reportAWDReallocIndicationResult:(unsigned)arg1 transport:(int)arg2 localRAT:(unsigned)arg3 ;
-(char)_processIncomingIndicationData:(char*)arg1 length:(int)arg2 candidatePairToken:(id)arg3 ;
-(char)_processBindingRequest:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remmoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processBindingResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remmoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processAllocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remmoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processUnallocbindResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remmoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processReallocIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processDataIndication:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(char)_processStunErrorResponse:(id)arg1 fromDevice:(id)arg2 localIfIndex:(unsigned)arg3 localAddress:(sockaddr*)arg4 remmoteAddress:(sockaddr*)arg5 candidatePairToken:(id)arg6 arrivalTime:(double)arg7 ;
-(void)_removeStunRequest:(id)arg1 ;
-(void)_notifyCandidatePairConnected:(id)arg1 ;
-(void)_processDataOnReallocChannel:(unsigned short)arg1 localAddress:(sockaddr*)arg2 remoteAddress:(sockaddr*)arg3 ;
-(char)_hasConnectingRelayCandidatePair;
-(char)_sendStunMessage:(id)arg1 sourceIfIndex:(int)arg2 source:(sockaddr*)arg3 destination:(sockaddr*)arg4 stunTransport:(int)arg5 ;
-(void)_saveStunRequest:(id)arg1 token:(id)arg2 ;
-(char)_skipCommandMessage:(int)arg1 candidatePair:(id)arg2 timeNow:(double)arg3 ;
-(id)_commandMessage:(int)arg1 candidatePairToken:(id)arg2 ;
-(id)_createCommandData:(int)arg1 options:(id)arg2 candidatePair:(id)arg3 ;
-(void)_saveCommandMessage:(int)arg1 stunMessage:(id)arg2 candidatePairToken:(id)arg3 ;
-(void)_processCommandConnected:(id)arg1 candidatePairToken:(id)arg2 ;
-(void)_processCommandDisconnected:(id)arg1 candidatePairToken:(id)arg2 ;
-(void)_processCommandHeartbeat:(id)arg1 candidatePairToken:(id)arg2 ;
-(void)_processCommandConnectionData:(id)arg1 candidatePairToken:(id)arg2 ;
-(void)_processCommandNominate:(id)arg1 candidatePairToken:(id)arg2 ;
-(void)_discardNonAcceptedCandidatePairs;
-(void)_startActivityTimer;
-(void)_startCommnatDiscovery:(int)arg1 ;
-(void)_selectBetterDefaultCandidatePair:(id)arg1 ;
-(void)_notifyQRSessionConnected:(id)arg1 ;
-(void)_discardAllCandidatePairs;
-(void)_processRemoteCandidates:(id)arg1 ;
-(void)_setupRelayConnectionForNetworkAddressChanges;
-(void)_updateNominatedCandidatePair:(id)arg1 ;
-(void)_handleDisconnectTimer;
-(id)_nextConnectedCandidatePair;
-(void)_handleActivityTimer;
-(void)_startStunCheck:(id)arg1 ;
-(char)_addCandidate:(id)arg1 isRemoteCandidate:(char)arg2 ;
-(void)_addStunCheckPair:(id)arg1 isRemoteCandidate:(char)arg2 ;
-(float)_getCommNATTimeoutValue;
-(void)_sendCommnatRequest:(id)arg1 candidate:(id)arg2 ;
-(void)_getCommNATServerAddress;
-(char)_isLocalAddressUsed:(const sockaddr*)arg1 ;
-(void)_processNewRemoteCandidates:(id)arg1 ;
-(void)_processRemovedRemoteCandidates:(id)arg1 ;
-(void)_sendBindingRequest:(id)arg1 stunMessage:(id)arg2 ;
-(void)_selectDefaultCandidatePair;
-(void)_setupRelayConnectionIfNecessary;
-(void)_processNewLocalAddressList:(id)arg1 ;
-(void)_processRemovedLocalAddressList:(id)arg1 ;
-(void)_reportAWDClientTimerEvent:(unsigned)arg1 transport:(int)arg2 localRAT:(unsigned)arg3 duration:(unsigned long long)arg4 resultCode:(int)arg5 ;
-(void)_reportSessionSetupTime;
-(void)_requestNonUDPRelayAllocation:(int)arg1 relaySessionID:(id)arg2 ;
-(void)_processReallocChannelData:(SCD_Struct_ID11*)arg1 channelNumber:(unsigned short)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4 arrivalTime:(double)arg5 ;
-(char)_processStunPacket:(SCD_Struct_ID11*)arg1 fromDeviceUniqueID:(id)arg2 cbuuid:(id)arg3 arrivalTime:(double)arg4 ;
-(void)_processCommnatResponse:(SCD_Struct_ID11*)arg1 ;
-(id)_interfaceTypeListToString:(unsigned char)arg1 ;
-(id)_linkTypeListToString:(unsigned char)arg1 ;
-(unsigned char)_newRelayLinkType:(unsigned char)arg1 localInterface:(unsigned char)arg2 remoteInterface:(unsigned char)arg3 ;
-(id)_linkTypeMaskToString:(unsigned char)arg1 ;
-(unsigned)defaultLinkType;
-(char)hasReachableInterface:(unsigned)arg1 ;
-(void)handleNetworkAddressChanges:(char)arg1 hasIPv6AddressChange:(char)arg2 ;
-(void)handleCellularRATChange;
-(void)setAcceptedRelaySession:(id)arg1 options:(id)arg2 ;
-(void)sendSKEData:(id)arg1 ;
-(void)setDefaultUnderlyingLink:(char)arg1 ;
-(void)setPacketNotificationFilter:(char)arg1 uniqueTag:(unsigned)arg2 isEnabled:(char)arg3 ;
-(void)dropIPPackets:(char)arg1 payloadArray:(id)arg2 ;
-(void)updateProtocolQualityOfService:(char)arg1 isGood:(char)arg2 ;
-(void)stopKeepAlive:(id)arg1 ;
-(void)invalidate;
-(void)setDelegate:(id<IDSLinkDelegate>)arg1 ;
-(void)dealloc;
-(id<IDSLinkDelegate>)delegate;
-(unsigned)state;
-(void)startWithOptions:(id)arg1 ;
-(void)setDeviceUniqueID:(NSString *)arg1 ;
-(void)disconnectWithCompletionHandler:(/*^block*/id)arg1 ;
@end

