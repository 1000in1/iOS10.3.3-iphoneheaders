/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:57:45 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/Symptoms.framework/Frameworks/SymptomEvaluator.framework/SymptomEvaluator
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <SymptomEvaluator/SymptomEvaluator-Structs.h>
#import <SymptomEvaluator/ExpertSystemHandlerCore.h>
#import <libobjc.A.dylib/ProbeManagerDelegate.h>
#import <libobjc.A.dylib/CLIPSShimDelegate.h>
#import <libobjc.A.dylib/AWDObserverDelegate.h>
#import <libobjc.A.dylib/WiFiShimDelegate.h>

@protocol OS_dispatch_source;
@class SymptomExpertSystemState, NSArray, SystemSettingsRelay, PowerStateRelay, NetworkAnalyticsStateRelay, CellFallbackHandler, SystemProperties, NSSet, NSMutableDictionary, NSDate, MotionStateRelay, NSString, CLIPSShim, NSMutableArray, NSDataDetector, AWDObserver, NSDictionary, NSObject, ProbeManager;

@interface SymptomExpertSystemHandler : ExpertSystemHandlerCore <ProbeManagerDelegate, CLIPSShimDelegate, AWDObserverDelegate, WiFiShimDelegate> {

	SymptomExpertSystemState* currentState;
	NSArray* states;
	id relayReadyObserver;
	SystemSettingsRelay* settingsRelay;
	PowerStateRelay* powerRelay;
	NetworkAnalyticsStateRelay* cellRelay;
	NetworkAnalyticsStateRelay* wifiRelay;
	CellFallbackHandler* rnfRelay;
	SystemProperties* systemPropsRelay;
	unsigned administrativeState;
	unsigned relayObservingState;
	NSSet* relayObservingKeys;
	NSSet* relayObservingKeysScaled;
	NSMutableDictionary* relayToFacts;
	NSDate* lastWiFiAssociationTime;
	NSSet* awdDirectSymptoms;
	NSMutableDictionary* awdDirectHistory;
	MotionStateRelay* motionRelay;
	char _observingAWD;
	NSString* _airdropID;
	CLIPSShim* ruleEngine;
	char _failedToLoadDefaultRules;
	unsigned _stepper;
	NSMutableArray* _incomingSymptoms;
	NSMutableArray* _processedSymptoms;
	NSString* _diagnosticSessionIdentifier;
	NSMutableArray* _caseSignatures;
	NSMutableDictionary* _diagnosticSessionOutput;
	NSDate* _lastSymptomRun;
	NSMutableDictionary* _obfuscations;
	NSDataDetector* _urlDetector;
	NSDate* _diagSessionExpectedEnd;
	AWDObserver* _awdObserver;
	NSDictionary* _awdCLIPSMapping;
	NSMutableDictionary* _awdlPeerFacts;
	NSObject*<OS_dispatch_source> _factTimer;
	NSString* _factToWaitFor;
	ProbeManager* _probeManager;
	long long _alertedStrobeInterval;
	long long _maximumAlertedTime;

}

@property (assign) unsigned stepper;                                                     //@synthesize stepper=_stepper - In the implementation block
@property (nonatomic,retain) NSMutableArray * incomingSymptoms;                          //@synthesize incomingSymptoms=_incomingSymptoms - In the implementation block
@property (nonatomic,retain) NSMutableArray * processedSymptoms;                         //@synthesize processedSymptoms=_processedSymptoms - In the implementation block
@property (nonatomic,retain) NSString * diagnosticSessionIdentifier;                     //@synthesize diagnosticSessionIdentifier=_diagnosticSessionIdentifier - In the implementation block
@property (nonatomic,retain) NSMutableArray * caseSignatures;                            //@synthesize caseSignatures=_caseSignatures - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * diagnosticSessionOutput;              //@synthesize diagnosticSessionOutput=_diagnosticSessionOutput - In the implementation block
@property (nonatomic,retain) NSDate * lastSymptomRun;                                    //@synthesize lastSymptomRun=_lastSymptomRun - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * obfuscations;                         //@synthesize obfuscations=_obfuscations - In the implementation block
@property (nonatomic,retain) NSDataDetector * urlDetector;                               //@synthesize urlDetector=_urlDetector - In the implementation block
@property (nonatomic,retain) NSDate * diagSessionExpectedEnd;                            //@synthesize diagSessionExpectedEnd=_diagSessionExpectedEnd - In the implementation block
@property (assign,nonatomic) long long alertedStrobeInterval;                            //@synthesize alertedStrobeInterval=_alertedStrobeInterval - In the implementation block
@property (assign,nonatomic) long long maximumAlertedTime;                               //@synthesize maximumAlertedTime=_maximumAlertedTime - In the implementation block
@property (nonatomic,retain) AWDObserver * awdObserver;                                  //@synthesize awdObserver=_awdObserver - In the implementation block
@property (nonatomic,retain) NSDictionary * awdCLIPSMapping;                             //@synthesize awdCLIPSMapping=_awdCLIPSMapping - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * awdlPeerFacts;                        //@synthesize awdlPeerFacts=_awdlPeerFacts - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_source> factTimer;                    //@synthesize factTimer=_factTimer - In the implementation block
@property (nonatomic,retain) NSString * factToWaitFor;                                   //@synthesize factToWaitFor=_factToWaitFor - In the implementation block
@property (nonatomic,retain) ProbeManager * probeManager;                                //@synthesize probeManager=_probeManager - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
+(id)configureClass:(id)arg1 ;
+(BOOL)noteSymptom:(id)arg1 ;
+(id)libtraceInfo:(id)arg1 ;
+(char)parseEndpoint:(id)arg1 intoURL:(id*)arg2 host:(id*)arg3 scheme:(id*)arg4 path:(id*)arg5 ;
-(id)init;
-(void)dealloc;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_dumpState;
-(BOOL)noteSymptom:(id)arg1 ;
-(void)setAlertedStrobeInterval:(long long)arg1 ;
-(void)setMaximumAlertedTime:(long long)arg1 ;
-(void)setCaseSignatures:(NSMutableArray *)arg1 ;
-(void)setIncomingSymptoms:(NSMutableArray *)arg1 ;
-(void)setProcessedSymptoms:(NSMutableArray *)arg1 ;
-(void)setDiagnosticSessionOutput:(NSMutableDictionary *)arg1 ;
-(void)setObfuscations:(NSMutableDictionary *)arg1 ;
-(void)setAwdlPeerFacts:(NSMutableDictionary *)arg1 ;
-(void)_cleanupAwdDirectHistory;
-(void)_completeInitialization;
-(void)onDisruptiveFlowChange:(id)arg1 ;
-(void)_removeRelayObservers;
-(void)setUrlDetector:(NSDataDetector *)arg1 ;
-(void)setDiagSessionExpectedEnd:(NSDate *)arg1 ;
-(void)setLastSymptomRun:(NSDate *)arg1 ;
-(void)registerAllCLIPSCallbacks;
-(char)loadDefaultRulesForEngine:(id)arg1 ;
-(void)_administrativeDisable;
-(void)setDefaultFactsForEngine:(id)arg1 ;
-(void)_addRelayObservers;
-(long long)alertedStrobeInterval;
-(NSDate *)lastSymptomRun;
-(long long)maximumAlertedTime;
-(void)cancelDiagnosticSession:(id)arg1 ;
-(char)_bringStateToActive;
-(void)stopAWDObserving;
-(void)_bringStateToIdle;
-(void)processWiFiAssociationChange:(char)arg1 atTime:(id)arg2 ;
-(void)setAwdObserver:(AWDObserver *)arg1 ;
-(void)retractFact:(void*)arg1 ;
-(void*)assertFactString:(id)arg1 ;
-(void)retractFact:(void*)arg1 moduleName:(id)arg2 engine:(id)arg3 run:(char)arg4 ;
-(void*)assertFactString:(id)arg1 moduleName:(id)arg2 engine:(id)arg3 run:(char)arg4 ;
-(void)processRelayStateChange:(id)arg1 key:(id)arg2 relay:(id)arg3 ;
-(void)_administrativeEnable;
-(id)symptomDictionaryForSymptom:(id)arg1 domain:(id)arg2 type:(id)arg3 ;
-(void)_processLibnetcoreSymptom:(id)arg1 symptomName:(id)arg2 ;
-(char)urlIsAppleDomain:(id)arg1 ;
-(char)_propertiesFromLibnetcoreSymptom:(id*)arg1 effectivePID:(int*)arg2 interfaceIndex:(int*)arg3 fromSymptom:(id)arg4 ;
-(void)_processSymptomsdEnergyBackgroundRRCExcDuration:(id)arg1 symptomName:(id)arg2 ;
-(void)_processSymptomsdFlowCountExceededThreshold:(id)arg1 symptomName:(id)arg2 ;
-(void)_processSymptomsdMbufPeak:(id)arg1 symptomName:(id)arg2 ;
-(void)_processSymptomsdNoDefaultRoute:(id)arg1 symptomName:(id)arg2 ;
-(void)_processSymptomsdRnfSymptom:(id)arg1 symptomName:(id)arg2 categoryType:(id)arg3 ;
-(void)_processSymptomsdWiFiShimSymptom:(id)arg1 symptomName:(id)arg2 ;
-(id)arbitratorDictionaryForSymptom:(id)arg1 procName:(id)arg2 interfaceType:(id)arg3 eventCount:(id)arg4 duration:(id)arg5 ;
-(NSDictionary *)awdCLIPSMapping;
-(void)_airplaySymptom:(id)arg1 ;
-(void)_symptomsdSymptom:(id)arg1 ;
-(void)_libtraceOSLog:(id)arg1 ;
-(void)setStepper:(unsigned)arg1 ;
-(void)_prepareToCreateAndPostAwdDirectMetricForSymptom:(id)arg1 ;
-(void)startDiagnosticSessionWithDomain:(id)arg1 type:(id)arg2 subType:(id)arg3 subTypeContext:(id)arg4 processID:(id)arg5 processName:(id)arg6 bundleID:(id)arg7 threshold:(id)arg8 sessionDuration:(id)arg9 ;
-(void)addDiagnosticSession:(id)arg1 symptomIndex:(id)arg2 hasDictionary:(id)arg3 endSession:(id)arg4 ;
-(void)endDiagnosticSession:(id)arg1 ;
-(void)logSessionEventProbe:(id)arg1 endpoint:(id)arg2 interface:(id)arg3 status:(id)arg4 ;
-(void)logSessionEventSymptom:(id)arg1 process:(id)arg2 endpoint:(id)arg3 interface:(id)arg4 ;
-(void)logSessionEventMessage:(id)arg1 ;
-(void)expertSystemToIdle;
-(void)waitForFactWithTemplateName:(id)arg1 timeout:(id)arg2 ;
-(void)cancelWaitForFactWithTemplateName:(id)arg1 ;
-(void)adjustStrobeTimerInterval:(id)arg1 maximum:(id)arg2 ;
-(void)setAwdCLIPSMapping:(NSDictionary *)arg1 ;
-(void)startAWDObserving:(id)arg1 ;
-(NSMutableDictionary *)diagnosticSessionOutput;
-(id)serviceToFactString:(id)arg1 type:(int)arg2 ;
-(void)retractService:(id)arg1 type:(int)arg2 ;
-(id)signatureWithDomain:(id)arg1 type:(id)arg2 subType:(id)arg3 subTypeContext:(id)arg4 detectedProcess:(id)arg5 triggerThresholdValues:(id)arg6 ;
-(void)setDiagnosticSessionIdentifier:(NSString *)arg1 ;
-(NSMutableArray *)caseSignatures;
-(void)sendCaseSignaturesToDiagnosticReporter;
-(NSString *)diagnosticSessionIdentifier;
-(NSRange)rangeOfValueForSlotName:(id)arg1 in:(id)arg2 ;
-(id)obfuscatedPrimaryComponent:(id)arg1 obfuscationType:(id)arg2 ;
-(id)obfuscatedEndpoint:(id)arg1 ;
-(void)setFactToWaitFor:(NSString *)arg1 ;
-(NSString *)factToWaitFor;
-(void)setFactTimer:(NSObject*<OS_dispatch_source>)arg1 ;
-(NSObject*<OS_dispatch_source>)factTimer;
-(id)primaryComponent:(id)arg1 obfuscationType:(id)arg2 ;
-(id)obfuscatedSubcomponent:(id)arg1 fromPrimaryEntry:(id)arg2 withKey:(id)arg3 obfuscation:(id)arg4 ;
-(char)_getAwdDirectDampeningStatus:(int*)arg1 posted:(int*)arg2 forProcess:(id)arg3 withTimeStamp:(double)arg4 ;
-(void)probeStatusUpdate:(id)arg1 ;
-(void)probeOutputFilePaths:(id)arg1 forDiagSessionUUID:(id)arg2 testWasCanceled:(char)arg3 ;
-(void)serviceAdded:(id)arg1 type:(int)arg2 ;
-(void)serviceUpdated:(id)arg1 type:(int)arg2 ;
-(void)serviceRemoved:(id)arg1 type:(int)arg2 ;
-(void)probeFactString:(id)arg1 run:(char)arg2 ;
-(void)clipsConsoleOutput:(id)arg1 consoleChannel:(const char*)arg2 forEngine:(id)arg3 ;
-(void)observer:(id)arg1 handleEvent:(id)arg2 ;
-(void)_configdSymptom:(id)arg1 ;
-(void)_libnetcoreSymptom:(id)arg1 ;
-(void)assertFactStrings:(id)arg1 runAfterLastFact:(char)arg2 ;
-(void)retractFacts:(id)arg1 runAfterLastFact:(char)arg2 ;
-(NSDataDetector *)urlDetector;
-(NSMutableArray *)incomingSymptoms;
-(NSMutableArray *)processedSymptoms;
-(NSMutableDictionary *)obfuscations;
-(NSDate *)diagSessionExpectedEnd;
-(AWDObserver *)awdObserver;
-(NSMutableDictionary *)awdlPeerFacts;
-(ProbeManager *)probeManager;
-(void)setProbeManager:(ProbeManager *)arg1 ;
-(unsigned)stepper;
@end

