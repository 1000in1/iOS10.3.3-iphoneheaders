/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:58:01 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/iOSDiagnostics.framework/XPCServices/com.apple.DiagnosticsSessionAvailibility.xpc/com.apple.DiagnosticsSessionAvailibility
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol DAAccessoryInformationManagerDelegate, OS_dispatch_queue;
#import <com.apple.DiagnosticsSessionAvailibility/com.apple.DiagnosticsSessionAvailibility-Structs.h>
@class NSObject;

@interface DAAccessoryInformationManager : NSObject {

	id<DAAccessoryInformationManagerDelegate> _delegate;
	NSObject*<OS_dispatch_queue> _accessoryObservationQueue;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> accessoryObservationQueue;                 //@synthesize accessoryObservationQueue=_accessoryObservationQueue - In the implementation block
@property (assign,nonatomic,__weak) id<DAAccessoryInformationManagerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
+(id)retrieveInformationForAccessory:(unsigned)arg1 flattenEntries:(char)arg2 ;
+(unsigned)retrieveDAAccessoryForExternalAccessory:(id)arg1 ;
+(SCD_Struct_DA0)retrieveAccessoryIdentifierForAccessory:(unsigned)arg1 ;
+(id)retrieveReport:(long)arg1 reportResultKey:(id)arg2 accessoryIdentifier:(SCD_Struct_DA0)arg3 ;
+(id)retrieveAllExternalAccessories;
+(id)retrieveKeys:(id)arg1 accessoryIdentifier:(SCD_Struct_DA0)arg2 ;
+(id)retrieveAllPowerSourceInformation;
+(id)retrieveKeys:(id)arg1 reportID:(long)arg2 reportResultKey:(id)arg3 accessoryIdentifier:(SCD_Struct_DA0)arg4 ;
+(id)mergePowerSourceInformation:(id)arg1 accessoryIdentifer:(SCD_Struct_DA0)arg2 externalAccessories:(id)arg3 HIDEntry:(id)arg4 hardModelNumber:(id)arg5 ;
+(id)sanitizeDictionary:(id)arg1 flatten:(char)arg2 ;
+(id)generateSmartBatteryProfile:(id)arg1 ;
+(char)validBatterySerialNumberString:(id)arg1 ;
+(id)convertExternalAccessoryToDictionary:(id)arg1 ;
+(id)flattenDictionary:(id)arg1 ;
+(IOHIDDeviceRef)findMatchingDevice:(_IOHIDDevice*)arg1 count:(long)arg2 accessoryIdentifier:(SCD_Struct_DA0)arg3 ;
+(id)retrieveHIDKeys:(id)arg1 device:(IOHIDDeviceRef)arg2 ;
+(id)retrieveHIDReport:(long)arg1 device:(IOHIDDeviceRef)arg2 ;
+(id)retrieveNameForAccessory:(unsigned)arg1 ;
+(id)generateProfileForAccessory:(unsigned)arg1 filter:(id)arg2 ;
-(NSObject*<OS_dispatch_queue>)accessoryObservationQueue;
-(void)setAccessoryObservationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(id)init;
-(void)setDelegate:(id<DAAccessoryInformationManagerDelegate>)arg1 ;
-(id<DAAccessoryInformationManagerDelegate>)delegate;
-(id)initWithDelegate:(id)arg1 ;
-(void)endObserving;
-(void)beginObserving;
-(void)accessoryConnected:(id)arg1 ;
-(void)accessoryDisconnected:(id)arg1 ;
@end

