/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:19 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/AssetCacheServices.framework/XPCServices/AssetCacheLocatorService.xpc/AssetCacheLocatorService
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AssetCacheLocatorService/AssetCacheLocatorService-Structs.h>
@interface ACLSNetworkUtilities : NSObject
+(id)allActiveNetworkInterfaces;
+(char)isManualConfigMethod4:(id)arg1 ;
+(id)createNetworkInterface:(SCNetworkInterfaceRef)arg1 service:(SCNetworkServiceRef)arg2 configInfo:(id)arg3 ;
+(char)isAutomaticConfigMethod4:(id)arg1 ;
+(id)serviceIDFromKey:(id)arg1 ;
+(char)isManualConfigMethod6:(id)arg1 ;
+(char)isAutomaticConfigMethod6:(id)arg1 ;
+(char)isWiredNetworkInterfaceType:(id)arg1 ;
+(char)isShareableSockaddr4:(const sockaddr_in*)arg1 ;
+(char)isUsefulSockaddr4:(const sockaddr_in*)arg1 ;
+(char)isShareableSockaddr6:(const sockaddr_in6*)arg1 ;
+(char)isUsefulSockaddr6:(const sockaddr_in6*)arg1 ;
+(char)isShareableInaddr4:(const in_addr*)arg1 ;
+(char)isShareableInaddr6:(const in6_addr*)arg1 ;
+(char)isUsefulInaddr4:(const in_addr*)arg1 ;
+(char)isUsefulInaddr6:(const in6_addr*)arg1 ;
+(id)stringFromInaddr4:(const in_addr*)arg1 ;
+(id)stringFromInaddr6:(const in6_addr*)arg1 ;
+(id)stringFromMacAddr:(char*)arg1 ;
+(id)stringFromSockaddr4:(const sockaddr_in*)arg1 ;
+(id)stringFromSockaddr6:(const sockaddr_in6*)arg1 ;
+(id)stringFromSockaddrDL:(const sockaddr_dl*)arg1 ;
+(id)stringFromSockaddrStorage:(const sockaddr_storage*)arg1 ;
+(id)digestIdentifier:(id)arg1 tag:(unsigned)arg2 ;
+(char)isDigestedIdentifier:(id)arg1 equalToCleartextIdentifier:(id)arg2 tag:(unsigned)arg3 ;
+(char)hasUsefulUSBEthernetInterface;
+(id)netmask4ContainingStartAddress:(id)arg1 endAddress:(id)arg2 ;
+(char)makeLocalAddresses:(id*)arg1 andGatewayIdentifiers:(id*)arg2 tag:(unsigned)arg3 ;
+(id)digestIdentifiers:(id)arg1 tag:(unsigned)arg2 ;
+(char)areDigestedIdentifiers:(id)arg1 equalToCleartextIdentifiers:(id)arg2 tag:(unsigned)arg3 ;
@end

