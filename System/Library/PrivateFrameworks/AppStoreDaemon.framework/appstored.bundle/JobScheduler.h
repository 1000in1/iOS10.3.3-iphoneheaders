/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:16 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/appstored.bundle/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <appstored/appstored-Structs.h>
#import <appstored/JobAgentObserver.h>
#import <appstored/BatterySaverWatcherDelegate.h>
#import <appstored/NotificationConsumer.h>

@protocol OS_dispatch_queue;
@class BatterySaverWatcher, NSObject, NSNumber, JobAgentSupervisor, NSString;

@interface JobScheduler : NSObject <JobAgentObserver, BatterySaverWatcherDelegate, NotificationConsumer> {

	int _accountChnagedNotificationToken;
	BatterySaverWatcher* _batterySaverWatcher;
	unsigned _powerNotification;
	SCNetworkReachabilityRef _reachability;
	char _dataMigratorComplete;
	char _hasPower;
	char _inBatterySaverMode;
	char _internetReachable;
	char _internetReachableViaOnlyWWAN;
	char _started;
	NSObject*<OS_dispatch_queue> _approvalQueue;
	NSNumber* _currentAccountDSID;
	JobAgentSupervisor* _jobSupervisor;
	NSObject*<OS_dispatch_queue> _runQueue;
	int _unlockNotificationToken;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> approvalQueue;              //@synthesize approvalQueue=_approvalQueue - In the implementation block
@property (nonatomic,copy) NSNumber * currentAccountDSID;                             //@synthesize currentAccountDSID=_currentAccountDSID - In the implementation block
@property (assign,nonatomic) char hasPower;                                           //@synthesize hasPower=_hasPower - In the implementation block
@property (assign,nonatomic) char inBatterySaverMode;                                 //@synthesize inBatterySaverMode=_inBatterySaverMode - In the implementation block
@property (assign,nonatomic) char internetReachable;                                  //@synthesize internetReachable=_internetReachable - In the implementation block
@property (assign,nonatomic) char internetReachableViaOnlyWWAN;                       //@synthesize internetReachableViaOnlyWWAN=_internetReachableViaOnlyWWAN - In the implementation block
@property (nonatomic,retain) JobAgentSupervisor * jobSupervisor;                      //@synthesize jobSupervisor=_jobSupervisor - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> runQueue;                   //@synthesize runQueue=_runQueue - In the implementation block
@property (assign,getter=isStarted,nonatomic) char started;                           //@synthesize started=_started - In the implementation block
@property (assign,nonatomic) int unlockNotificationToken;                             //@synthesize unlockNotificationToken=_unlockNotificationToken - In the implementation block
@property (assign,nonatomic) char dataMigratorComplete;                               //@synthesize dataMigratorComplete=_dataMigratorComplete - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)jobApprovalDate;
+(void)_setJobApprovalDate:(id)arg1 ;
+(char)_assignOrderValueToJob:(id)arg1 inPriorityBucket:(unsigned)arg2 jobType:(int)arg3 ;
+(id)_idleStates;
+(long long)_nextOrderValueForPriorityBucket:(unsigned)arg1 database:(id)arg2 ;
+(unsigned)_priorityBucketForJobPriority:(int)arg1 ;
+(unsigned)_currentActiveJobsInBucket:(unsigned)arg1 inDatabase:(id)arg2 ;
+(unsigned)_currentActiveJobsInBuckets:(id)arg1 inDatabase:(id)arg2 ;
+(unsigned)_maxJobsForRestoreOperation;
+(unsigned)_availableSlotsDiscretionary:(char)arg1 inDatabase:(id)arg2 ;
+(unsigned)_maxActiveJobs;
+(unsigned)_bucketForPriority:(long long)arg1 ;
+(id)_predicateForPriorityBucket:(unsigned)arg1 ;
+(unsigned)_currentActiveJobsInDatabase:(id)arg1 ;
+(char)_jobTypeIsNonDiscretionary:(int)arg1 ;
+(char)_jobTypeIsUserInitiated:(int)arg1 ;
+(void)initialize;
+(id)_errorWithCode:(unsigned)arg1 ;
-(void)runWithReason:(id)arg1 ;
-(void)PID:(long long)arg1 didEnterState:(id)arg2 ;
-(JobAgentSupervisor *)jobSupervisor;
-(char)dataMigratorComplete;
-(id)initWithJobSupervisor:(id)arg1 ;
-(char)expediteJob:(long long)arg1 error:(id*)arg2 ;
-(void)registerNotifications:(id)arg1 ;
-(void)_limitActiveJobsIfNecessary;
-(void)_setupTriggers;
-(void)_configureDiagnosticProperties;
-(void)_throwExceptionIfNotStarted;
-(void)_assignOrderValuesToJobsIfNeeded;
-(void)_startJobsIfNeeded;
-(id)_getNextWaitJobsDiagnostics;
-(id)_humanReadableTrigger:(unsigned)arg1 ;
-(void)processTrigger:(unsigned)arg1 ;
-(NSObject*<OS_dispatch_queue>)approvalQueue;
-(char)_verifyJobEntityPolicy:(id)arg1 diagnosticContext:(id)arg2 ;
-(char)_isRetryImmediatelyError:(id)arg1 ;
-(void)_scheduleAccountNotAvailableDuringDataMigratorRetry;
-(void)_scheduleAutomaticRetry;
-(void)_scheduleCancelRetry;
-(void)_scheduleRestoreItemsUnavailableDialog;
-(id)_findJobsInDatabase:(id)arg1 diagnosticsContext:(id)arg2 ;
-(char)_shouldRetrySoftFailedJob:(id)arg1 diagnosticsContext:(id)arg2 ;
-(void)_approveAllPendingJobs;
-(void)_handleAccountChangedNotification;
-(void)_handleDeviceUnlockNotification;
-(void)batterySaverWatcherDidChangeState:(id)arg1 ;
-(id)_findJobsInDatabase:(id)arg1 ;
-(id)_bootstrapJobsIfNeeded:(id)arg1 ;
-(id)_agentRefWithPID:(long long)arg1 ;
-(char)_jobPolicyMatchesEnvironment:(id)arg1 bundleID:(id)arg2 ;
-(id)getJobSchedulerDiagnosticData;
-(void)didPrioritizePID:(long long)arg1 ;
-(void)setDataMigratorComplete:(char)arg1 ;
-(void)setApprovalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSNumber *)currentAccountDSID;
-(void)setCurrentAccountDSID:(NSNumber *)arg1 ;
-(void)setHasPower:(char)arg1 ;
-(char)internetReachable;
-(void)setInternetReachable:(char)arg1 ;
-(char)internetReachableViaOnlyWWAN;
-(void)setInternetReachableViaOnlyWWAN:(char)arg1 ;
-(void)setJobSupervisor:(JobAgentSupervisor *)arg1 ;
-(int)unlockNotificationToken;
-(void)setUnlockNotificationToken:(int)arg1 ;
-(void)dealloc;
-(void)start;
-(char)inBatterySaverMode;
-(void)setInBatterySaverMode:(char)arg1 ;
-(void)setStarted:(char)arg1 ;
-(char)isStarted;
-(char)hasPower;
-(NSObject*<OS_dispatch_queue>)runQueue;
-(void)setRunQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
@end

