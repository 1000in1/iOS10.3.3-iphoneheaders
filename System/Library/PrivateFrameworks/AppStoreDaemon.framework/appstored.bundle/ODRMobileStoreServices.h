/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:56:15 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/AppStoreDaemon.framework/appstored.bundle/appstored
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <appstored/appstored-Structs.h>
#import <appstored/DownloadAgentObserver.h>
#import <appstored/ODRStoreIntegrationProtocol.h>

@class BKSApplicationStateMonitor, NSMutableSet, NSRecursiveLock, NSMutableDictionary, SSURLBag, NSString;

@interface ODRMobileStoreServices : NSObject <DownloadAgentObserver, ODRStoreIntegrationProtocol> {

	BKSApplicationStateMonitor* _appStateMonitor;
	NSMutableSet* _activeDownloadPIDs;
	NSRecursiveLock* _activeDownloadPIDsLock;
	NSMutableDictionary* _downloadProgress;
	NSRecursiveLock* _downloadProgressLock;
	NSMutableDictionary* _downloadRequests;
	NSRecursiveLock* _downloadRequestsLock;
	SSURLBag* _storeURLBag;

}

@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(char)_isInternetHostReachability:(id)arg1 ;
+(char)_isURLContentValid:(id)arg1 error:(id*)arg2 ;
+(unsigned)_bandwithLimitForHost:(id)arg1 ;
+(id)_validDownloadKinds;
+(char)isRefreshRequiredForURL:(id)arg1 ;
-(void)PID:(long long)arg1 didEnterState:(id)arg2 ;
-(void)PID:(long long)arg1 didProgress:(double)arg2 ;
-(void)_setupStoreServices;
-(void)_setupAppStateMonitoring;
-(int)_totalBytesDownloadedForPID:(long long)arg1 ;
-(id)_formattedDownloadProgressStringForPID:(long long)arg1 ;
-(void)_addStatusForDownloadIdentifier:(long long)arg1 downloadRequests:(id)arg2 status:(id)arg3 ;
-(id)_activeDownloads;
-(void)_addStatusForASDDownload:(id)arg1 status:(id)arg2 ;
-(char)_shouldFinishDownloadForDownloadState:(id)arg1 ;
-(void)_cleanupDownloadWithPID:(long long)arg1 ;
-(void)_asynchronouslyEnforceDiskSpaceCushion;
-(id)_downloadEntityForPID:(long long)arg1 ;
-(void)_removePIDFromActiveDownloadPIDs:(long long)arg1 ;
-(void)_removePIDFromDownloadProgress:(long long)arg1 ;
-(void)_addPIDToActiveDownloadPIDs:(long long)arg1 ;
-(void)_handleOrphanDownloadForPID:(long long)arg1 withDownloadState:(id)arg2 ;
-(char)_doesRequestRequireRefresh:(id)arg1 ;
-(void)_updateDownloadProgressForPID:(long long)arg1 withProgress:(double)arg2 ;
-(long long)_downloadURL:(id)arg1 toDestination:(id)arg2 usingStreamingZip:(char)arg3 forClientWithBundleID:(id)arg4 priority:(double)arg5 isDiscretionary:(char)arg6 requiredSize:(int)arg7 hashingData:(id)arg8 preflight:(char)arg9 tryCachingServer:(char)arg10 jobID:(long long)arg11 withCompletionBlock:(/*^block*/id)arg12 ;
-(CFStringRef)_copyDeviceGUID;
-(void)_fetchManifestWithPlistData:(id)arg1 appBundleIdentifier:(id)arg2 variant:(id)arg3 completionBlock:(/*^block*/id)arg4 ;
-(id)_baseMetricsURLForTopic:(id)arg1 ;
-(id)_activeDownloadPIDs;
-(id)_authenticatedAccountPromptStyle:(int)arg1 error:(id*)arg2 ;
-(void)_fetchManifestWithPlistData:(id)arg1 appBundleIdentifier:(id)arg2 variant:(id)arg3 account:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(char)_fetchManifestResponseIsAuthenticationError:(id)arg1 ;
-(double)_downloadProgressForPID:(long long)arg1 ;
-(void)_refreshStoreBag;
-(id)_metricsURL;
-(void)_appStateDidChange:(id)arg1 ;
-(void)cancelRequestsForApplicationWithBundleID:(id)arg1 ;
-(void)scanAndCleanQueue;
-(id)currentDownloadRequestsForApplicationBundleID:(id)arg1 ;
-(long long)addRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)removeRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)pauseRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)resumeRequest:(id)arg1 withCompletionBlock:(/*^block*/id)arg2 ;
-(void)updatePriorityOfRequest:(id)arg1 ;
-(void)addIntegrityHashingFromAssetPack:(id)arg1 toRequest:(id)arg2 ;
-(void)reportOnTopic:(id)arg1 withData:(id)arg2 ;
-(void)fetchManifestForAdamID:(id)arg1 withExternalVersionID:(id)arg2 variant:(id)arg3 appBundleIdentifier:(id)arg4 isMachineVPP:(char)arg5 withCompletionBlock:(/*^block*/id)arg6 ;
-(void)fetchManifestForBetaApplicationWithAdamID:(id)arg1 withExternalVersionID:(id)arg2 bundleShortVersion:(id)arg3 bundleVersion:(id)arg4 variant:(id)arg5 appBundleIdentifier:(id)arg6 isMachineVPP:(char)arg7 withCompletionBlock:(/*^block*/id)arg8 ;
-(id)init;
-(void)dealloc;
-(id)status;
@end

