/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:51:56 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <AccessibilityUtilities/AccessibilityUtilities-Structs.h>
@class NSMutableDictionary, NSMutableSet, NSString;

@interface AXIPCServer : NSObject {

	/*^block*/id _defaultHandler;
	CFRunLoopSourceRef _serverRunLoopSource;
	CFRunLoopSourceRef _clientInvalidationSource;
	unsigned _serverPort;
	unsigned _clientInvalidationPort;
	NSMutableDictionary* _validSecurityTokens;
	NSMutableSet* _connectedClients;
	/*^block*/id _clientInvalidationHandler;
	NSMutableDictionary* _entitlements;
	unsigned _assignedServerPort;
	unsigned _customQueueSize;
	char _running;
	char _perPidService;
	NSString* _serviceName;
	NSMutableDictionary* _handlers;

}

@property (assign,getter=isRunning,nonatomic) char running;               //@synthesize running=_running - In the implementation block
@property (nonatomic,retain) NSString * serviceName;                      //@synthesize serviceName=_serviceName - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * handlers;              //@synthesize handlers=_handlers - In the implementation block
@property (nonatomic,copy) id defaultHandler; 
@property (assign,nonatomic) char perPidService;                          //@synthesize perPidService=_perPidService - In the implementation block
@property (nonatomic,readonly) unsigned machPort;                         //@synthesize serverPort=_serverPort - In the implementation block
@property (nonatomic,copy) id clientInvalidationCallback; 
-(void)dealloc;
-(id)description;
-(char)isRunning;
-(NSString *)serviceName;
-(void)setQueueSize:(unsigned)arg1 ;
-(unsigned)machPort;
-(void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3 ;
-(void)addPossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2 ;
-(void)removeAllHandlersForTarget:(id)arg1 ;
-(char)stopServerWithError:(id*)arg1 ;
-(id)initWithPort:(unsigned)arg1 serviceRunLoopSource:(CFRunLoopSourceRef)arg2 ;
-(char)startServerWithError:(id*)arg1 ;
-(void)setPerPidService:(char)arg1 ;
-(id)initWithServiceName:(id)arg1 perPidService:(char)arg2 ;
-(void)setDefaultHandler:(id)arg1 ;
-(void)_startServerThread;
-(char)_handleErrorWithMessage:(id)arg1 outError:(id*)arg2 ;
-(void)removeHandlerForKey:(int)arg1 ;
-(void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 async:(char)arg3 forKey:(int)arg4 ;
-(void)_registerContext:(id)arg1 forKey:(int)arg2 ;
-(void)_addPossibleRequiredEntitlementsToMessageWithKey:(int)arg1 first:(id)arg2 vothers:(void*)arg3 ;
-(id)_clientIdentificationForAuditToken:(SCD_Struct_AX4)arg1 ;
-(void)_applyCustomQueueSize;
-(char)perPidService;
-(char)_clientWithPort:(unsigned)arg1 auditToken:(SCD_Struct_AX4)arg2 hasAnyEntitlementRequiredForMessage:(id)arg3 ;
-(void)_handleClientRegistration:(id)arg1 ;
-(id)defaultHandler;
-(void)setServiceRunLoopSource:(CFRunLoopSourceRef)arg1 ;
-(id)clientInvalidationCallback;
-(void)setClientInvalidationCallback:(id)arg1 ;
-(void)setHandler:(/*^block*/id)arg1 forKey:(int)arg2 ;
-(void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3 possibleRequiredEntitlements:(id)arg4 ;
-(void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 async:(char)arg3 forKey:(int)arg4 possibleRequiredEntitlements:(id)arg5 ;
-(void)removePossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2 ;
-(void)_handleClientInvalidation:(unsigned)arg1 ;
-(void)_handleIncomingMessage:(id)arg1 securityToken:(SCD_Struct_AX10)arg2 auditToken:(SCD_Struct_AX4)arg3 clientPort:(unsigned)arg4 completion:(/*^block*/id)arg5 ;
-(void)setRunning:(char)arg1 ;
-(void)setServiceName:(NSString *)arg1 ;
-(NSMutableDictionary *)handlers;
-(void)setHandlers:(NSMutableDictionary *)arg1 ;
@end

