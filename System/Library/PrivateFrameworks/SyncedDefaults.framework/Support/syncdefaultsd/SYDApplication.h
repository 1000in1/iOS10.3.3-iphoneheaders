/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:57:47 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/SyncedDefaults.framework/Support/syncdefaultsd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol OS_dispatch_queue;
#import <syncdefaultsd/syncdefaultsd-Structs.h>
@class NSOperationQueue, NSString, NSObject, NSURL, NSMutableDictionary, NSMutableSet, SYDScheduler, SYDJournal, SYDApplicationScheduling, SYDWriteTracker;

@interface SYDApplication : NSObject {

	NSOperationQueue* queue;
	NSString* bundleIdentifier;
	NSString* storeIdentifier;
	NSString* schedulerIdentifier;
	NSString* additionalChangeNotificationName;
	char _shouldResetOnFirstSync;
	NSObject*<OS_dispatch_queue> refreshQueue;
	NSURL* plistURL;
	NSMutableDictionary* plistCache;
	NSMutableSet* pendingDirtyKeys;
	NSMutableDictionary* pendingLocalData;
	SYDScheduler* scheduler;
	long long changeCount;
	long long initialSyncChangeCount;
	SYDJournal* journal;
	SYDApplicationScheduling* scheduling;
	unsigned debugCount;
	char inactive;
	char _daemon;
	char isAdditionalStore;
	char simulatePushNotification;
	SYDWriteTracker* _writeTracker;

}

@property (nonatomic,readonly) SYDWriteTracker * writeTracker;                           //@synthesize writeTracker=_writeTracker - In the implementation block
@property (nonatomic,retain) SYDScheduler * scheduler; 
@property (nonatomic,readonly) SYDApplicationScheduling * scheduling; 
@property (nonatomic,readonly) NSString * bundleIdentifier; 
@property (nonatomic,copy) NSString * storeIdentifier; 
@property (nonatomic,readonly) NSString * schedulerIdentifier; 
@property (nonatomic,readonly) char isAdditionalStore; 
@property (nonatomic,readonly) NSURL * plistURL; 
@property (getter=isDevelopmentApp,nonatomic,readonly) char developmentApp; 
@property (nonatomic,readonly) char daemon;                                              //@synthesize daemon=_daemon - In the implementation block
@property (nonatomic,readonly) NSString * displayIdentifier; 
@property (assign,nonatomic) char inactive; 
+(id)_schedulerIdentifierMapping;
+(id)defaultSchedulerIdentifier;
+(id)installInfoForBundleIdentifiers:(id)arg1 ;
+(id)knownDaemons;
+(id)installInfoForBundleIdentifier:(id)arg1 ;
+(id)additionalStoreIdentifiersForBundleIdentifier:(id)arg1 installInfo:(id)arg2 ;
+(id)defaultSchedulerIdentifierForStoreIdentifier:(id)arg1 ;
+(char)storeIdentifierIsRegisteredWithMultipleInternalApps:(id)arg1 ;
+(char)storeIdentifierShouldResetOnDisable:(id)arg1 ;
+(id)schedulerIdentifiers;
+(Class)classForSchedulerWithIdentifier:(id)arg1 ;
+(char)installInfoAllowsKeyValueStore:(id)arg1 forBundleIdentifier:(id)arg2 ;
-(id)_initWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2 persistentState:(id)arg3 writeTracker:(id)arg4 ;
-(int)refreshStoreIdentifierWithInstallInfo:(id)arg1 ;
-(void)_discardPlistForced:(char)arg1 ;
-(NSURL *)plistURL;
-(void)resetSyncState;
-(void)_loadPlistIfNecessaryHelper;
-(SYDWriteTracker *)writeTracker;
-(char)_writePlistIfNecessaryHelper;
-(void)_loadPlistIfNecessary;
-(char)_writePlistIfNecessary;
-(id)_logLock;
-(void)_logTo:(id)arg1 store:(id)arg2 tag:(id)arg3 ;
-(id)mergeLocalArray:(id)arg1 remoteArray:(id)arg2 baseArray:(id)arg3 conflictPolicy:(int)arg4 ;
-(id)mergeLocalDictionary:(id)arg1 remoteDictionary:(id)arg2 baseDictionary:(id)arg3 conflictPolicy:(int)arg4 ;
-(void)_logStoreBeforeMergeWithRemoteChanges:(id)arg1 ;
-(void*)applyMergePolicy:(int)arg1 conflictPolicy:(int)arg2 forKey:(CFStringRef)arg3 localValue:(void*)arg4 remoteValue:(void*)arg5 baseValue:(void*)arg6 ;
-(void)_logStoreAfterMerge;
-(void)_stopSynchronizingWithServerChanges:(id)arg1 ;
-(void)_discardPlistIfPossible;
-(id)persistentState;
-(void)resetAllValuesForce:(char)arg1 ;
-(SYDApplicationScheduling *)scheduling;
-(char)isDevelopmentApp;
-(char)isCloudSyncAllowed;
-(void)beginDebuggingStore;
-(void)endDebuggingStore;
-(id)initWithBundleIdentifier:(id)arg1 writeTracker:(id)arg2 ;
-(id)initWithBundleIdentifier:(id)arg1 persistentState:(id)arg2 writeTracker:(id)arg3 ;
-(id)initAdditionalStoreWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2 writeTracker:(id)arg3 ;
-(id)initAdditionalStoreWithBundleIdentifier:(id)arg1 storeIdentifier:(id)arg2 persistentState:(id)arg3 writeTracker:(id)arg4 ;
-(int)refreshStoreIdentifier;
-(void)discardJournalEntriesWithChangeCount:(long long)arg1 ;
-(id)storeLocalChanges:(id)arg1 withKnownChangeCount:(long long)arg2 ;
-(id)startSynchronizingWithReason:(int)arg1 ;
-(void)setDefaultsConfig:(id)arg1 ;
-(void)stopSynchronizingWithServerChanges:(id)arg1 reason:(int)arg2 ;
-(char)wasSyncSuccessfulWithServerChanges:(id)arg1 ;
-(void)deactivateWithHandler:(/*^block*/id)arg1 ;
-(int)filteredSyncReasonForReason:(int)arg1 ;
-(NSString *)schedulerIdentifier;
-(char)isAdditionalStore;
-(id)description;
-(NSString *)bundleIdentifier;
-(NSString *)displayIdentifier;
-(void)didReceiveMemoryWarning;
-(void)perform:(/*^block*/id)arg1 ;
-(void)accountDidChange:(int)arg1 ;
-(void)setInactive:(char)arg1 ;
-(char)inactive;
-(NSString *)storeIdentifier;
-(void)setStoreIdentifier:(NSString *)arg1 ;
-(SYDScheduler *)scheduler;
-(char)daemon;
-(id)diagnosticDescription;
-(void)setScheduler:(SYDScheduler *)arg1 ;
@end

