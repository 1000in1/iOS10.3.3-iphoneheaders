/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:57:09 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/MediaRemote.framework/Support/mediaremoted
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <mediaremoted/MRDAVRoutingDelegate.h>
#import <mediaremoted/MRDXPCMessageHandling.h>

@class NSMutableSet, MRDAVRoutingDataSource, MSVSystemDialog, NSString;

@interface MRDAVRoutingServer : NSObject <MRDAVRoutingDelegate, MRDXPCMessageHandling> {

	int _externalScreenTypeDidChangeToken;
	NSMutableSet* _routeHashesToIgnorePortStatusFailures;
	int _mostRecentStatus;
	MRDAVRoutingDataSource* _routingDataSource;
	MSVSystemDialog* _activePasswordDialog;

}

@property (nonatomic,retain) MSVSystemDialog * activePasswordDialog;                    //@synthesize activePasswordDialog=_activePasswordDialog - In the implementation block
@property (nonatomic,readonly) MRDAVRoutingDataSource * routingDataSource;              //@synthesize routingDataSource=_routingDataSource - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)pickRouteWithUID:(id)arg1 ;
-(void)handleXPCMessage:(id)arg1 fromClient:(id)arg2 ;
-(id)initWithRoutingDataSource:(id)arg1 ;
-(MRDAVRoutingDataSource *)routingDataSource;
-(void)routingDataSourcePickedRouteVolumeControlAvailabilityDidChange:(id)arg1 ;
-(void)routingDataSourceExternalScreenDidChange:(id)arg1 ;
-(void)routingDataSource:(id)arg1 statusDidChange:(int)arg2 forRoute:(id)arg3 ;
-(void)routingDataSourcePickableRoutesDidChange:(id)arg1 ;
-(id)_descriptionForDiscoveryMode:(unsigned)arg1 ;
-(void)_updateSystemRouteDiscoveryMode;
-(char)_setPickedRoute:(id)arg1 withPassword:(id)arg2 options:(unsigned)arg3 ;
-(void)_handleSetRouteDiscoveryModeMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleGetPickableRoutesMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleSetPickedRouteMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleGetPickedRouteHasVolumeControlMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleSetPickedRouteHasVolumeControlMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleGetExternalScreenTypeMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleGetSavedAVRoutePasswordMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleSetSavedAVRoutePasswordMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleUnpickAirPlayRoutesMessage:(id)arg1 fromClient:(id)arg2 ;
-(void)_handleSetApplicationPickedRoutes:(id)arg1 fromClient:(id)arg2 ;
-(char)setPickedRoute:(id)arg1 withPassword:(id)arg2 options:(unsigned)arg3 ;
-(void)_setApplicationPickedRoutes:(id)arg1 updateRoutes:(char)arg2 forClient:(id)arg3 ;
-(void)_postExternalScreenDidChange;
-(void)_handleAuthenticationFailureForRoute:(id)arg1 withOptions:(unsigned)arg2 ;
-(void)_handleErrorStatus:(int)arg1 forRoute:(id)arg2 withOptions:(unsigned)arg3 ;
-(void)_clientInvalidatedNotification:(id)arg1 ;
-(void)_presentPasswordDialogForRoute:(id)arg1 withOptions:(unsigned)arg2 ;
-(void)setActivePasswordDialog:(MSVSystemDialog *)arg1 ;
-(char)routeIsActiveWithUID:(id)arg1 ;
-(id)clientsForApplicationPickedRoute:(id)arg1 ;
-(id)clientsWithApplicationPickedRoutes;
-(MSVSystemDialog *)activePasswordDialog;
-(void)dealloc;
-(id)pickableRoutesForCategory:(id)arg1 ;
-(id)applicationPickedRoutes;
-(void)_registerNotifications;
-(void)_unregisterNotifications;
@end

