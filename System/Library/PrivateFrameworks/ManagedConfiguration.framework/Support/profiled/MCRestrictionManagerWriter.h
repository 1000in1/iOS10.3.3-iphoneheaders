/*
* This header is generated by classdump-dyld 1.0
* on Sunday, December 31, 2017 at 12:57:06 AM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/Support/profiled
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <ManagedConfiguration/MCRestrictionManager.h>

@class NSDictionary;

@interface MCRestrictionManagerWriter : MCRestrictionManager {

	int _senderPID;
	NSDictionary* _clientTypeLoaders;

}

@property (nonatomic,readonly) NSDictionary * clientTypeLoaders;              //@synthesize clientTypeLoaders=_clientTypeLoaders - In the implementation block
@property (assign,nonatomic) int senderPID;                                   //@synthesize senderPID=_senderPID - In the implementation block
+(id)enforcedAppWhitelistRestrictions;
+(id)sharedManager;
-(char)setClientRestrictions:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarning:(id)arg5 outRestrictionsChanged:(char*)arg6 outEffectiveSettingsChanged:(char*)arg7 outRecomputedNag:(char*)arg8 outError:(id*)arg9 ;
-(char)recomputeNagMetadata;
-(char)setClientRestrictions:(id)arg1 appsAndOptions:(id)arg2 clientType:(id)arg3 clientUUID:(id)arg4 localizedClientDescription:(id)arg5 localizedWarning:(id)arg6 outRestrictionsChanged:(char*)arg7 outEffectiveSettingsChanged:(char*)arg8 outRecomputedNag:(char*)arg9 outError:(id*)arg10 ;
-(void)setSenderPID:(int)arg1 ;
-(void)setIntersectionValues:(id)arg1 forSetting:(id)arg2 ;
-(void)setUnionValues:(id)arg1 forSetting:(id)arg2 ;
-(void)notifyHaveSeenComplianceMessageWithLastLockDate:(id)arg1 ;
-(char)setParametersForSettingsByType:(id)arg1 configurationUUID:(id)arg2 toSystem:(char)arg3 user:(char)arg4 passcode:(id)arg5 ;
-(void)recomputeUserRestrictionsAndEffectiveUserSettings;
-(void)recomputeEffectiveUserSettingsPasscode:(id)arg1 ;
-(char)setAllClientRestrictions:(id)arg1 outRestrictionsChanged:(char*)arg2 outEffectiveSettingsChanged:(char*)arg3 outRecomputedNag:(char*)arg4 outError:(id*)arg5 ;
-(char)setSystemProfileRestrictions:(id)arg1 userProfileRestrictions:(id)arg2 outRestrictionsChanged:(char*)arg3 outEffectiveSettingsChanged:(char*)arg4 outAppWhitelistSettingsChanged:(char*)arg5 outRecomputedNag:(char*)arg6 outError:(id*)arg7 ;
-(char)setClientRestrictions:(id)arg1 system:(char)arg2 clientType:(id)arg3 clientUUID:(id)arg4 localizedClientDescription:(id)arg5 localizedWarning:(id)arg6 shouldRecomputeNag:(char)arg7 outRestrictionsChanged:(char*)arg8 outEffectiveSettingsChanged:(char*)arg9 outRecomputedNag:(char*)arg10 outError:(id*)arg11 ;
-(char)setClientRestrictions:(id)arg1 system:(char)arg2 clientType:(id)arg3 clientUUID:(id)arg4 localizedClientDescription:(id)arg5 localizedWarning:(id)arg6 outRestrictionsChanged:(char*)arg7 outEffectiveSettingsChanged:(char*)arg8 outRecomputedNag:(char*)arg9 outError:(id*)arg10 ;
-(void)memberQueueCommitRestrictionsToDisk;
-(char)memberQueueRecomputeEffectiveUserSettingsPasscode:(id)arg1 ;
-(void)memberQueueCommitUserSettingsToDisk;
-(char)memberQueueSetAllClientRestrictions:(id)arg1 outRestrictionsChanged:(char*)arg2 outEffectiveSettingsChanged:(char*)arg3 outError:(id*)arg4 ;
-(char)memberQueueSetSystemClientRestrictions:(id)arg1 userClientRestrictions:(id)arg2 outRestrictionsChanged:(char*)arg3 outEffectiveSettingsChanged:(char*)arg4 outError:(id*)arg5 ;
-(void)memberQueueCommitClientRestrictionsToDisk;
-(char)setClientRestrictions:(id)arg1 appsAndOptions:(id)arg2 system:(char)arg3 clientType:(id)arg4 clientUUID:(id)arg5 localizedClientDescription:(id)arg6 localizedWarning:(id)arg7 shouldRecomputeNag:(char)arg8 outRestrictionsChanged:(char*)arg9 outEffectiveSettingsChanged:(char*)arg10 outRecomputedNag:(char*)arg11 outError:(id*)arg12 ;
-(id)_liveClientUUIDsForClientType:(id)arg1 outLoaderMissing:(char*)arg2 ;
-(id)orphanedClientUUIDsForClientRestrictionDictionary:(id)arg1 ;
-(void)memberQueueCommitEffectiveUserSettingsToDiskOldEffectiveUserSettings:(id)arg1 ;
-(id)_memberQueueNewUserSettingsWithParametersForSettingsByType:(id)arg1 currentUserSettings:(id)arg2 ;
-(char)memberQueueSetParametersForSettingsByType:(id)arg1 configurationUUID:(id)arg2 toSystem:(char)arg3 user:(char)arg4 passcode:(id)arg5 ;
-(void)setBoolValue:(char)arg1 ask:(char)arg2 forSetting:(id)arg3 ;
-(char)setProfileRestrictions:(id)arg1 outRestrictionsChanged:(char*)arg2 outEffectiveSettingsChanged:(char*)arg3 outAppWhitelistSettingsChanged:(char*)arg4 outRecomputedNag:(char*)arg5 outError:(id*)arg6 ;
-(char)setClientRestrictions:(id)arg1 clientType:(id)arg2 clientUUID:(id)arg3 localizedClientDescription:(id)arg4 localizedWarning:(id)arg5 shouldRecomputeNag:(char)arg6 outRestrictionsChanged:(char*)arg7 outEffectiveSettingsChanged:(char*)arg8 outRecomputedNag:(char*)arg9 outError:(id*)arg10 ;
-(id)orphanCheckExemptClientTypes;
-(id)orphanCheckUnexemptClientTypes;
-(void)setShowNagMessage;
-(int)senderPID;
-(NSDictionary *)clientTypeLoaders;
-(void)setUserInfo:(id)arg1 forClientUUID:(id)arg2 ;
-(char)removeOrphanedClientRestrictions;
-(void)setValue:(id)arg1 forSetting:(id)arg2 ;
-(void)removeValueSetting:(id)arg1 ;
-(void)resetAllSettingsToDefaults;
-(void)notifyClientsToRecomputeCompliance;
-(id)_init;
-(void)removeBoolSetting:(id)arg1 ;
-(char)setParametersForSettingsByType:(id)arg1 ;
-(void)setBoolValue:(char)arg1 forSetting:(id)arg2 ;
@end

