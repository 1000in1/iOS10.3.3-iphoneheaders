/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:20:41 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/CFNetwork.framework/CFNetwork
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <CFNetwork/CFNetwork-Structs.h>
#import <CFNetwork/NSURLSessionTask.h>

@protocol OS_dispatch_queue;
@class NSString, NSURLRequest, NSURLResponse, NSError, NSURLSession, NSObject, NSURL, NSData, NSDictionary, NSArray, NSURLSessionConfiguration, NSURLSessionTaskHTTPAuthenticator, NSURLSessionTaskDependencyTree, NSURLSessionTaskDependency, NSMutableArray;

@interface __NSCFURLSessionTask : NSURLSessionTask {

	unsigned _taskIdentifier;
	NSString* _taskDescription;
	NSURLRequest* _originalRequest;
	NSURLRequest* _currentRequest;
	NSURLResponse* _response;
	long long _countOfBytesReceived;
	long long _countOfBytesSent;
	long long _countOfBytesExpectedToSend;
	long long _countOfBytesExpectedToReceive;
	int _state;
	NSError* _error;
	CFURLRequestRef _currentCFURLRequest;
	double _startTime;
	NSURLSession* _session;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSString* _ledBellyServiceIdentifier;
	NSURL* _ledBellyFallbackURL;
	NSData* __TCPConnectionMetadata;
	float _priorityHint;
	long long _priorityValue;
	double _loadingPriorityValue;
	long long _bytesPerSecondLimitValue;
	PerformanceTimingRef _performanceTiming;
	NSDictionary* _backgroundTaskTimingData;
	char _shouldSkipPreferredClientCertificateLookup;
	char _cacheOnly;
	char _preventsSystemHTTPProxyAuthentication;
	NSDictionary* _legacySocketStreamProperties;
	CFHSTSPolicyRef _cfHSTS;
	CFURLCacheRef _cfCache;
	CFURLCredentialStorageRef _cfCreds;
	OpaqueCFHTTPCookieStorageRef _cfCookies;
	int _cachePolicy;
	double _timeoutInterval;
	NSDictionary* _proxySettings;
	NSDictionary* _sslSettings;
	char _shouldPipelineHTTP;
	char _shouldUsePipelineHeuristics;
	char _shouldSkipPipelineProbe;
	char _shouldHandleCookies;
	int _cookieAcceptPolicy;
	char _preventsIdleSystemSleep;
	NSArray* _contentDispositionFallbackArray;
	char _allowsCellular;
	int _networkServiceType;
	char _prohibitAuthUI;
	char _strictContentLength;
	long long _suspensionThreshhold;
	NSString* _boundInterfaceIdentifier;
	char _disallowCellular;
	unsigned long _allowedProtocolTypes;
	long _requestPriority;
	long long _expectedWorkload;
	double _timeWindowDelay;
	double _timeWindowDuration;
	NSString* _uniqueIdentifier;
	unsigned _powerAssertion;
	unsigned _darkWakePowerAssertion;
	CFDictionaryRef _cachedSocketStreamProperties;
	NSURLSessionConfiguration* _configuration;
	char _connectionIsCellular;
	id _protocolForTask;
	NSURLSessionTaskHTTPAuthenticator* _authenticator;
	char _shouldReportTimingDataToAWD;
	NSString* _storagePartitionIdentifier;
	NSDictionary* _dependencyInfo;
	NSDictionary* _DuetActivityProperties;
	NSURLSessionTaskDependencyTree* _dependencyTree;
	NSURLSessionTaskDependency* _taskDependency;
	NSString* _pathToDownloadTaskFile;
	NSMutableArray* _transactionMetrics;
	NSDictionary* _trailers;

}
+(char)supportsSecureCoding;
-(void)set_powerAssertion:(unsigned)arg1 ;
-(void)updateCurrentRequest:(id)arg1 ;
-(id)initWithOriginalRequest:(id)arg1 updatedRequest:(id)arg2 ident:(unsigned)arg3 session:(id)arg4 ;
-(const XCookieStorage*)_createXCookieStorage;
-(const XCredentialStorage*)_createXCredentialStorage;
-(const XURLCache*)_createXURLCache;
-(CFURLRequestRef)_currentCFURLRequest;
-(BOOL)shouldHandleCookiesAndSchemeIsAppropriate;
-(id)_protocolForTask;
-(void)set_protocolForTask:(id)arg1 ;
-(CFHSTSPolicyRef)_copyHSTSPolicy;
-(void)setCountOfBytesExpectedToReceive:(long long)arg1 ;
-(void)_reportTimingDataToAWD;
-(void)setCountOfBytesReceived:(long long)arg1 ;
-(void)_onqueue_releasePowerAsssertion;
-(long long)computeAdjustedPoolPriority;
-(id)_legacySocketStreamProperties;
-(void)set_legacySocketStreamProperties:(id)arg1 ;
-(id)currentRequest_URL;
-(void)_onSessionQueue_cleanupAndBreakCycles;
-(void)_onqueue_adjustPriorityHint:(float)arg1 ;
-(id)_pathToDownloadTaskFile;
-(void)set_suspensionThreshhold:(long long)arg1 ;
-(CFDictionaryRef)_copySocketStreamProperties;
-(void)setOriginalRequest:(id)arg1 ;
-(long long)countOfBytesExpectedToReceive;
-(void)set_cachePolicy:(int)arg1 ;
-(void)set_preventsSystemHTTPProxyAuthentication:(char)arg1 ;
-(long long)_priorityValue;
-(long long)_bytesPerSecondLimit;
-(void)set_backgroundTaskTimingData:(id)arg1 ;
-(id)_storagePartitionIdentifier;
-(void)set_trailers:(id)arg1 ;
-(id)_backgroundTaskTimingData;
-(double)_loadingPriorityValue;
-(void)setCurrentRequest:(id)arg1 ;
-(double)_loadingPriority;
-(void)setDependencyTree:(id)arg1 ;
-(id)_dependencyInfo;
-(void)setTaskDependency:(id)arg1 ;
-(CFDictionaryRef)_copyATSState;
-(CFURLRequestRef)_copyCurrentCFURLRequest;
-(CFURLRequestRef)_copyOriginalCFURLRequest;
-(PerformanceTimingRef)_performanceTiming;
-(void)_setSocketProperties:(CFDictionaryRef)arg1 connectionProperties:(CFDictionaryRef)arg2 ;
-(void)_setExplicitStorageSession:(CFURLStorageSessionRef)arg1 ;
-(void)_setExplicitCookieStorage:(OpaqueCFHTTPCookieStorageRef)arg1 ;
-(void)set_timeoutInterval:(double)arg1 ;
-(void)set_shouldPipelineHTTP:(char)arg1 ;
-(void)set_shouldUsePipelineHeuristics:(char)arg1 ;
-(void)set_shouldSkipPipelineProbe:(char)arg1 ;
-(void)set_shouldHandleCookies:(char)arg1 ;
-(void)set_cookieAcceptPolicy:(int)arg1 ;
-(void)set_preventsIdleSystemSleep:(char)arg1 ;
-(void)set_contentDispositionFallbackArray:(id)arg1 ;
-(void)set_allowsCellular:(char)arg1 ;
-(void)set_networkServiceType:(int)arg1 ;
-(void)set_proxySettings:(id)arg1 ;
-(void)set_sslSettings:(id)arg1 ;
-(void)set_boundInterfaceIdentifier:(id)arg1 ;
-(void)set_disallowCellular:(char)arg1 ;
-(void)set_allowedProtocolTypes:(unsigned long)arg1 ;
-(void)set_requestPriority:(long)arg1 ;
-(void)set_expectedWorkload:(long long)arg1 ;
-(void)set_timeWindowDelay:(double)arg1 ;
-(void)set_timeWindowDuration:(double)arg1 ;
-(int)_cachePolicy;
-(double)_timeoutInterval;
-(id)_proxySettings;
-(id)_sslSettings;
-(char)_shouldPipelineHTTP;
-(char)_shouldUsePipelineHeuristics;
-(char)_shouldSkipPipelineProbe;
-(long)_requestPriority;
-(unsigned long)_allowedProtocolTypes;
-(char)_prohibitAuthUI;
-(char)_strictContentLength;
-(long long)_suspensionThreshhold;
-(char)_preventsIdleSystemSleep;
-(long long)_expectedWorkload;
-(double)_timeWindowDelay;
-(double)_timeWindowDuration;
-(void)_takePreventIdleSleepAssertionIfAppropriate;
-(void)_setConnectionIsCellular:(char)arg1 ;
-(id)_ledBellyFallbackURL;
-(id)_ledBellyServiceIdentifier;
-(void)set_ledBellyServiceIdentifier:(id)arg1 ;
-(void)_releasePreventIdleSleepAssertionIfAppropriate;
-(char)_shouldSkipPreferredClientCertificateLookup;
-(void)_getAuthenticationHeadersForResponse:(CFURLResponseRef)arg1 completionHandler:(/*^block*/id)arg2 ;
-(CFSetRef)_getAuthenticatorStatusCodes;
-(char)_cacheOnly;
-(id)_DuetActivityProperties;
-(void)set_TCPConnectionMetadata:(id)arg1 ;
-(id)_TCPConnectionMetadata;
-(char)_preventsSystemHTTPProxyAuthentication;
-(char)_shouldReportTimingDataToAWD;
-(id)currentRequest_mainDocumentURL;
-(int)_cookieAcceptPolicy;
-(void)setTaskIdentifier:(unsigned)arg1 ;
-(id)_boundInterfaceIdentifier;
-(char)_disallowCellular;
-(int)_networkServiceType;
-(void)adjustConditionalConnectionProperties:(CFDictionaryRef)arg1 ;
-(void)initializeHTTPAuthenticatorWithSessionConfiguration:(id)arg1 ;
-(void)_initializeTimingDataWithSessionConfiguration:(id)arg1 ;
-(void)_prepareNewTimingDataContainer;
-(id)_transactionMetrics;
-(void)set_loadingPriority:(double)arg1 ;
-(void)addAdditionalHeadersToRequest:(CFURLRequestRef)arg1 ;
-(CFHSTSPolicyRef)_cfHSTS;
-(CFURLCacheRef)_cfCache;
-(CFURLCredentialStorageRef)_cfCreds;
-(OpaqueCFHTTPCookieStorageRef)_cfCookies;
-(char)_shouldHandleCookies;
-(id)_contentDispositionFallbackArray;
-(char)_allowsCellular;
-(void)set_uniqueIdentifier:(id)arg1 ;
-(void)set_bytesPerSecondLimit:(long long)arg1 ;
-(void)set_shouldReportTimingDataToAWD:(char)arg1 ;
-(id)_trailers;
-(void)set_priorityValue:(long long)arg1 ;
-(void)set_loadingPriorityValue:(double)arg1 ;
-(void)set_currentCFURLRequest:(CFURLRequestRef)arg1 ;
-(int)_createAssertionWithType:(CFStringRef)arg1 name:(CFStringRef)arg2 assertion:(unsigned*)arg3 ;
-(unsigned)_darkWakePowerAssertion;
-(void)set_darkWakePowerAssertion:(unsigned)arg1 ;
-(void)set_prohibitAuthUI:(char)arg1 ;
-(void)set_strictContentLength:(char)arg1 ;
-(void)set_cfCache:(CFURLCacheRef)arg1 ;
-(void)set_cfCreds:(CFURLCredentialStorageRef)arg1 ;
-(void)set_cfCookies:(OpaqueCFHTTPCookieStorageRef)arg1 ;
-(void)set_cfHSTS:(CFHSTSPolicyRef)arg1 ;
-(void)set_dependencyInfo:(id)arg1 ;
-(id)dependencyTree;
-(void)set_priority:(long long)arg1 ;
-(void)set_ledBellyFallbackURL:(id)arg1 ;
-(void)set_performanceTiming:(PerformanceTimingRef)arg1 ;
-(void)set_shouldSkipPreferredClientCertificateLookup:(char)arg1 ;
-(void)set_cacheOnly:(char)arg1 ;
-(char)_connectionIsCellular;
-(id)taskDependency;
-(void)set_DuetActivityProperties:(id)arg1 ;
-(long long)countOfBytesExpectedToSend;
-(void)setCountOfBytesExpectedToSend:(long long)arg1 ;
-(void)setCountOfBytesSent:(long long)arg1 ;
-(void)cancel;
-(void)dealloc;
-(id)description;
-(int)state;
-(void)setState:(int)arg1 ;
-(id)response;
-(id)_uniqueIdentifier;
-(void)setStartTime:(double)arg1 ;
-(void)suspend;
-(id)copyWithZone:(NSZone*)arg1 ;
-(float)priority;
-(void)setPriority:(float)arg1 ;
-(double)startTime;
-(void)resume;
-(long long)_priority;
-(id)initWithTask:(id)arg1 ;
-(void)setSession:(id)arg1 ;
-(long long)countOfBytesSent;
-(void)setResponse:(id)arg1 ;
-(id)originalRequest;
-(void)set_storagePartitionIdentifier:(id)arg1 ;
-(void)set_pathToDownloadTaskFile:(id)arg1 ;
-(unsigned)taskIdentifier;
-(id)workQueue;
-(id)session;
-(id)error;
-(void)setError:(id)arg1 ;
-(unsigned)_powerAssertion;
-(id)currentRequest;
-(id)taskDescription;
-(void)setTaskDescription:(id)arg1 ;
-(id)_timingData;
-(long long)countOfBytesReceived;
-(id)authenticator;
-(void)setAuthenticator:(id)arg1 ;
@end

