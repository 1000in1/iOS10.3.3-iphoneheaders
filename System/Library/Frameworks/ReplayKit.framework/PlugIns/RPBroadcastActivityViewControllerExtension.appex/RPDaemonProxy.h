/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 7:31:59 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/ReplayKit.framework/PlugIns/RPBroadcastActivityViewControllerExtension.appex/RPBroadcastActivityViewControllerExtension
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <RPBroadcastActivityViewControllerExtension/RPBroadcastActivityViewControllerExtension-Structs.h>
#import <libobjc.A.dylib/NSXPCConnectionDelegate.h>
#import <RPBroadcastActivityViewControllerExtension/RPDaemonProtocol.h>
#import <RPBroadcastActivityViewControllerExtension/RPClientProtocol.h>

@class NSXPCConnection, NSString;

@interface RPDaemonProxy : NSObject <NSXPCConnectionDelegate, RPDaemonProtocol, RPClientProtocol> {

	NSXPCConnection* _connection;

}

@property (nonatomic,retain) NSXPCConnection * connection;              //@synthesize connection=_connection - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)daemonProxy;
-(id)init;
-(NSXPCConnection *)connection;
-(void)setConnection:(NSXPCConnection *)arg1 ;
-(void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(char)arg3 ;
-(oneway void)pauseRecording;
-(oneway void)setMicrophoneEnabled:(char)arg1 ;
-(oneway void)startRecordingWindowLayerContextIDs:(id)arg1 windowSize:(CGSize)arg2 microphoneEnabled:(char)arg3 cameraEnabled:(char)arg4 broadcast:(char)arg5 systemRecording:(char)arg6 withHandler:(/*^block*/id)arg7 ;
-(oneway void)stopRecordingWithHandler:(/*^block*/id)arg1 ;
-(oneway void)stopRecordingWithStartClipDuration:(double)arg1 endClipDuration:(double)arg2 handler:(/*^block*/id)arg3 ;
-(oneway void)discardRecordingWithHandler:(/*^block*/id)arg1 ;
-(oneway void)clientDidResignActiveWithBundleID:(id)arg1 ;
-(oneway void)clientDidBecomeActiveWithBundleID:(id)arg1 ;
-(oneway void)resumeRecordingWithWindowLayerContextID:(unsigned)arg1 ;
-(oneway void)updateProcessIDForAudioCaptureWithPID:(int)arg1 ;
-(oneway void)stopRecordingWithError:(id)arg1 movieURL:(id)arg2 ;
-(oneway void)updateBroadcastServiceInfo:(id)arg1 ;
-(oneway void)setupBroadcastWithHostBundleID:(id)arg1 broadcastExtensionBundleID:(id)arg2 broadcastConfigurationData:(id)arg3 userInfo:(id)arg4 handler:(/*^block*/id)arg5 ;
@end

