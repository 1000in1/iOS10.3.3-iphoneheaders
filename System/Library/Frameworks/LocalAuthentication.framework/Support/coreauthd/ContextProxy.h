/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 7:25:42 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/LocalAuthentication.framework/Support/coreauthd
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/LAContextXPC.h>
#import <coreauthd/LAOriginatorProt.h>

@protocol LAContextCallbackXPC;
@class Context;

@interface ContextProxy : NSObject <LAContextXPC, LAOriginatorProt> {

	/*^block*/id _invalidationBlock;
	/*^block*/id _checkEntitlementBlock;
	char _cApiOrigin;
	int _processId;
	unsigned _userId;
	int _auditSessionId;
	id<LAContextCallbackXPC> _callback;
	unsigned _originatorId;
	Context* _managedContext;

}

@property (nonatomic,readonly) Context * managedContext;                       //@synthesize managedContext=_managedContext - In the implementation block
@property (nonatomic,readonly) char cApiOrigin;                                //@synthesize cApiOrigin=_cApiOrigin - In the implementation block
@property (nonatomic,readonly) int processId;                                  //@synthesize processId=_processId - In the implementation block
@property (nonatomic,readonly) unsigned userId;                                //@synthesize userId=_userId - In the implementation block
@property (nonatomic,readonly) int auditSessionId;                             //@synthesize auditSessionId=_auditSessionId - In the implementation block
@property (nonatomic,readonly) id<LAContextCallbackXPC> callback;              //@synthesize callback=_callback - In the implementation block
@property (nonatomic,readonly) unsigned originatorId;                          //@synthesize originatorId=_originatorId - In the implementation block
-(void)interruptWithReply:(/*^block*/id)arg1 ;
-(int)auditSessionId;
-(id)initWithContext:(id)arg1 processId:(int)arg2 userId:(unsigned)arg3 auditSessionId:(int)arg4 cApiOrigin:(char)arg5 checkEntitlementBlock:(/*^block*/id)arg6 invalidationBlock:(/*^block*/id)arg7 callback:(id)arg8 ;
-(void)evaluateACL:(id)arg1 cfOperation:(void*)arg2 options:(id)arg3 uiDelegate:(id)arg4 reply:(/*^block*/id)arg5 ;
-(Context *)managedContext;
-(void)dealloc;
-(id)description;
-(id<LAContextCallbackXPC>)callback;
-(unsigned)userId;
-(void)externalizedContextWithReply:(/*^block*/id)arg1 ;
-(void)serverPropertyForOption:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)setServerPropertyForOption:(int)arg1 value:(id)arg2 reply:(/*^block*/id)arg3 ;
-(void)evaluatePolicy:(int)arg1 options:(id)arg2 uiDelegate:(id)arg3 reply:(/*^block*/id)arg4 ;
-(void)evaluateACL:(id)arg1 operation:(int)arg2 options:(id)arg3 uiDelegate:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)isCredentialSet:(int)arg1 reply:(/*^block*/id)arg2 ;
-(void)setCredential:(id)arg1 type:(int)arg2 reply:(/*^block*/id)arg3 ;
-(void)invalidateWithError:(id)arg1 ;
-(void)resetWithReply:(/*^block*/id)arg1 ;
-(int)processId;
-(char)checkEntitlement:(id)arg1 ;
-(char)cApiOrigin;
-(void)evaluatePolicy:(int)arg1 options:(id)arg2 uiDelegate:(id)arg3 originator:(id)arg4 reply:(/*^block*/id)arg5 ;
-(void)evaluateACL:(id)arg1 operation:(id)arg2 options:(id)arg3 uiDelegate:(id)arg4 originator:(id)arg5 reply:(/*^block*/id)arg6 ;
-(unsigned)originatorId;
-(void)setCredential:(id)arg1 forProcessedEvent:(int)arg2 credentialType:(int)arg3 reply:(/*^block*/id)arg4 ;
-(void)failProcessedEvent:(int)arg1 failureError:(id)arg2 reply:(/*^block*/id)arg3 ;
@end

