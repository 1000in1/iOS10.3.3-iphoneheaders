/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:21:19 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UITextInputTraits.h>
@class NSString;


@protocol UITextInputTraits <NSObject>
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (nonatomic,copy) NSString * textContentType; 
@optional
-(int)autocapitalizationType;
-(void)setAutocapitalizationType:(int)arg1;
-(int)autocorrectionType;
-(void)setAutocorrectionType:(int)arg1;
-(int)spellCheckingType;
-(void)setSpellCheckingType:(int)arg1;
-(int)keyboardType;
-(void)setKeyboardType:(int)arg1;
-(int)keyboardAppearance;
-(void)setKeyboardAppearance:(int)arg1;
-(int)returnKeyType;
-(void)setReturnKeyType:(int)arg1;
-(char)enablesReturnKeyAutomatically;
-(void)setEnablesReturnKeyAutomatically:(char)arg1;
-(char)isSecureTextEntry;
-(void)setSecureTextEntry:(char)arg1;
-(NSString *)textContentType;
-(void)setTextContentType:(id)arg1;

@end

#import <UIKit/UITextInputTraits_Private.h>
#import <libobjc.A.dylib/NSCopying.h>

@class NSString, NSIndexSet, UIColor, UIImage, UIInputContextHistory;

@interface UITextInputTraits : NSObject <UITextInputTraits, UITextInputTraits_Private, NSCopying> {

	int autocapitalizationType;
	int autocorrectionType;
	int spellCheckingType;
	unsigned keyboardType : 8;
	unsigned keyboardAppearance : 8;
	int returnKeyType;
	char enablesReturnKeyAutomatically;
	char secureTextEntry;
	char devicePasscodeEntry;
	NSString* textContentType;
	CFCharacterSetRef textTrimmingSet;
	UIColor* insertionPointColor;
	UIColor* selectionBarColor;
	UIColor* selectionHighlightColor;
	UIImage* selectionDragDotImage;
	unsigned insertionPointWidth;
	int textLoupeVisibility;
	int textSelectionBehavior;
	id textSuggestionDelegate;
	char isSingleLineDocument;
	char contentsIsSingleValue;
	char acceptsEmoji;
	char acceptsDictationSearchResults;
	char forceEnableDictation;
	char forceDisableDictation;
	char forceDefaultDictationInfo;
	char returnKeyGoesToNextResponder;
	char acceptsFloatingKeyboard;
	char acceptsSplitKeyboard;
	char displaySecureTextUsingPlainText;
	char learnsCorrections;
	int emptyContentReturnKeyType;
	int shortcutConversionType;
	char suppressReturnKeyStyling;
	char useInterfaceLanguageForLocalization;
	char deferBecomingResponder;
	char enablesReturnKeyOnNonWhiteSpaceContent;
	NSString* autocorrectionContext;
	NSString* responseContext;
	char disablePrediction;
	char disableInputBars;
	char isCarPlayIdiom;
	NSString* recentInputIdentifier;
	NSRange validTextRange;
	int textScriptType;
	UIInputContextHistory* inputContextHistory;
	char manageRecentInputs;
	char hasDefaultContents;
	char displaySecureEditsUsingPlainText;
	NSIndexSet* PINEntrySeparatorIndexes;
	int forceDictationKeyboardType;

}

@property (nonatomic,copy) NSString * recentInputIdentifier; 
@property (assign,nonatomic) char manageRecentInputs; 
@property (assign,nonatomic) NSRange validTextRange; 
@property (nonatomic,copy) NSIndexSet * PINEntrySeparatorIndexes; 
@property (nonatomic,readonly) int dictationKeyboardType; 
@property (nonatomic,readonly) int dictationInfoKeyboardType; 
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) int autocapitalizationType; 
@property (assign,nonatomic) int autocorrectionType; 
@property (assign,nonatomic) int spellCheckingType; 
@property (assign,nonatomic) int keyboardType; 
@property (assign,nonatomic) int keyboardAppearance; 
@property (assign,nonatomic) int returnKeyType; 
@property (assign,nonatomic) char enablesReturnKeyAutomatically; 
@property (assign,getter=isSecureTextEntry,nonatomic) char secureTextEntry; 
@property (nonatomic,copy) NSString * textContentType; 
@property (assign,nonatomic) CFCharacterSetRef textTrimmingSet; 
@property (nonatomic,retain) UIColor * insertionPointColor; 
@property (nonatomic,retain) UIColor * selectionBarColor; 
@property (nonatomic,retain) UIColor * selectionHighlightColor; 
@property (nonatomic,retain) UIImage * selectionDragDotImage; 
@property (assign,nonatomic) unsigned insertionPointWidth; 
@property (assign,nonatomic) int textLoupeVisibility; 
@property (assign,nonatomic) int textSelectionBehavior; 
@property (assign,nonatomic) id textSuggestionDelegate; 
@property (assign,nonatomic) char isSingleLineDocument; 
@property (assign,nonatomic) char contentsIsSingleValue; 
@property (assign,nonatomic) char hasDefaultContents; 
@property (assign,nonatomic) char acceptsEmoji; 
@property (assign,nonatomic) char acceptsDictationSearchResults; 
@property (assign,nonatomic) char forceEnableDictation; 
@property (assign,nonatomic) char forceDisableDictation; 
@property (assign,nonatomic) char forceDefaultDictationInfo; 
@property (assign,nonatomic) int forceDictationKeyboardType; 
@property (assign,nonatomic) int emptyContentReturnKeyType; 
@property (assign,nonatomic) char returnKeyGoesToNextResponder; 
@property (assign,nonatomic) char acceptsFloatingKeyboard; 
@property (assign,nonatomic) char acceptsSplitKeyboard; 
@property (assign,nonatomic) char displaySecureTextUsingPlainText; 
@property (assign,nonatomic) char displaySecureEditsUsingPlainText; 
@property (assign,nonatomic) char learnsCorrections; 
@property (assign,nonatomic) int shortcutConversionType; 
@property (assign,nonatomic) char suppressReturnKeyStyling; 
@property (assign,nonatomic) char useInterfaceLanguageForLocalization; 
@property (assign,nonatomic) char deferBecomingResponder; 
@property (assign,nonatomic) char enablesReturnKeyOnNonWhiteSpaceContent; 
@property (nonatomic,copy) NSString * autocorrectionContext; 
@property (nonatomic,copy) NSString * responseContext; 
@property (nonatomic,retain) UIInputContextHistory * inputContextHistory; 
@property (assign,nonatomic) char disablePrediction; 
@property (assign,nonatomic) char disableInputBars; 
@property (assign,nonatomic) char isCarPlayIdiom; 
@property (assign,nonatomic) int textScriptType; 
@property (assign,getter=isDevicePasscodeEntry,nonatomic) char devicePasscodeEntry; 
+(id)traitsByAdoptingTraits:(id)arg1 ;
+(id)defaultTextInputTraits;
+(int)accessibleAppearanceForAppearance:(int)arg1 ;
+(int)configuredAppearanceForAppearance:(int)arg1 withTraitEnvironment:(id)arg2 ;
+(char)keyboardTypeRequiresASCIICapable:(int)arg1 ;
-(id)init;
-(void)dealloc;
-(char)isEqual:(id)arg1 ;
-(NSString *)description;
-(id)copyWithZone:(NSZone*)arg1 ;
-(int)autocapitalizationType;
-(void)setAutocapitalizationType:(int)arg1 ;
-(int)autocorrectionType;
-(void)setAutocorrectionType:(int)arg1 ;
-(int)spellCheckingType;
-(void)setSpellCheckingType:(int)arg1 ;
-(int)keyboardType;
-(void)setKeyboardType:(int)arg1 ;
-(int)keyboardAppearance;
-(void)setKeyboardAppearance:(int)arg1 ;
-(int)returnKeyType;
-(void)setReturnKeyType:(int)arg1 ;
-(char)enablesReturnKeyAutomatically;
-(void)setEnablesReturnKeyAutomatically:(char)arg1 ;
-(char)isSecureTextEntry;
-(void)setSecureTextEntry:(char)arg1 ;
-(NSString *)textContentType;
-(void)setTextContentType:(NSString *)arg1 ;
-(void)setToDefaultValues;
-(void)takeTraitsFrom:(id)arg1 ;
-(int)textSelectionBehavior;
-(char)displaySecureEditsUsingPlainText;
-(void)setDisplaySecureEditsUsingPlainText:(char)arg1 ;
-(char)displaySecureTextUsingPlainText;
-(CFCharacterSetRef)textTrimmingSet;
-(char)acceptsSplitKeyboard;
-(char)disableInputBars;
-(int)shortcutConversionType;
-(char)acceptsFloatingKeyboard;
-(char)disablePrediction;
-(NSString *)responseContext;
-(UIInputContextHistory *)inputContextHistory;
-(char)learnsCorrections;
-(void)setLearnsCorrections:(char)arg1 ;
-(void)setIsCarPlayIdiom:(char)arg1 ;
-(NSString *)autocorrectionContext;
-(void)setResponseContext:(NSString *)arg1 ;
-(void)setInputContextHistory:(UIInputContextHistory *)arg1 ;
-(int)updateResultComparedToTraits:(id)arg1 ;
-(NSString *)recentInputIdentifier;
-(void)setRecentInputIdentifier:(NSString *)arg1 ;
-(NSRange)validTextRange;
-(void)setValidTextRange:(NSRange)arg1 ;
-(NSIndexSet *)PINEntrySeparatorIndexes;
-(void)setPINEntrySeparatorIndexes:(NSIndexSet *)arg1 ;
-(void)setTextTrimmingSet:(CFCharacterSetRef)arg1 ;
-(UIColor *)insertionPointColor;
-(void)setInsertionPointColor:(UIColor *)arg1 ;
-(UIColor *)selectionBarColor;
-(void)setSelectionBarColor:(UIColor *)arg1 ;
-(UIColor *)selectionHighlightColor;
-(void)setSelectionHighlightColor:(UIColor *)arg1 ;
-(UIImage *)selectionDragDotImage;
-(void)setSelectionDragDotImage:(UIImage *)arg1 ;
-(unsigned)insertionPointWidth;
-(void)setInsertionPointWidth:(unsigned)arg1 ;
-(int)textLoupeVisibility;
-(void)setTextLoupeVisibility:(int)arg1 ;
-(void)setTextSelectionBehavior:(int)arg1 ;
-(id)textSuggestionDelegate;
-(void)setTextSuggestionDelegate:(id)arg1 ;
-(char)isSingleLineDocument;
-(void)setIsSingleLineDocument:(char)arg1 ;
-(char)contentsIsSingleValue;
-(void)setContentsIsSingleValue:(char)arg1 ;
-(char)hasDefaultContents;
-(void)setHasDefaultContents:(char)arg1 ;
-(char)acceptsEmoji;
-(void)setAcceptsEmoji:(char)arg1 ;
-(char)acceptsDictationSearchResults;
-(void)setAcceptsDictationSearchResults:(char)arg1 ;
-(char)forceEnableDictation;
-(void)setForceEnableDictation:(char)arg1 ;
-(char)forceDisableDictation;
-(void)setForceDisableDictation:(char)arg1 ;
-(char)forceDefaultDictationInfo;
-(void)setForceDefaultDictationInfo:(char)arg1 ;
-(int)forceDictationKeyboardType;
-(void)setForceDictationKeyboardType:(int)arg1 ;
-(int)emptyContentReturnKeyType;
-(void)setEmptyContentReturnKeyType:(int)arg1 ;
-(char)returnKeyGoesToNextResponder;
-(void)setReturnKeyGoesToNextResponder:(char)arg1 ;
-(void)setAcceptsFloatingKeyboard:(char)arg1 ;
-(void)setAcceptsSplitKeyboard:(char)arg1 ;
-(void)setDisplaySecureTextUsingPlainText:(char)arg1 ;
-(void)setShortcutConversionType:(int)arg1 ;
-(char)suppressReturnKeyStyling;
-(void)setSuppressReturnKeyStyling:(char)arg1 ;
-(char)useInterfaceLanguageForLocalization;
-(void)setUseInterfaceLanguageForLocalization:(char)arg1 ;
-(char)deferBecomingResponder;
-(void)setDeferBecomingResponder:(char)arg1 ;
-(char)enablesReturnKeyOnNonWhiteSpaceContent;
-(void)setEnablesReturnKeyOnNonWhiteSpaceContent:(char)arg1 ;
-(void)setAutocorrectionContext:(NSString *)arg1 ;
-(void)setDisablePrediction:(char)arg1 ;
-(void)setDisableInputBars:(char)arg1 ;
-(char)isCarPlayIdiom;
-(int)textScriptType;
-(void)setTextScriptType:(int)arg1 ;
-(char)isDevicePasscodeEntry;
-(void)setDevicePasscodeEntry:(char)arg1 ;
-(id)dictionaryRepresentation;
-(void)setToSecureValues;
-(void)setManageRecentInputs:(char)arg1 ;
-(char)manageRecentInputs;
-(char)publicTraitsMatchTraits:(id)arg1 ;
-(int)dictationKeyboardType;
-(int)dictationInfoKeyboardType;
-(void)_setColorsToMatchTintColor:(id)arg1 ;
@end

