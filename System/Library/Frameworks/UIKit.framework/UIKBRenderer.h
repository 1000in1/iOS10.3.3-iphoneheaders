/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:30:05 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <UIKit/UIKit-Structs.h>
@class UIColor, NSString, UIImage, NSData;

@interface UIKBRenderer : NSObject {

	CGContextRef _cachingContext;
	/*^block*/id _cachingContextCompletion;
	int _forceColorFormat;
	UIColor* _singleColor;
	int _colorCount;
	char _opaque;
	char _colorDetectMode;
	char _disableInternalCaching;
	CGContextRef _ctx;
	float _scale;
	int _renderFlags;
	NSString* _cacheKey;
	UIImage* _renderedImage;
	int _contentColorFormat;
	CGSize _size;

}

@property (nonatomic,readonly) CGContextRef context;                   //@synthesize ctx=_ctx - In the implementation block
@property (nonatomic,readonly) NSData * contextData; 
@property (nonatomic,readonly) CGSize size;                            //@synthesize size=_size - In the implementation block
@property (nonatomic,readonly) float scale;                            //@synthesize scale=_scale - In the implementation block
@property (nonatomic,readonly) char opaque;                            //@synthesize opaque=_opaque - In the implementation block
@property (nonatomic,readonly) int renderFlags;                        //@synthesize renderFlags=_renderFlags - In the implementation block
@property (nonatomic,readonly) UIImage * renderedImage;                //@synthesize renderedImage=_renderedImage - In the implementation block
@property (nonatomic,readonly) int contentColorFormat;                 //@synthesize contentColorFormat=_contentColorFormat - In the implementation block
@property (nonatomic,readonly) UIColor * singleColor; 
@property (nonatomic,retain) NSString * cacheKey;                      //@synthesize cacheKey=_cacheKey - In the implementation block
@property (assign,nonatomic) char colorDetectMode;                     //@synthesize colorDetectMode=_colorDetectMode - In the implementation block
@property (assign,nonatomic) char disableInternalCaching;              //@synthesize disableInternalCaching=_disableInternalCaching - In the implementation block
+(id)rendererWithContext:(CGContextRef)arg1 withSize:(CGSize)arg2 withScale:(float)arg3 opaque:(char)arg4 renderFlags:(int)arg5 ;
+(void)clearInternalCaches;
+(CGContextRef)imageContextWithSize:(CGSize)arg1 scale:(float)arg2 colorFormat:(int)arg3 opaque:(char)arg4 invert:(char)arg5 ;
-(CGSize)size;
-(void)dealloc;
-(id)description;
-(float)scale;
-(CGContextRef)context;
-(void)renderKeyContents:(id)arg1 withTraits:(id)arg2 ;
-(char)opaque;
-(void)renderBackgroundTraits:(id)arg1 ;
-(NSString *)cacheKey;
-(UIImage *)renderedImage;
-(int)renderFlags;
-(char)loadCachedImageForHashString:(id)arg1 ;
-(void)setDisableInternalCaching:(char)arg1 ;
-(void)setCacheKey:(NSString *)arg1 ;
-(void)setColorDetectMode:(char)arg1 ;
-(int)contentColorFormat;
-(void)forceColorFormat:(int)arg1 ;
-(UIColor *)singleColor;
-(NSData *)contextData;
-(void)renderEdgeEffect:(id)arg1 withTraits:(id)arg2 ;
-(void)renderShadowEffect:(id)arg1 withTraits:(id)arg2 ;
-(id)initWithContext:(CGContextRef)arg1 withSize:(CGSize)arg2 withScale:(float)arg3 opaque:(char)arg4 renderFlags:(int)arg5 ;
-(void)_addDetectedColor:(CGColorRef)arg1 ;
-(void)detectColorsForNamedColor:(id)arg1 ;
-(void)detectColorsForGradient:(id)arg1 ;
-(void)ensureContext;
-(void)detectColorsForEffect:(id)arg1 ;
-(void)addPathForTraits:(id)arg1 displayRect:(CGRect*)arg2 ;
-(void)addRoundRect:(CGRect)arg1 radius:(float)arg2 corners:(unsigned)arg3 ;
-(void)addPathForRenderGeometry:(id)arg1 ;
-(void)_drawLinearGradient:(id)arg1 inRect:(CGRect)arg2 ;
-(char)disableInternalCaching;
-(void)_completeCacheImageWithTraitsIfNecessary:(id)arg1 ;
-(void)renderBackgroundTraits:(id)arg1 allowCaching:(char)arg2 ;
-(unsigned)renderKeyStringContents:(id)arg1 withTraits:(id)arg2 status:(unsigned)arg3 ;
-(unsigned)renderKeyImageContents:(id)arg1 withTraits:(id)arg2 status:(unsigned)arg3 ;
-(char)renderKeyPathContents:(id)arg1 withTraits:(id)arg2 ;
-(void)_renderVariantsFromKeyContents:(id)arg1 withTraits:(id)arg2 ;
-(void)_drawKeyImage:(id)arg1 inRect:(CGRect)arg2 withStyle:(id)arg3 force1xImages:(char)arg4 flipHorizontally:(char)arg5 ;
-(char)_drawSingleSymbol:(id)arg1 inRect:(CGRect)arg2 withStyle:(id)arg3 ;
-(char)_drawKeyString:(id)arg1 inRect:(CGRect)arg2 withStyle:(id)arg3 ;
-(CGPathRef)_thickShiftGlyphPath;
-(CGPathRef)_thinShiftGlyphPath;
-(CGPathRef)_deleteGlyphPaths;
-(void)drawPath:(CGPathRef)arg1 weight:(float)arg2 transform:(CGAffineTransform)arg3 color:(CGColorRef)arg4 fill:(char)arg5 ;
-(void)drawShiftPath:(char)arg1 weight:(float)arg2 transform:(CGAffineTransform)arg3 color:(CGColorRef)arg4 ;
-(void)addPathForFlickPopupGeometries:(id)arg1 ;
-(void)addPathForFlickGeometry:(id)arg1 ;
-(void)addPathForSplitGeometry:(id)arg1 ;
-(id)pathForRenderGeometry:(id)arg1 ;
-(id)pathForFlickGeometry:(id)arg1 ;
-(id)pathForFlickPopupGeometries:(id)arg1 ;
-(id)pathForSplitGeometry:(id)arg1 ;
-(id)pathForConcaveCornerWithGeometry:(id)arg1 ;
-(char)colorDetectMode;
@end

