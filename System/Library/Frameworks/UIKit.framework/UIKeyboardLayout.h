/*
* This header is generated by classdump-dyld 1.0
* on Saturday, December 30, 2017 at 11:21:16 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/Frameworks/UIKit.framework/UIKit
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIKit-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/_UIScreenEdgePanRecognizerDelegate.h>
#import <UIKit/_UIKBRTRecognizerDelegate.h>
#import <UIKit/_UIKBRTTouchDriftingDelegate.h>

@protocol OS_dispatch_queue;
@class UITextInputTraits, UIKBScreenTraits, UIKBTextEditingTraits, NSMutableArray, NSUUID, UIKeyboardTaskQueue, _UIScreenEdgePanRecognizer, _UIKBRTRecognizer, _UIKBRTFingerDetection, UIKBCadenceMonitor, _UIKBRTTouchVelocities, _UIKBRTTouchDrifting, NSMutableDictionary, NSObject, NSMutableSet, NSString;

@interface UIKeyboardLayout : UIView <_UIScreenEdgePanRecognizerDelegate, _UIKBRTRecognizerDelegate, _UIKBRTTouchDriftingDelegate> {

	UITextInputTraits* _inputTraits;
	UIKBScreenTraits* _screenTraits;
	UIKBTextEditingTraits* _textEditingTraits;
	NSMutableArray* _uncommittedTouchUUIDs;
	NSUUID* _activeTouchUUID;
	NSUUID* _shiftKeyTouchUUID;
	unsigned _cursorLocation;
	char _disableInteraction;
	UIKeyboardTaskQueue* _taskQueue;
	char hideKeysUnderIndicator;
	char _hasPreferredHeight;
	char _isExecutingDeferredTouchTasks;
	char _listeningForWillChange;
	char _listeningForDidChange;
	float _preferredHeight;
	_UIScreenEdgePanRecognizer* _screenEdgePanRecognizer;
	/*^block*/id _deferredTouchDownTask;
	/*^block*/id _deferredTouchMovedTask;
	_UIKBRTRecognizer* _handRestRecognizer;
	_UIKBRTFingerDetection* _fingerDetection;
	UIKBCadenceMonitor* _cadenceMonitor;
	_UIKBRTTouchVelocities* _touchVelocities;
	/*^block*/id _deferredTaskForActiveTouch;
	_UIKBRTTouchDrifting* _touchDrifting;
	NSMutableDictionary* _deferredTouchTaskLists;
	NSObject*<OS_dispatch_queue> _deferredTouchTaskListsQueue;
	NSMutableSet* _touchIgnoredUUIDSet;
	double lastTouchUpTime;
	double _timestampOfLastTouchesEnded;

}

@property (nonatomic,retain) _UIScreenEdgePanRecognizer * screenEdgePanRecognizer;                  //@synthesize screenEdgePanRecognizer=_screenEdgePanRecognizer - In the implementation block
@property (nonatomic,retain) _UIKBRTRecognizer * handRestRecognizer;                                //@synthesize handRestRecognizer=_handRestRecognizer - In the implementation block
@property (nonatomic,retain) _UIKBRTFingerDetection * fingerDetection;                              //@synthesize fingerDetection=_fingerDetection - In the implementation block
@property (nonatomic,retain) _UIKBRTTouchDrifting * touchDrifting;                                  //@synthesize touchDrifting=_touchDrifting - In the implementation block
@property (nonatomic,retain) UIKBCadenceMonitor * cadenceMonitor;                                   //@synthesize cadenceMonitor=_cadenceMonitor - In the implementation block
@property (nonatomic,retain) _UIKBRTTouchVelocities * touchVelocities;                              //@synthesize touchVelocities=_touchVelocities - In the implementation block
@property (nonatomic,copy) id deferredTouchDownTask;                                                //@synthesize deferredTouchDownTask=_deferredTouchDownTask - In the implementation block
@property (nonatomic,copy) id deferredTouchMovedTask;                                               //@synthesize deferredTouchMovedTask=_deferredTouchMovedTask - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * deferredTouchTaskLists;                          //@synthesize deferredTouchTaskLists=_deferredTouchTaskLists - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> deferredTouchTaskListsQueue;              //@synthesize deferredTouchTaskListsQueue=_deferredTouchTaskListsQueue - In the implementation block
@property (nonatomic,retain) NSMutableSet * touchIgnoredUUIDSet;                                    //@synthesize touchIgnoredUUIDSet=_touchIgnoredUUIDSet - In the implementation block
@property (assign,nonatomic) char isExecutingDeferredTouchTasks;                                    //@synthesize isExecutingDeferredTouchTasks=_isExecutingDeferredTouchTasks - In the implementation block
@property (assign,nonatomic) double lastTouchUpTime; 
@property (assign,nonatomic) char listeningForWillChange;                                           //@synthesize listeningForWillChange=_listeningForWillChange - In the implementation block
@property (assign,nonatomic) char listeningForDidChange;                                            //@synthesize listeningForDidChange=_listeningForDidChange - In the implementation block
@property (nonatomic,retain) UIKeyboardTaskQueue * taskQueue; 
@property (nonatomic,retain) NSUUID * activeTouchUUID;                                              //@synthesize activeTouchUUID=_activeTouchUUID - In the implementation block
@property (nonatomic,retain) NSUUID * shiftKeyTouchUUID;                                            //@synthesize shiftKeyTouchUUID=_shiftKeyTouchUUID - In the implementation block
@property (nonatomic,readonly) int orientation; 
@property (nonatomic,readonly) int idiom; 
@property (assign,nonatomic) char hideKeysUnderIndicator; 
@property (nonatomic,retain) NSString * layoutTag; 
@property (nonatomic,readonly) double timestampOfLastTouchesEnded;                                  //@synthesize timestampOfLastTouchesEnded=_timestampOfLastTouchesEnded - In the implementation block
@property (nonatomic,copy) id deferredTaskForActiveTouch;                                           //@synthesize deferredTaskForActiveTouch=_deferredTaskForActiveTouch - In the implementation block
@property (assign,nonatomic) unsigned cursorLocation;                                               //@synthesize cursorLocation=_cursorLocation - In the implementation block
@property (assign,nonatomic) char disableInteraction;                                               //@synthesize disableInteraction=_disableInteraction - In the implementation block
@property (assign,nonatomic) float preferredHeight;                                                 //@synthesize preferredHeight=_preferredHeight - In the implementation block
@property (nonatomic,readonly) char hasPreferredHeight;                                             //@synthesize hasPreferredHeight=_hasPreferredHeight - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(CGSize)keyboardSizeForInputMode:(id)arg1 screenTraits:(id)arg2 keyboardType:(int)arg3 ;
+(char)_showSmallDisplayKeyplane;
+(Class)_subclassForScreenTraits:(id)arg1 ;
-(id)currentKeyplane;
-(UIKeyboardTaskQueue *)taskQueue;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)setShift:(char)arg1 ;
-(void)dealloc;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesEnded:(id)arg1 withEvent:(id)arg2 ;
-(void)touchesCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)setRenderConfig:(id)arg1 ;
-(int)orientation;
-(void)willMoveToWindow:(id)arg1 ;
-(void)touchesEstimatedPropertiesUpdated:(id)arg1 ;
-(id)candidateList;
-(unsigned)_uikbrtTouchDrifting:(id)arg1 fingerIDFortouchIdentifier:(id)arg2 ;
-(id)_uikbrtTouchDrifting:(id)arg1 touchIdentifiersForFingerID:(unsigned)arg2 ;
-(void)_uikbrtTouchDriftingStateChanged:(id)arg1 ;
-(CGPoint)_uikbrtTouchDrifting:(id)arg1 touchCenterForFingerID:(unsigned)arg2 ;
-(CGRect)dragGestureRectInView:(id)arg1 ;
-(void)resetTouchProcessingForKeyboardChange;
-(void)clearUnusedObjects:(char)arg1 ;
-(void)clearTransientState;
-(void)setCursorLocation:(unsigned)arg1 ;
-(void)updateTouchProcessingForKeyboardChange;
-(int)idiom;
-(char)isAlphabeticPlane;
-(char)hasCandidateKeys;
-(char)hasAccentKey;
-(char)canMultitap;
-(char)diacriticForwardCompose;
-(NSString *)layoutTag;
-(void)setLayoutTag:(NSString *)arg1 ;
-(void)deactivateActiveKeys;
-(CGRect)frameForKeylayoutName:(id)arg1 ;
-(char)shouldShowIndicator;
-(id)activationIndicatorView;
-(void)setHideKeysUnderIndicator:(char)arg1 ;
-(char)keyplaneContainsEmojiKey;
-(void)acceptRecentInputIfNecessary;
-(NSUUID *)activeTouchUUID;
-(void)setDeferredTaskForActiveTouch:(id)arg1 ;
-(char)performReturnAction;
-(void)showKeyboardWithInputTraits:(id)arg1 screenTraits:(id)arg2 splitTraits:(id)arg3 ;
-(void)setAutoshift:(char)arg1 ;
-(void)setTaskQueue:(UIKeyboardTaskQueue *)arg1 ;
-(char)shouldFadeFromLayout;
-(char)shouldFadeToLayout;
-(void)fadeWithInvocation:(id)arg1 ;
-(double)timestampOfLastTouchesEnded;
-(char)shouldAllowSelectionGestures:(char)arg1 atPoint:(CGPoint)arg2 toBegin:(char)arg3 ;
-(void)setTwoFingerTapTimestamp:(double)arg1 ;
-(CGSize)stretchFactor;
-(void)setLabel:(id)arg1 forKey:(id)arg2 ;
-(void)restoreDefaultsForKey:(id)arg1 ;
-(unsigned)textEditingKeyMask;
-(void)setTextEditingTraits:(id)arg1 ;
-(void)triggerSpaceKeyplaneSwitchIfNecessary;
-(void)didClearInput;
-(void)restoreDefaultsForAllKeys;
-(void)updateBackgroundCorners;
-(void)setTarget:(id)arg1 forKey:(id)arg2 ;
-(void)setAction:(SEL)arg1 forKey:(id)arg2 ;
-(void)setLongPressAction:(SEL)arg1 forKey:(id)arg2 ;
-(char)canProduceString:(id)arg1 ;
-(char)canHandleEvent:(id)arg1 ;
-(float)hitBuffer;
-(void)longPressAction;
-(void)setReturnKeyEnabled:(char)arg1 withDisplayName:(id)arg2 withType:(int)arg3 ;
-(char)usesAutoShift;
-(char)ignoresShiftState;
-(char)isShiftKeyPlaneChooser;
-(char)isShiftKeyBeingHeld;
-(void)updateLocalizedKeys:(char)arg1 ;
-(void)setRecentInputs:(id)arg1 ;
-(unsigned)cursorLocation;
-(char)disableInteraction;
-(void)setDisableInteraction:(char)arg1 ;
-(void)setPreferredHeight:(float)arg1 ;
-(void)setPasscodeOutlineAlpha:(float)arg1 ;
-(void)setDisableTouchInput:(char)arg1 ;
-(id)baseKeyForString:(id)arg1 ;
-(id)keyplaneForKey:(id)arg1 ;
-(id)keyplaneNamed:(id)arg1 ;
-(void)changeToKeyplane:(id)arg1 ;
-(id)simulateTouch:(CGPoint)arg1 ;
-(id)simulateTouchForCharacter:(id)arg1 errorVector:(CGPoint)arg2 shouldTypeVariants:(char)arg3 baseKeyForVariants:(char)arg4 ;
-(void)wipeGestureRecognized:(id)arg1 ;
-(void)addWipeRecognizer;
-(void)setActiveTouchUUID:(NSUUID *)arg1 ;
-(void)setShiftKeyTouchUUID:(NSUUID *)arg1 ;
-(SEL)handlerForNotification:(id)arg1 ;
-(_UIKBRTRecognizer *)handRestRecognizer;
-(UIKBCadenceMonitor *)cadenceMonitor;
-(void)touchDown:(id)arg1 executionContext:(id)arg2 ;
-(/*^block*/id)touchDownTaskForTouchState:(id)arg1 ;
-(char)_shouldAllowKeyboardHandlingIfNecessaryForTouch:(id)arg1 phase:(int)arg2 withTouchState:(id)arg3 task:(/*^block*/id)arg4 ;
-(void)touchDragged:(id)arg1 executionContext:(id)arg2 ;
-(/*^block*/id)touchDraggedTaskForTouchState:(id)arg1 ;
-(char)canForceTouchUUIDCommit:(id)arg1 inWindow:(id)arg2 ;
-(void)commitTouchUUIDs:(id)arg1 ;
-(void)touchUp:(id)arg1 ;
-(_UIScreenEdgePanRecognizer *)screenEdgePanRecognizer;
-(void)didFinishScreenGestureRecognition;
-(void)setDeferredTouchDownTask:(id)arg1 ;
-(void)setDeferredTouchMovedTask:(id)arg1 ;
-(void)clearShiftIfNecessaryForEndedTouchState:(id)arg1 ;
-(void)didCommitTouchState:(id)arg1 ;
-(void)touchUp:(id)arg1 executionContext:(id)arg2 ;
-(/*^block*/id)touchUpTaskForTouchState:(id)arg1 ;
-(void)setLastTouchUpTime:(double)arg1 ;
-(id)deferredTaskForActiveTouch;
-(void)touchCancelled:(id)arg1 forResting:(char)arg2 executionContext:(id)arg3 ;
-(/*^block*/id)touchCancelledTaskForTouchState:(id)arg1 forResting:(char)arg2 ;
-(void)touchChanged:(id)arg1 executionContext:(id)arg2 ;
-(/*^block*/id)touchChangedTaskForTouchState:(id)arg1 ;
-(char)_shouldAllowKeyboardHandlingForTouchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(id)touchUUIDsToCommitBeforeTouchUUID:(id)arg1 ;
-(void)touchDown:(id)arg1 ;
-(char)_shouldAllowKeyboardHandlingForTouchesMoved:(id)arg1 withEvent:(id)arg2 ;
-(void)touchDragged:(id)arg1 ;
-(char)_shouldAllowKeyboardHandlingForTouchesEndedOrCancelled:(id)arg1 withEvent:(id)arg2 ;
-(void)_removeTouchesFromProcessing:(id)arg1 ;
-(void)_touchEndedProcessingForTouches:(id)arg1 ;
-(void)touchCancelled:(id)arg1 ;
-(void)touchChanged:(id)arg1 ;
-(void)handRestRecognizerNotifyRestForBegin:(char)arg1 location:(CGPoint)arg2 timestamp:(double)arg3 pathIndex:(int)arg4 touchUUID:(id)arg5 context:(id)arg6 ;
-(void)forceUpdatesForCommittedTouch;
-(void)commitTouches:(id)arg1 executionContext:(id)arg2 ;
-(void)setIsExecutingDeferredTouchTasks:(char)arg1 ;
-(char)queryShouldNeverIgnoreTouchStateWithIdentifier:(id)arg1 touchState:(id)arg2 startPoint:(CGPoint)arg3 forRestingState:(unsigned)arg4 ;
-(void)_enumerateDeferredTouchUUIDs:(id)arg1 withBlock:(/*^block*/id)arg2 ;
-(void)recognizerBlockUntilTaskQueueReadyForceUsingDeferredTask:(char)arg1 ;
-(char)handRestRecognizerShouldNeverIgnoreTouchState:(id)arg1 fromPoint:(CGPoint)arg2 toPoint:(CGPoint)arg3 forRestingState:(unsigned)arg4 otherRestedTouchLocations:(id)arg5 ;
-(char)_handRestRecognizerCancelShouldBeEnd;
-(char)isExecutingDeferredTouchTasks;
-(_UIKBRTFingerDetection *)fingerDetection;
-(_UIKBRTTouchDrifting *)touchDrifting;
-(void)_executeDeferredTouchTasks;
-(char)_canAddTouchesToScreenGestureRecognizer:(id)arg1 ;
-(void)_addTouchToScreenEdgePanRecognizer:(id)arg1 ;
-(void)assertSavedLocation:(CGPoint)arg1 onTouch:(id)arg2 inWindow:(id)arg3 resetPrevious:(char)arg4 ;
-(void)_notifyLayoutOfGesturePosition:(CGPoint)arg1 relativeToEdge:(unsigned)arg2 ;
-(CGSize)handRestRecognizerStandardKeyPixelSize;
-(CGPoint)getCenterForKeyUnderLeftIndexFinger;
-(CGPoint)getCenterForKeyUnderRightIndexFinger;
-(id)getHorizontalOffsetFromHomeRowForRowRelativeToHomeRow:(int)arg1 ;
-(unsigned)targetEdgesForScreenGestureRecognition;
-(void)setScreenEdgePanRecognizer:(_UIScreenEdgePanRecognizer *)arg1 ;
-(unsigned char)getHandRestRecognizerState;
-(void)setCadenceMonitor:(UIKBCadenceMonitor *)arg1 ;
-(void)setTouchDrifting:(_UIKBRTTouchDrifting *)arg1 ;
-(void)setFingerDetection:(_UIKBRTFingerDetection *)arg1 ;
-(void)setHandRestRecognizer:(_UIKBRTRecognizer *)arg1 ;
-(_UIKBRTTouchVelocities *)touchVelocities;
-(void)setTouchVelocities:(_UIKBRTTouchVelocities *)arg1 ;
-(void)_resetFingerDetectionFromLayout;
-(void)resetHRRLayoutState;
-(double)lastTouchUpTime;
-(void)didRecognizeGestureOnEdge:(unsigned)arg1 withDistance:(float)arg2 ;
-(void)setNeedsVirtualDriftUpdate;
-(void)screenEdgePanRecognizerStateDidChange:(id)arg1 ;
-(void)recognizer:(id)arg1 beginTouchDownForTouchWithId:(id)arg2 atPoint:(CGPoint)arg3 forBeginState:(unsigned)arg4 whenStateReady:(/*^block*/id)arg5 ;
-(void)recognizer:(id)arg1 restartTouchDownForTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(CGPoint)arg4 currentPoint:(CGPoint)arg5 whenStateReady:(/*^block*/id)arg6 ;
-(void)recognizer:(id)arg1 shouldContinueTrackingTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(CGPoint)arg4 currentPoint:(CGPoint)arg5 forContinueState:(unsigned)arg6 whenStateReady:(/*^block*/id)arg7 ;
-(void)recognizer:(id)arg1 willIgnoreTouchWithId:(id)arg2 startingAt:(double)arg3 atPoint:(CGPoint)arg4 currentPoint:(CGPoint)arg5 whenReady:(/*^block*/id)arg6 ;
-(void)recognizer:(id)arg1 continueTrackingIgnoredTouchWithId:(id)arg2 currentPoint:(CGPoint)arg3 whenReady:(/*^block*/id)arg4 ;
-(void)recognizer:(id)arg1 releaseTouchToLayoutWithId:(id)arg2 startPoint:(CGPoint)arg3 endPoint:(CGPoint)arg4 whenReady:(/*^block*/id)arg5 ;
-(void)recognizer:(id)arg1 cancelTouchOnLayoutWithId:(id)arg2 startPoint:(CGPoint)arg3 endPoint:(CGPoint)arg4 whenReady:(/*^block*/id)arg5 ;
-(char)performSpaceAction;
-(void)deactivateActiveKeysClearingTouchInfo:(char)arg1 clearingDimming:(char)arg2 ;
-(void)touchCancelled:(id)arg1 executionContext:(id)arg2 ;
-(void)reloadKeyboardGestureRecognition;
-(void)updateTouchProcessingForKeyplaneChange;
-(/*^block*/id)handRestRecognizerSilenceNextTouchDown;
-(void)_updateTouchState:(id)arg1 errorVector:(CGPoint)arg2 rowOffsetFromHomeRow:(int)arg3 ;
-(void)_ignoreTouchState:(id)arg1 ;
-(char)_hasRelatedTouchesForTouchState:(id)arg1 ;
-(char)isReachableDevice;
-(char)supportsVirtualDrift;
-(CGPoint)leftVirtualDriftOffset;
-(CGPoint)rightVirtualDriftOffset;
-(unsigned)fingerIDForTouchUUID:(id)arg1 ;
-(float)flickDistance;
-(void)willBeginIndirectSelectionGesture;
-(void)didEndIndirectSelectionGesture;
-(void)cancelTouchesForTwoFingerTapGesture:(id)arg1 ;
-(char)keyplaneContainsDismissKey;
-(char)isEmojiKeyplane;
-(char)supportsEmoji;
-(NSUUID *)shiftKeyTouchUUID;
-(float)preferredHeight;
-(char)hideKeysUnderIndicator;
-(id)deferredTouchDownTask;
-(id)deferredTouchMovedTask;
-(char)hasPreferredHeight;
-(NSMutableDictionary *)deferredTouchTaskLists;
-(void)setDeferredTouchTaskLists:(NSMutableDictionary *)arg1 ;
-(NSObject*<OS_dispatch_queue>)deferredTouchTaskListsQueue;
-(void)setDeferredTouchTaskListsQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSMutableSet *)touchIgnoredUUIDSet;
-(void)setTouchIgnoredUUIDSet:(NSMutableSet *)arg1 ;
-(char)listeningForWillChange;
-(void)setListeningForWillChange:(char)arg1 ;
-(char)listeningForDidChange;
-(void)setListeningForDidChange:(char)arg1 ;
@end

