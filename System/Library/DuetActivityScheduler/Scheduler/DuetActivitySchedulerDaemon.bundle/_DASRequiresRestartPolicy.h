/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:37:10 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/DuetActivityScheduler/Scheduler/DuetActivitySchedulerDaemon.bundle/DuetActivitySchedulerDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DuetActivitySchedulerDaemon/_DASActivityPolicy.h>

@class NSString, _CDContextualKeyPath, NSArray, NSDate, _CDDateRange;

@interface _DASRequiresRestartPolicy : NSObject <_DASActivityPolicy> {

	NSString* _policyName;
	_CDContextualKeyPath* _deviceAssertionsHeld;
	_CDContextualKeyPath* _inUseStatus;
	_CDContextualKeyPath* _nextWakeRequest;
	NSArray* _triggers;
	NSDate* _lastCacheDate;
	_CDDateRange* _deviceRestartPeriod1;
	_CDDateRange* _deviceRestartPeriod2;
	double _minDurationAfterLastUserInteraction;
	double _minDurationBeforeNextScheduledWake;

}

@property (nonatomic,retain) NSString * policyName;                                    //@synthesize policyName=_policyName - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * deviceAssertionsHeld;              //@synthesize deviceAssertionsHeld=_deviceAssertionsHeld - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * inUseStatus;                       //@synthesize inUseStatus=_inUseStatus - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * nextWakeRequest;                   //@synthesize nextWakeRequest=_nextWakeRequest - In the implementation block
@property (nonatomic,retain) NSArray * triggers;                                       //@synthesize triggers=_triggers - In the implementation block
@property (retain) NSDate * lastCacheDate;                                             //@synthesize lastCacheDate=_lastCacheDate - In the implementation block
@property (nonatomic,retain) _CDDateRange * deviceRestartPeriod1;                      //@synthesize deviceRestartPeriod1=_deviceRestartPeriod1 - In the implementation block
@property (nonatomic,retain) _CDDateRange * deviceRestartPeriod2;                      //@synthesize deviceRestartPeriod2=_deviceRestartPeriod2 - In the implementation block
@property (assign,nonatomic) double minDurationAfterLastUserInteraction;               //@synthesize minDurationAfterLastUserInteraction=_minDurationAfterLastUserInteraction - In the implementation block
@property (assign,nonatomic) double minDurationBeforeNextScheduledWake;                //@synthesize minDurationBeforeNextScheduledWake=_minDurationBeforeNextScheduledWake - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)policyInstance;
-(id)initializeTriggers;
-(void)setPolicyName:(NSString *)arg1 ;
-(NSString *)policyName;
-(void)setInUseStatus:(_CDContextualKeyPath *)arg1 ;
-(NSDate *)lastCacheDate;
-(double)weightForActivity:(id)arg1 ;
-(id)responseForActivity:(id)arg1 withState:(id)arg2 ;
-(void)setLastCacheDate:(NSDate *)arg1 ;
-(_CDContextualKeyPath *)inUseStatus;
-(char)indicatesDeterioratingConditionsForTrigger:(id)arg1 withState:(id)arg2 ;
-(char)appliesToActivity:(id)arg1 ;
-(void)setDeviceRestartPeriod2:(_CDDateRange *)arg1 ;
-(double)minDurationAfterLastUserInteraction;
-(_CDDateRange *)deviceRestartPeriod1;
-(void)setDeviceRestartPeriod1:(_CDDateRange *)arg1 ;
-(_CDDateRange *)deviceRestartPeriod2;
-(void)setMinDurationBeforeNextScheduledWake:(double)arg1 ;
-(void)setMinDurationAfterLastUserInteraction:(double)arg1 ;
-(double)minDurationBeforeNextScheduledWake;
-(void)setDeviceAssertionsHeld:(_CDContextualKeyPath *)arg1 ;
-(void)setNextWakeRequest:(_CDContextualKeyPath *)arg1 ;
-(id)defaultDeviceRestartDateRangeWithDate:(id)arg1 ;
-(_CDContextualKeyPath *)nextWakeRequest;
-(_CDContextualKeyPath *)deviceAssertionsHeld;
-(id)init;
-(char)cacheSleepPeriod:(id)arg1 end:(id)arg2 period1:(id*)arg3 period2:(id*)arg4 ;
-(void)getDeviceRestartForecast;
-(NSArray *)triggers;
-(void)setTriggers:(NSArray *)arg1 ;
@end

