/*
* This header is generated by classdump-dyld 1.0
* on Friday, December 29, 2017 at 6:37:10 PM Japan Standard Time
* Operating System: Version 10.3.3 (Build 14G60)
* Image Source: /System/Library/DuetActivityScheduler/Scheduler/DuetActivitySchedulerDaemon.bundle/DuetActivitySchedulerDaemon
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <DuetActivitySchedulerDaemon/_DASActivityPolicy.h>

@class NSString, _CDContextualKeyPath, NSArray;

@interface _DASThermalPolicy : NSObject <_DASActivityPolicy> {

	NSString* _policyName;
	_CDContextualKeyPath* _thermalPressureLevelKeyPath;
	_CDContextualKeyPath* _watchThermalPressureLevelKeyPath;
	_CDContextualKeyPath* _thermalPressureColdKeyPath;
	NSArray* _triggers;

}

@property (nonatomic,retain) NSString * policyName;                                                //@synthesize policyName=_policyName - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * thermalPressureLevelKeyPath;                   //@synthesize thermalPressureLevelKeyPath=_thermalPressureLevelKeyPath - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * watchThermalPressureLevelKeyPath;              //@synthesize watchThermalPressureLevelKeyPath=_watchThermalPressureLevelKeyPath - In the implementation block
@property (nonatomic,retain) _CDContextualKeyPath * thermalPressureColdKeyPath;                    //@synthesize thermalPressureColdKeyPath=_thermalPressureColdKeyPath - In the implementation block
@property (nonatomic,retain) NSArray * triggers;                                                   //@synthesize triggers=_triggers - In the implementation block
@property (readonly) unsigned hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)policyInstance;
-(id)initializeTriggers;
-(void)setPolicyName:(NSString *)arg1 ;
-(NSString *)policyName;
-(void)setThermalPressureColdKeyPath:(_CDContextualKeyPath *)arg1 ;
-(_CDContextualKeyPath *)watchThermalPressureLevelKeyPath;
-(_CDContextualKeyPath *)thermalPressureLevelKeyPath;
-(_CDContextualKeyPath *)thermalPressureColdKeyPath;
-(void)setWatchThermalPressureLevelKeyPath:(_CDContextualKeyPath *)arg1 ;
-(void)setThermalPressureLevelKeyPath:(_CDContextualKeyPath *)arg1 ;
-(double)weightForActivity:(id)arg1 ;
-(id)responseForActivity:(id)arg1 withState:(id)arg2 ;
-(char)isTooColdWithContext:(id)arg1 ;
-(int)maxAllowableThermalPressureForActivity:(id)arg1 ;
-(double)getScoreForThermalLevel:(int)arg1 ;
-(char)indicatesDeterioratingConditionsForTrigger:(id)arg1 withState:(id)arg2 ;
-(char)appliesToActivity:(id)arg1 ;
-(id)init;
-(NSArray *)triggers;
-(void)setTriggers:(NSArray *)arg1 ;
@end

